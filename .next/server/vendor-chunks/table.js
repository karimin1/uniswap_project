"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/table";
exports.ids = ["vendor-chunks/table"];
exports.modules = {

/***/ "(ssr)/./node_modules/table/dist/src/alignSpanningCell.js":
/*!**********************************************************!*\
  !*** ./node_modules/table/dist/src/alignSpanningCell.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.alignVerticalRangeContent = exports.wrapRangeContent = void 0;\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"(ssr)/./node_modules/string-width/index.js\"));\nconst alignString_1 = __webpack_require__(/*! ./alignString */ \"(ssr)/./node_modules/table/dist/src/alignString.js\");\nconst mapDataUsingRowHeights_1 = __webpack_require__(/*! ./mapDataUsingRowHeights */ \"(ssr)/./node_modules/table/dist/src/mapDataUsingRowHeights.js\");\nconst padTableData_1 = __webpack_require__(/*! ./padTableData */ \"(ssr)/./node_modules/table/dist/src/padTableData.js\");\nconst truncateTableData_1 = __webpack_require__(/*! ./truncateTableData */ \"(ssr)/./node_modules/table/dist/src/truncateTableData.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst wrapCell_1 = __webpack_require__(/*! ./wrapCell */ \"(ssr)/./node_modules/table/dist/src/wrapCell.js\");\n/**\n * Fill content into all cells in range in order to calculate total height\n */\nconst wrapRangeContent = (rangeConfig, rangeWidth, context) => {\n    const { topLeft, paddingRight, paddingLeft, truncate, wrapWord, alignment } = rangeConfig;\n    const originalContent = context.rows[topLeft.row][topLeft.col];\n    const contentWidth = rangeWidth - paddingLeft - paddingRight;\n    return (0, wrapCell_1.wrapCell)((0, truncateTableData_1.truncateString)(originalContent, truncate), contentWidth, wrapWord).map((line) => {\n        const alignedLine = (0, alignString_1.alignString)(line, contentWidth, alignment);\n        return (0, padTableData_1.padString)(alignedLine, paddingLeft, paddingRight);\n    });\n};\nexports.wrapRangeContent = wrapRangeContent;\nconst alignVerticalRangeContent = (range, content, context) => {\n    const { rows, drawHorizontalLine, rowHeights } = context;\n    const { topLeft, bottomRight, verticalAlignment } = range;\n    // They are empty before calculateRowHeights function run\n    if (rowHeights.length === 0) {\n        return [];\n    }\n    const totalCellHeight = (0, utils_1.sumArray)(rowHeights.slice(topLeft.row, bottomRight.row + 1));\n    const totalBorderHeight = bottomRight.row - topLeft.row;\n    const hiddenHorizontalBorderCount = (0, utils_1.sequence)(topLeft.row + 1, bottomRight.row).filter((horizontalBorderIndex) => {\n        return !drawHorizontalLine(horizontalBorderIndex, rows.length);\n    }).length;\n    const availableRangeHeight = totalCellHeight + totalBorderHeight - hiddenHorizontalBorderCount;\n    return (0, mapDataUsingRowHeights_1.padCellVertically)(content, availableRangeHeight, verticalAlignment).map((line) => {\n        if (line.length === 0) {\n            return ' '.repeat((0, string_width_1.default)(content[0]));\n        }\n        return line;\n    });\n};\nexports.alignVerticalRangeContent = alignVerticalRangeContent;\n//# sourceMappingURL=alignSpanningCell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvYWxpZ25TcGFubmluZ0NlbGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyx3QkFBd0I7QUFDNUQsdUNBQXVDLG1CQUFPLENBQUMsZ0VBQWM7QUFDN0Qsc0JBQXNCLG1CQUFPLENBQUMseUVBQWU7QUFDN0MsaUNBQWlDLG1CQUFPLENBQUMsK0ZBQTBCO0FBQ25FLHVCQUF1QixtQkFBTyxDQUFDLDJFQUFnQjtBQUMvQyw0QkFBNEIsbUJBQU8sQ0FBQyxxRkFBcUI7QUFDekQsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakMsbUJBQW1CLG1CQUFPLENBQUMsbUVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG9FQUFvRTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0EsWUFBWSx1Q0FBdUM7QUFDbkQsWUFBWSwwQ0FBMEM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxpQ0FBaUM7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2FsaWduU3Bhbm5pbmdDZWxsLmpzP2EwNTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFsaWduVmVydGljYWxSYW5nZUNvbnRlbnQgPSBleHBvcnRzLndyYXBSYW5nZUNvbnRlbnQgPSB2b2lkIDA7XG5jb25zdCBzdHJpbmdfd2lkdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3RyaW5nLXdpZHRoXCIpKTtcbmNvbnN0IGFsaWduU3RyaW5nXzEgPSByZXF1aXJlKFwiLi9hbGlnblN0cmluZ1wiKTtcbmNvbnN0IG1hcERhdGFVc2luZ1Jvd0hlaWdodHNfMSA9IHJlcXVpcmUoXCIuL21hcERhdGFVc2luZ1Jvd0hlaWdodHNcIik7XG5jb25zdCBwYWRUYWJsZURhdGFfMSA9IHJlcXVpcmUoXCIuL3BhZFRhYmxlRGF0YVwiKTtcbmNvbnN0IHRydW5jYXRlVGFibGVEYXRhXzEgPSByZXF1aXJlKFwiLi90cnVuY2F0ZVRhYmxlRGF0YVwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHdyYXBDZWxsXzEgPSByZXF1aXJlKFwiLi93cmFwQ2VsbFwiKTtcbi8qKlxuICogRmlsbCBjb250ZW50IGludG8gYWxsIGNlbGxzIGluIHJhbmdlIGluIG9yZGVyIHRvIGNhbGN1bGF0ZSB0b3RhbCBoZWlnaHRcbiAqL1xuY29uc3Qgd3JhcFJhbmdlQ29udGVudCA9IChyYW5nZUNvbmZpZywgcmFuZ2VXaWR0aCwgY29udGV4dCkgPT4ge1xuICAgIGNvbnN0IHsgdG9wTGVmdCwgcGFkZGluZ1JpZ2h0LCBwYWRkaW5nTGVmdCwgdHJ1bmNhdGUsIHdyYXBXb3JkLCBhbGlnbm1lbnQgfSA9IHJhbmdlQ29uZmlnO1xuICAgIGNvbnN0IG9yaWdpbmFsQ29udGVudCA9IGNvbnRleHQucm93c1t0b3BMZWZ0LnJvd11bdG9wTGVmdC5jb2xdO1xuICAgIGNvbnN0IGNvbnRlbnRXaWR0aCA9IHJhbmdlV2lkdGggLSBwYWRkaW5nTGVmdCAtIHBhZGRpbmdSaWdodDtcbiAgICByZXR1cm4gKDAsIHdyYXBDZWxsXzEud3JhcENlbGwpKCgwLCB0cnVuY2F0ZVRhYmxlRGF0YV8xLnRydW5jYXRlU3RyaW5nKShvcmlnaW5hbENvbnRlbnQsIHRydW5jYXRlKSwgY29udGVudFdpZHRoLCB3cmFwV29yZCkubWFwKChsaW5lKSA9PiB7XG4gICAgICAgIGNvbnN0IGFsaWduZWRMaW5lID0gKDAsIGFsaWduU3RyaW5nXzEuYWxpZ25TdHJpbmcpKGxpbmUsIGNvbnRlbnRXaWR0aCwgYWxpZ25tZW50KTtcbiAgICAgICAgcmV0dXJuICgwLCBwYWRUYWJsZURhdGFfMS5wYWRTdHJpbmcpKGFsaWduZWRMaW5lLCBwYWRkaW5nTGVmdCwgcGFkZGluZ1JpZ2h0KTtcbiAgICB9KTtcbn07XG5leHBvcnRzLndyYXBSYW5nZUNvbnRlbnQgPSB3cmFwUmFuZ2VDb250ZW50O1xuY29uc3QgYWxpZ25WZXJ0aWNhbFJhbmdlQ29udGVudCA9IChyYW5nZSwgY29udGVudCwgY29udGV4dCkgPT4ge1xuICAgIGNvbnN0IHsgcm93cywgZHJhd0hvcml6b250YWxMaW5lLCByb3dIZWlnaHRzIH0gPSBjb250ZXh0O1xuICAgIGNvbnN0IHsgdG9wTGVmdCwgYm90dG9tUmlnaHQsIHZlcnRpY2FsQWxpZ25tZW50IH0gPSByYW5nZTtcbiAgICAvLyBUaGV5IGFyZSBlbXB0eSBiZWZvcmUgY2FsY3VsYXRlUm93SGVpZ2h0cyBmdW5jdGlvbiBydW5cbiAgICBpZiAocm93SGVpZ2h0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFtdO1xuICAgIH1cbiAgICBjb25zdCB0b3RhbENlbGxIZWlnaHQgPSAoMCwgdXRpbHNfMS5zdW1BcnJheSkocm93SGVpZ2h0cy5zbGljZSh0b3BMZWZ0LnJvdywgYm90dG9tUmlnaHQucm93ICsgMSkpO1xuICAgIGNvbnN0IHRvdGFsQm9yZGVySGVpZ2h0ID0gYm90dG9tUmlnaHQucm93IC0gdG9wTGVmdC5yb3c7XG4gICAgY29uc3QgaGlkZGVuSG9yaXpvbnRhbEJvcmRlckNvdW50ID0gKDAsIHV0aWxzXzEuc2VxdWVuY2UpKHRvcExlZnQucm93ICsgMSwgYm90dG9tUmlnaHQucm93KS5maWx0ZXIoKGhvcml6b250YWxCb3JkZXJJbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4gIWRyYXdIb3Jpem9udGFsTGluZShob3Jpem9udGFsQm9yZGVySW5kZXgsIHJvd3MubGVuZ3RoKTtcbiAgICB9KS5sZW5ndGg7XG4gICAgY29uc3QgYXZhaWxhYmxlUmFuZ2VIZWlnaHQgPSB0b3RhbENlbGxIZWlnaHQgKyB0b3RhbEJvcmRlckhlaWdodCAtIGhpZGRlbkhvcml6b250YWxCb3JkZXJDb3VudDtcbiAgICByZXR1cm4gKDAsIG1hcERhdGFVc2luZ1Jvd0hlaWdodHNfMS5wYWRDZWxsVmVydGljYWxseSkoY29udGVudCwgYXZhaWxhYmxlUmFuZ2VIZWlnaHQsIHZlcnRpY2FsQWxpZ25tZW50KS5tYXAoKGxpbmUpID0+IHtcbiAgICAgICAgaWYgKGxpbmUubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gJyAnLnJlcGVhdCgoMCwgc3RyaW5nX3dpZHRoXzEuZGVmYXVsdCkoY29udGVudFswXSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBsaW5lO1xuICAgIH0pO1xufTtcbmV4cG9ydHMuYWxpZ25WZXJ0aWNhbFJhbmdlQ29udGVudCA9IGFsaWduVmVydGljYWxSYW5nZUNvbnRlbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbGlnblNwYW5uaW5nQ2VsbC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/alignSpanningCell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/alignString.js":
/*!****************************************************!*\
  !*** ./node_modules/table/dist/src/alignString.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.alignString = void 0;\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"(ssr)/./node_modules/string-width/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst alignLeft = (subject, width) => {\n    return subject + ' '.repeat(width);\n};\nconst alignRight = (subject, width) => {\n    return ' '.repeat(width) + subject;\n};\nconst alignCenter = (subject, width) => {\n    return ' '.repeat(Math.floor(width / 2)) + subject + ' '.repeat(Math.ceil(width / 2));\n};\nconst alignJustify = (subject, width) => {\n    const spaceSequenceCount = (0, utils_1.countSpaceSequence)(subject);\n    if (spaceSequenceCount === 0) {\n        return alignLeft(subject, width);\n    }\n    const addingSpaces = (0, utils_1.distributeUnevenly)(width, spaceSequenceCount);\n    if (Math.max(...addingSpaces) > 3) {\n        return alignLeft(subject, width);\n    }\n    let spaceSequenceIndex = 0;\n    return subject.replace(/\\s+/g, (groupSpace) => {\n        return groupSpace + ' '.repeat(addingSpaces[spaceSequenceIndex++]);\n    });\n};\n/**\n * Pads a string to the left and/or right to position the subject\n * text in a desired alignment within a container.\n */\nconst alignString = (subject, containerWidth, alignment) => {\n    const subjectWidth = (0, string_width_1.default)(subject);\n    if (subjectWidth === containerWidth) {\n        return subject;\n    }\n    if (subjectWidth > containerWidth) {\n        throw new Error('Subject parameter value width cannot be greater than the container width.');\n    }\n    if (subjectWidth === 0) {\n        return ' '.repeat(containerWidth);\n    }\n    const availableWidth = containerWidth - subjectWidth;\n    if (alignment === 'left') {\n        return alignLeft(subject, availableWidth);\n    }\n    if (alignment === 'right') {\n        return alignRight(subject, availableWidth);\n    }\n    if (alignment === 'justify') {\n        return alignJustify(subject, availableWidth);\n    }\n    return alignCenter(subject, availableWidth);\n};\nexports.alignString = alignString;\n//# sourceMappingURL=alignString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvYWxpZ25TdHJpbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsdUNBQXVDLG1CQUFPLENBQUMsZ0VBQWM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9hbGlnblN0cmluZy5qcz9iNjQ2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hbGlnblN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IHN0cmluZ193aWR0aF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJzdHJpbmctd2lkdGhcIikpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgYWxpZ25MZWZ0ID0gKHN1YmplY3QsIHdpZHRoKSA9PiB7XG4gICAgcmV0dXJuIHN1YmplY3QgKyAnICcucmVwZWF0KHdpZHRoKTtcbn07XG5jb25zdCBhbGlnblJpZ2h0ID0gKHN1YmplY3QsIHdpZHRoKSA9PiB7XG4gICAgcmV0dXJuICcgJy5yZXBlYXQod2lkdGgpICsgc3ViamVjdDtcbn07XG5jb25zdCBhbGlnbkNlbnRlciA9IChzdWJqZWN0LCB3aWR0aCkgPT4ge1xuICAgIHJldHVybiAnICcucmVwZWF0KE1hdGguZmxvb3Iod2lkdGggLyAyKSkgKyBzdWJqZWN0ICsgJyAnLnJlcGVhdChNYXRoLmNlaWwod2lkdGggLyAyKSk7XG59O1xuY29uc3QgYWxpZ25KdXN0aWZ5ID0gKHN1YmplY3QsIHdpZHRoKSA9PiB7XG4gICAgY29uc3Qgc3BhY2VTZXF1ZW5jZUNvdW50ID0gKDAsIHV0aWxzXzEuY291bnRTcGFjZVNlcXVlbmNlKShzdWJqZWN0KTtcbiAgICBpZiAoc3BhY2VTZXF1ZW5jZUNvdW50ID09PSAwKSB7XG4gICAgICAgIHJldHVybiBhbGlnbkxlZnQoc3ViamVjdCwgd2lkdGgpO1xuICAgIH1cbiAgICBjb25zdCBhZGRpbmdTcGFjZXMgPSAoMCwgdXRpbHNfMS5kaXN0cmlidXRlVW5ldmVubHkpKHdpZHRoLCBzcGFjZVNlcXVlbmNlQ291bnQpO1xuICAgIGlmIChNYXRoLm1heCguLi5hZGRpbmdTcGFjZXMpID4gMykge1xuICAgICAgICByZXR1cm4gYWxpZ25MZWZ0KHN1YmplY3QsIHdpZHRoKTtcbiAgICB9XG4gICAgbGV0IHNwYWNlU2VxdWVuY2VJbmRleCA9IDA7XG4gICAgcmV0dXJuIHN1YmplY3QucmVwbGFjZSgvXFxzKy9nLCAoZ3JvdXBTcGFjZSkgPT4ge1xuICAgICAgICByZXR1cm4gZ3JvdXBTcGFjZSArICcgJy5yZXBlYXQoYWRkaW5nU3BhY2VzW3NwYWNlU2VxdWVuY2VJbmRleCsrXSk7XG4gICAgfSk7XG59O1xuLyoqXG4gKiBQYWRzIGEgc3RyaW5nIHRvIHRoZSBsZWZ0IGFuZC9vciByaWdodCB0byBwb3NpdGlvbiB0aGUgc3ViamVjdFxuICogdGV4dCBpbiBhIGRlc2lyZWQgYWxpZ25tZW50IHdpdGhpbiBhIGNvbnRhaW5lci5cbiAqL1xuY29uc3QgYWxpZ25TdHJpbmcgPSAoc3ViamVjdCwgY29udGFpbmVyV2lkdGgsIGFsaWdubWVudCkgPT4ge1xuICAgIGNvbnN0IHN1YmplY3RXaWR0aCA9ICgwLCBzdHJpbmdfd2lkdGhfMS5kZWZhdWx0KShzdWJqZWN0KTtcbiAgICBpZiAoc3ViamVjdFdpZHRoID09PSBjb250YWluZXJXaWR0aCkge1xuICAgICAgICByZXR1cm4gc3ViamVjdDtcbiAgICB9XG4gICAgaWYgKHN1YmplY3RXaWR0aCA+IGNvbnRhaW5lcldpZHRoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignU3ViamVjdCBwYXJhbWV0ZXIgdmFsdWUgd2lkdGggY2Fubm90IGJlIGdyZWF0ZXIgdGhhbiB0aGUgY29udGFpbmVyIHdpZHRoLicpO1xuICAgIH1cbiAgICBpZiAoc3ViamVjdFdpZHRoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnICcucmVwZWF0KGNvbnRhaW5lcldpZHRoKTtcbiAgICB9XG4gICAgY29uc3QgYXZhaWxhYmxlV2lkdGggPSBjb250YWluZXJXaWR0aCAtIHN1YmplY3RXaWR0aDtcbiAgICBpZiAoYWxpZ25tZW50ID09PSAnbGVmdCcpIHtcbiAgICAgICAgcmV0dXJuIGFsaWduTGVmdChzdWJqZWN0LCBhdmFpbGFibGVXaWR0aCk7XG4gICAgfVxuICAgIGlmIChhbGlnbm1lbnQgPT09ICdyaWdodCcpIHtcbiAgICAgICAgcmV0dXJuIGFsaWduUmlnaHQoc3ViamVjdCwgYXZhaWxhYmxlV2lkdGgpO1xuICAgIH1cbiAgICBpZiAoYWxpZ25tZW50ID09PSAnanVzdGlmeScpIHtcbiAgICAgICAgcmV0dXJuIGFsaWduSnVzdGlmeShzdWJqZWN0LCBhdmFpbGFibGVXaWR0aCk7XG4gICAgfVxuICAgIHJldHVybiBhbGlnbkNlbnRlcihzdWJqZWN0LCBhdmFpbGFibGVXaWR0aCk7XG59O1xuZXhwb3J0cy5hbGlnblN0cmluZyA9IGFsaWduU3RyaW5nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWxpZ25TdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/alignString.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/alignTableData.js":
/*!*******************************************************!*\
  !*** ./node_modules/table/dist/src/alignTableData.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.alignTableData = void 0;\nconst alignString_1 = __webpack_require__(/*! ./alignString */ \"(ssr)/./node_modules/table/dist/src/alignString.js\");\nconst alignTableData = (rows, config) => {\n    return rows.map((row, rowIndex) => {\n        return row.map((cell, cellIndex) => {\n            var _a;\n            const { width, alignment } = config.columns[cellIndex];\n            const containingRange = (_a = config.spanningCellManager) === null || _a === void 0 ? void 0 : _a.getContainingRange({ col: cellIndex,\n                row: rowIndex }, { mapped: true });\n            if (containingRange) {\n                return cell;\n            }\n            return (0, alignString_1.alignString)(cell, width, alignment);\n        });\n    });\n};\nexports.alignTableData = alignTableData;\n//# sourceMappingURL=alignTableData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvYWxpZ25UYWJsZURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCLHNCQUFzQixtQkFBTyxDQUFDLHlFQUFlO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG1CQUFtQjtBQUN2QyxtSUFBbUk7QUFDbkksK0JBQStCLElBQUksY0FBYztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2FsaWduVGFibGVEYXRhLmpzPzBlMDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmFsaWduVGFibGVEYXRhID0gdm9pZCAwO1xuY29uc3QgYWxpZ25TdHJpbmdfMSA9IHJlcXVpcmUoXCIuL2FsaWduU3RyaW5nXCIpO1xuY29uc3QgYWxpZ25UYWJsZURhdGEgPSAocm93cywgY29uZmlnKSA9PiB7XG4gICAgcmV0dXJuIHJvd3MubWFwKChyb3csIHJvd0luZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiByb3cubWFwKChjZWxsLCBjZWxsSW5kZXgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IHsgd2lkdGgsIGFsaWdubWVudCB9ID0gY29uZmlnLmNvbHVtbnNbY2VsbEluZGV4XTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5pbmdSYW5nZSA9IChfYSA9IGNvbmZpZy5zcGFubmluZ0NlbGxNYW5hZ2VyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0Q29udGFpbmluZ1JhbmdlKHsgY29sOiBjZWxsSW5kZXgsXG4gICAgICAgICAgICAgICAgcm93OiByb3dJbmRleCB9LCB7IG1hcHBlZDogdHJ1ZSB9KTtcbiAgICAgICAgICAgIGlmIChjb250YWluaW5nUmFuZ2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2VsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAoMCwgYWxpZ25TdHJpbmdfMS5hbGlnblN0cmluZykoY2VsbCwgd2lkdGgsIGFsaWdubWVudCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbmV4cG9ydHMuYWxpZ25UYWJsZURhdGEgPSBhbGlnblRhYmxlRGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFsaWduVGFibGVEYXRhLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/alignTableData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/calculateCellHeight.js":
/*!************************************************************!*\
  !*** ./node_modules/table/dist/src/calculateCellHeight.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateCellHeight = void 0;\nconst wrapCell_1 = __webpack_require__(/*! ./wrapCell */ \"(ssr)/./node_modules/table/dist/src/wrapCell.js\");\n/**\n * Calculates height of cell content in regard to its width and word wrapping.\n */\nconst calculateCellHeight = (value, columnWidth, useWrapWord = false) => {\n    return (0, wrapCell_1.wrapCell)(value, columnWidth, useWrapWord).length;\n};\nexports.calculateCellHeight = calculateCellHeight;\n//# sourceMappingURL=calculateCellHeight.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlQ2VsbEhlaWdodC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsbUJBQW1CLG1CQUFPLENBQUMsbUVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9jYWxjdWxhdGVDZWxsSGVpZ2h0LmpzPzEyNTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbGN1bGF0ZUNlbGxIZWlnaHQgPSB2b2lkIDA7XG5jb25zdCB3cmFwQ2VsbF8xID0gcmVxdWlyZShcIi4vd3JhcENlbGxcIik7XG4vKipcbiAqIENhbGN1bGF0ZXMgaGVpZ2h0IG9mIGNlbGwgY29udGVudCBpbiByZWdhcmQgdG8gaXRzIHdpZHRoIGFuZCB3b3JkIHdyYXBwaW5nLlxuICovXG5jb25zdCBjYWxjdWxhdGVDZWxsSGVpZ2h0ID0gKHZhbHVlLCBjb2x1bW5XaWR0aCwgdXNlV3JhcFdvcmQgPSBmYWxzZSkgPT4ge1xuICAgIHJldHVybiAoMCwgd3JhcENlbGxfMS53cmFwQ2VsbCkodmFsdWUsIGNvbHVtbldpZHRoLCB1c2VXcmFwV29yZCkubGVuZ3RoO1xufTtcbmV4cG9ydHMuY2FsY3VsYXRlQ2VsbEhlaWdodCA9IGNhbGN1bGF0ZUNlbGxIZWlnaHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjdWxhdGVDZWxsSGVpZ2h0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/calculateCellHeight.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/calculateMaximumColumnWidths.js":
/*!*********************************************************************!*\
  !*** ./node_modules/table/dist/src/calculateMaximumColumnWidths.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateMaximumColumnWidths = exports.calculateMaximumCellWidth = void 0;\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"(ssr)/./node_modules/string-width/index.js\"));\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst calculateMaximumCellWidth = (cell) => {\n    return Math.max(...cell.split('\\n').map(string_width_1.default));\n};\nexports.calculateMaximumCellWidth = calculateMaximumCellWidth;\n/**\n * Produces an array of values that describe the largest value length (width) in every column.\n */\nconst calculateMaximumColumnWidths = (rows, spanningCellConfigs = []) => {\n    const columnWidths = new Array(rows[0].length).fill(0);\n    const rangeCoordinates = spanningCellConfigs.map(utils_1.calculateRangeCoordinate);\n    const isSpanningCell = (rowIndex, columnIndex) => {\n        return rangeCoordinates.some((rangeCoordinate) => {\n            return (0, utils_1.isCellInRange)({ col: columnIndex,\n                row: rowIndex }, rangeCoordinate);\n        });\n    };\n    rows.forEach((row, rowIndex) => {\n        row.forEach((cell, cellIndex) => {\n            if (isSpanningCell(rowIndex, cellIndex)) {\n                return;\n            }\n            columnWidths[cellIndex] = Math.max(columnWidths[cellIndex], (0, exports.calculateMaximumCellWidth)(cell));\n        });\n    });\n    return columnWidths;\n};\nexports.calculateMaximumColumnWidths = calculateMaximumColumnWidths;\n//# sourceMappingURL=calculateMaximumColumnWidths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRocy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9DQUFvQyxHQUFHLGlDQUFpQztBQUN4RSx1Q0FBdUMsbUJBQU8sQ0FBQyxnRUFBYztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRDtBQUNoRCwrQkFBK0I7QUFDL0IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9jYWxjdWxhdGVNYXhpbXVtQ29sdW1uV2lkdGhzLmpzPzljNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbGN1bGF0ZU1heGltdW1Db2x1bW5XaWR0aHMgPSBleHBvcnRzLmNhbGN1bGF0ZU1heGltdW1DZWxsV2lkdGggPSB2b2lkIDA7XG5jb25zdCBzdHJpbmdfd2lkdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3RyaW5nLXdpZHRoXCIpKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGNhbGN1bGF0ZU1heGltdW1DZWxsV2lkdGggPSAoY2VsbCkgPT4ge1xuICAgIHJldHVybiBNYXRoLm1heCguLi5jZWxsLnNwbGl0KCdcXG4nKS5tYXAoc3RyaW5nX3dpZHRoXzEuZGVmYXVsdCkpO1xufTtcbmV4cG9ydHMuY2FsY3VsYXRlTWF4aW11bUNlbGxXaWR0aCA9IGNhbGN1bGF0ZU1heGltdW1DZWxsV2lkdGg7XG4vKipcbiAqIFByb2R1Y2VzIGFuIGFycmF5IG9mIHZhbHVlcyB0aGF0IGRlc2NyaWJlIHRoZSBsYXJnZXN0IHZhbHVlIGxlbmd0aCAod2lkdGgpIGluIGV2ZXJ5IGNvbHVtbi5cbiAqL1xuY29uc3QgY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRocyA9IChyb3dzLCBzcGFubmluZ0NlbGxDb25maWdzID0gW10pID0+IHtcbiAgICBjb25zdCBjb2x1bW5XaWR0aHMgPSBuZXcgQXJyYXkocm93c1swXS5sZW5ndGgpLmZpbGwoMCk7XG4gICAgY29uc3QgcmFuZ2VDb29yZGluYXRlcyA9IHNwYW5uaW5nQ2VsbENvbmZpZ3MubWFwKHV0aWxzXzEuY2FsY3VsYXRlUmFuZ2VDb29yZGluYXRlKTtcbiAgICBjb25zdCBpc1NwYW5uaW5nQ2VsbCA9IChyb3dJbmRleCwgY29sdW1uSW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIHJhbmdlQ29vcmRpbmF0ZXMuc29tZSgocmFuZ2VDb29yZGluYXRlKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuaXNDZWxsSW5SYW5nZSkoeyBjb2w6IGNvbHVtbkluZGV4LFxuICAgICAgICAgICAgICAgIHJvdzogcm93SW5kZXggfSwgcmFuZ2VDb29yZGluYXRlKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByb3dzLmZvckVhY2goKHJvdywgcm93SW5kZXgpID0+IHtcbiAgICAgICAgcm93LmZvckVhY2goKGNlbGwsIGNlbGxJbmRleCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlzU3Bhbm5pbmdDZWxsKHJvd0luZGV4LCBjZWxsSW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29sdW1uV2lkdGhzW2NlbGxJbmRleF0gPSBNYXRoLm1heChjb2x1bW5XaWR0aHNbY2VsbEluZGV4XSwgKDAsIGV4cG9ydHMuY2FsY3VsYXRlTWF4aW11bUNlbGxXaWR0aCkoY2VsbCkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbiAgICByZXR1cm4gY29sdW1uV2lkdGhzO1xufTtcbmV4cG9ydHMuY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRocyA9IGNhbGN1bGF0ZU1heGltdW1Db2x1bW5XaWR0aHM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjdWxhdGVNYXhpbXVtQ29sdW1uV2lkdGhzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/calculateMaximumColumnWidths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/calculateOutputColumnWidths.js":
/*!********************************************************************!*\
  !*** ./node_modules/table/dist/src/calculateOutputColumnWidths.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateOutputColumnWidths = void 0;\nconst calculateOutputColumnWidths = (config) => {\n    return config.columns.map((col) => {\n        return col.paddingLeft + col.width + col.paddingRight;\n    });\n};\nexports.calculateOutputColumnWidths = calculateOutputColumnWidths;\n//# sourceMappingURL=calculateOutputColumnWidths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlT3V0cHV0Q29sdW1uV2lkdGhzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxtQ0FBbUM7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2NhbGN1bGF0ZU91dHB1dENvbHVtbldpZHRocy5qcz82NjFlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jYWxjdWxhdGVPdXRwdXRDb2x1bW5XaWR0aHMgPSB2b2lkIDA7XG5jb25zdCBjYWxjdWxhdGVPdXRwdXRDb2x1bW5XaWR0aHMgPSAoY29uZmlnKSA9PiB7XG4gICAgcmV0dXJuIGNvbmZpZy5jb2x1bW5zLm1hcCgoY29sKSA9PiB7XG4gICAgICAgIHJldHVybiBjb2wucGFkZGluZ0xlZnQgKyBjb2wud2lkdGggKyBjb2wucGFkZGluZ1JpZ2h0O1xuICAgIH0pO1xufTtcbmV4cG9ydHMuY2FsY3VsYXRlT3V0cHV0Q29sdW1uV2lkdGhzID0gY2FsY3VsYXRlT3V0cHV0Q29sdW1uV2lkdGhzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y2FsY3VsYXRlT3V0cHV0Q29sdW1uV2lkdGhzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/calculateOutputColumnWidths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/calculateRowHeights.js":
/*!************************************************************!*\
  !*** ./node_modules/table/dist/src/calculateRowHeights.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateRowHeights = void 0;\nconst calculateCellHeight_1 = __webpack_require__(/*! ./calculateCellHeight */ \"(ssr)/./node_modules/table/dist/src/calculateCellHeight.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\n/**\n * Produces an array of values that describe the largest value length (height) in every row.\n */\nconst calculateRowHeights = (rows, config) => {\n    const rowHeights = [];\n    for (const [rowIndex, row] of rows.entries()) {\n        let rowHeight = 1;\n        row.forEach((cell, cellIndex) => {\n            var _a;\n            const containingRange = (_a = config.spanningCellManager) === null || _a === void 0 ? void 0 : _a.getContainingRange({ col: cellIndex,\n                row: rowIndex });\n            if (!containingRange) {\n                const cellHeight = (0, calculateCellHeight_1.calculateCellHeight)(cell, config.columns[cellIndex].width, config.columns[cellIndex].wrapWord);\n                rowHeight = Math.max(rowHeight, cellHeight);\n                return;\n            }\n            const { topLeft, bottomRight, height } = containingRange;\n            // bottom-most cell of a range needs to contain all remain lines of spanning cells\n            if (rowIndex === bottomRight.row) {\n                const totalOccupiedSpanningCellHeight = (0, utils_1.sumArray)(rowHeights.slice(topLeft.row));\n                const totalHorizontalBorderHeight = bottomRight.row - topLeft.row;\n                const totalHiddenHorizontalBorderHeight = (0, utils_1.sequence)(topLeft.row + 1, bottomRight.row).filter((horizontalBorderIndex) => {\n                    var _a;\n                    /* istanbul ignore next */\n                    return !((_a = config.drawHorizontalLine) === null || _a === void 0 ? void 0 : _a.call(config, horizontalBorderIndex, rows.length));\n                }).length;\n                const cellHeight = height - totalOccupiedSpanningCellHeight - totalHorizontalBorderHeight + totalHiddenHorizontalBorderHeight;\n                rowHeight = Math.max(rowHeight, cellHeight);\n            }\n            // otherwise, just depend on other sibling cell heights in the row\n        });\n        rowHeights.push(rowHeight);\n    }\n    return rowHeights;\n};\nexports.calculateRowHeights = calculateRowHeights;\n//# sourceMappingURL=calculateRowHeights.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlUm93SGVpZ2h0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkI7QUFDM0IsOEJBQThCLG1CQUFPLENBQUMseUZBQXVCO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1JQUFtSTtBQUNuSSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwrQkFBK0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlUm93SGVpZ2h0cy5qcz83NGRkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jYWxjdWxhdGVSb3dIZWlnaHRzID0gdm9pZCAwO1xuY29uc3QgY2FsY3VsYXRlQ2VsbEhlaWdodF8xID0gcmVxdWlyZShcIi4vY2FsY3VsYXRlQ2VsbEhlaWdodFwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbi8qKlxuICogUHJvZHVjZXMgYW4gYXJyYXkgb2YgdmFsdWVzIHRoYXQgZGVzY3JpYmUgdGhlIGxhcmdlc3QgdmFsdWUgbGVuZ3RoIChoZWlnaHQpIGluIGV2ZXJ5IHJvdy5cbiAqL1xuY29uc3QgY2FsY3VsYXRlUm93SGVpZ2h0cyA9IChyb3dzLCBjb25maWcpID0+IHtcbiAgICBjb25zdCByb3dIZWlnaHRzID0gW107XG4gICAgZm9yIChjb25zdCBbcm93SW5kZXgsIHJvd10gb2Ygcm93cy5lbnRyaWVzKCkpIHtcbiAgICAgICAgbGV0IHJvd0hlaWdodCA9IDE7XG4gICAgICAgIHJvdy5mb3JFYWNoKChjZWxsLCBjZWxsSW5kZXgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5pbmdSYW5nZSA9IChfYSA9IGNvbmZpZy5zcGFubmluZ0NlbGxNYW5hZ2VyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0Q29udGFpbmluZ1JhbmdlKHsgY29sOiBjZWxsSW5kZXgsXG4gICAgICAgICAgICAgICAgcm93OiByb3dJbmRleCB9KTtcbiAgICAgICAgICAgIGlmICghY29udGFpbmluZ1JhbmdlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2VsbEhlaWdodCA9ICgwLCBjYWxjdWxhdGVDZWxsSGVpZ2h0XzEuY2FsY3VsYXRlQ2VsbEhlaWdodCkoY2VsbCwgY29uZmlnLmNvbHVtbnNbY2VsbEluZGV4XS53aWR0aCwgY29uZmlnLmNvbHVtbnNbY2VsbEluZGV4XS53cmFwV29yZCk7XG4gICAgICAgICAgICAgICAgcm93SGVpZ2h0ID0gTWF0aC5tYXgocm93SGVpZ2h0LCBjZWxsSGVpZ2h0KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB7IHRvcExlZnQsIGJvdHRvbVJpZ2h0LCBoZWlnaHQgfSA9IGNvbnRhaW5pbmdSYW5nZTtcbiAgICAgICAgICAgIC8vIGJvdHRvbS1tb3N0IGNlbGwgb2YgYSByYW5nZSBuZWVkcyB0byBjb250YWluIGFsbCByZW1haW4gbGluZXMgb2Ygc3Bhbm5pbmcgY2VsbHNcbiAgICAgICAgICAgIGlmIChyb3dJbmRleCA9PT0gYm90dG9tUmlnaHQucm93KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdG90YWxPY2N1cGllZFNwYW5uaW5nQ2VsbEhlaWdodCA9ICgwLCB1dGlsc18xLnN1bUFycmF5KShyb3dIZWlnaHRzLnNsaWNlKHRvcExlZnQucm93KSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdG90YWxIb3Jpem9udGFsQm9yZGVySGVpZ2h0ID0gYm90dG9tUmlnaHQucm93IC0gdG9wTGVmdC5yb3c7XG4gICAgICAgICAgICAgICAgY29uc3QgdG90YWxIaWRkZW5Ib3Jpem9udGFsQm9yZGVySGVpZ2h0ID0gKDAsIHV0aWxzXzEuc2VxdWVuY2UpKHRvcExlZnQucm93ICsgMSwgYm90dG9tUmlnaHQucm93KS5maWx0ZXIoKGhvcml6b250YWxCb3JkZXJJbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhKChfYSA9IGNvbmZpZy5kcmF3SG9yaXpvbnRhbExpbmUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGNvbmZpZywgaG9yaXpvbnRhbEJvcmRlckluZGV4LCByb3dzLmxlbmd0aCkpO1xuICAgICAgICAgICAgICAgIH0pLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBjb25zdCBjZWxsSGVpZ2h0ID0gaGVpZ2h0IC0gdG90YWxPY2N1cGllZFNwYW5uaW5nQ2VsbEhlaWdodCAtIHRvdGFsSG9yaXpvbnRhbEJvcmRlckhlaWdodCArIHRvdGFsSGlkZGVuSG9yaXpvbnRhbEJvcmRlckhlaWdodDtcbiAgICAgICAgICAgICAgICByb3dIZWlnaHQgPSBNYXRoLm1heChyb3dIZWlnaHQsIGNlbGxIZWlnaHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gb3RoZXJ3aXNlLCBqdXN0IGRlcGVuZCBvbiBvdGhlciBzaWJsaW5nIGNlbGwgaGVpZ2h0cyBpbiB0aGUgcm93XG4gICAgICAgIH0pO1xuICAgICAgICByb3dIZWlnaHRzLnB1c2gocm93SGVpZ2h0KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvd0hlaWdodHM7XG59O1xuZXhwb3J0cy5jYWxjdWxhdGVSb3dIZWlnaHRzID0gY2FsY3VsYXRlUm93SGVpZ2h0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNhbGN1bGF0ZVJvd0hlaWdodHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/calculateRowHeights.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/calculateSpanningCellWidth.js":
/*!*******************************************************************!*\
  !*** ./node_modules/table/dist/src/calculateSpanningCellWidth.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateSpanningCellWidth = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst calculateSpanningCellWidth = (rangeConfig, dependencies) => {\n    const { columnsConfig, drawVerticalLine } = dependencies;\n    const { topLeft, bottomRight } = rangeConfig;\n    const totalWidth = (0, utils_1.sumArray)(columnsConfig.slice(topLeft.col, bottomRight.col + 1).map(({ width }) => {\n        return width;\n    }));\n    const totalPadding = topLeft.col === bottomRight.col ?\n        columnsConfig[topLeft.col].paddingRight +\n            columnsConfig[bottomRight.col].paddingLeft :\n        (0, utils_1.sumArray)(columnsConfig\n            .slice(topLeft.col, bottomRight.col + 1)\n            .map(({ paddingLeft, paddingRight }) => {\n            return paddingLeft + paddingRight;\n        }));\n    const totalBorderWidths = bottomRight.col - topLeft.col;\n    const totalHiddenVerticalBorders = (0, utils_1.sequence)(topLeft.col + 1, bottomRight.col).filter((verticalBorderIndex) => {\n        return !drawVerticalLine(verticalBorderIndex, columnsConfig.length);\n    }).length;\n    return totalWidth + totalPadding + totalBorderWidths - totalHiddenVerticalBorders;\n};\nexports.calculateSpanningCellWidth = calculateSpanningCellWidth;\n//# sourceMappingURL=calculateSpanningCellWidth.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY2FsY3VsYXRlU3Bhbm5pbmdDZWxsV2lkdGguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDO0FBQ0EsWUFBWSxrQ0FBa0M7QUFDOUMsWUFBWSx1QkFBdUI7QUFDbkMsMEdBQTBHLE9BQU87QUFDakg7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwyQkFBMkI7QUFDL0M7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2NhbGN1bGF0ZVNwYW5uaW5nQ2VsbFdpZHRoLmpzP2U2ZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNhbGN1bGF0ZVNwYW5uaW5nQ2VsbFdpZHRoID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgY2FsY3VsYXRlU3Bhbm5pbmdDZWxsV2lkdGggPSAocmFuZ2VDb25maWcsIGRlcGVuZGVuY2llcykgPT4ge1xuICAgIGNvbnN0IHsgY29sdW1uc0NvbmZpZywgZHJhd1ZlcnRpY2FsTGluZSB9ID0gZGVwZW5kZW5jaWVzO1xuICAgIGNvbnN0IHsgdG9wTGVmdCwgYm90dG9tUmlnaHQgfSA9IHJhbmdlQ29uZmlnO1xuICAgIGNvbnN0IHRvdGFsV2lkdGggPSAoMCwgdXRpbHNfMS5zdW1BcnJheSkoY29sdW1uc0NvbmZpZy5zbGljZSh0b3BMZWZ0LmNvbCwgYm90dG9tUmlnaHQuY29sICsgMSkubWFwKCh7IHdpZHRoIH0pID0+IHtcbiAgICAgICAgcmV0dXJuIHdpZHRoO1xuICAgIH0pKTtcbiAgICBjb25zdCB0b3RhbFBhZGRpbmcgPSB0b3BMZWZ0LmNvbCA9PT0gYm90dG9tUmlnaHQuY29sID9cbiAgICAgICAgY29sdW1uc0NvbmZpZ1t0b3BMZWZ0LmNvbF0ucGFkZGluZ1JpZ2h0ICtcbiAgICAgICAgICAgIGNvbHVtbnNDb25maWdbYm90dG9tUmlnaHQuY29sXS5wYWRkaW5nTGVmdCA6XG4gICAgICAgICgwLCB1dGlsc18xLnN1bUFycmF5KShjb2x1bW5zQ29uZmlnXG4gICAgICAgICAgICAuc2xpY2UodG9wTGVmdC5jb2wsIGJvdHRvbVJpZ2h0LmNvbCArIDEpXG4gICAgICAgICAgICAubWFwKCh7IHBhZGRpbmdMZWZ0LCBwYWRkaW5nUmlnaHQgfSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBhZGRpbmdMZWZ0ICsgcGFkZGluZ1JpZ2h0O1xuICAgICAgICB9KSk7XG4gICAgY29uc3QgdG90YWxCb3JkZXJXaWR0aHMgPSBib3R0b21SaWdodC5jb2wgLSB0b3BMZWZ0LmNvbDtcbiAgICBjb25zdCB0b3RhbEhpZGRlblZlcnRpY2FsQm9yZGVycyA9ICgwLCB1dGlsc18xLnNlcXVlbmNlKSh0b3BMZWZ0LmNvbCArIDEsIGJvdHRvbVJpZ2h0LmNvbCkuZmlsdGVyKCh2ZXJ0aWNhbEJvcmRlckluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiAhZHJhd1ZlcnRpY2FsTGluZSh2ZXJ0aWNhbEJvcmRlckluZGV4LCBjb2x1bW5zQ29uZmlnLmxlbmd0aCk7XG4gICAgfSkubGVuZ3RoO1xuICAgIHJldHVybiB0b3RhbFdpZHRoICsgdG90YWxQYWRkaW5nICsgdG90YWxCb3JkZXJXaWR0aHMgLSB0b3RhbEhpZGRlblZlcnRpY2FsQm9yZGVycztcbn07XG5leHBvcnRzLmNhbGN1bGF0ZVNwYW5uaW5nQ2VsbFdpZHRoID0gY2FsY3VsYXRlU3Bhbm5pbmdDZWxsV2lkdGg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jYWxjdWxhdGVTcGFubmluZ0NlbGxXaWR0aC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/calculateSpanningCellWidth.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/createStream.js":
/*!*****************************************************!*\
  !*** ./node_modules/table/dist/src/createStream.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createStream = void 0;\nconst alignTableData_1 = __webpack_require__(/*! ./alignTableData */ \"(ssr)/./node_modules/table/dist/src/alignTableData.js\");\nconst calculateRowHeights_1 = __webpack_require__(/*! ./calculateRowHeights */ \"(ssr)/./node_modules/table/dist/src/calculateRowHeights.js\");\nconst drawBorder_1 = __webpack_require__(/*! ./drawBorder */ \"(ssr)/./node_modules/table/dist/src/drawBorder.js\");\nconst drawRow_1 = __webpack_require__(/*! ./drawRow */ \"(ssr)/./node_modules/table/dist/src/drawRow.js\");\nconst makeStreamConfig_1 = __webpack_require__(/*! ./makeStreamConfig */ \"(ssr)/./node_modules/table/dist/src/makeStreamConfig.js\");\nconst mapDataUsingRowHeights_1 = __webpack_require__(/*! ./mapDataUsingRowHeights */ \"(ssr)/./node_modules/table/dist/src/mapDataUsingRowHeights.js\");\nconst padTableData_1 = __webpack_require__(/*! ./padTableData */ \"(ssr)/./node_modules/table/dist/src/padTableData.js\");\nconst stringifyTableData_1 = __webpack_require__(/*! ./stringifyTableData */ \"(ssr)/./node_modules/table/dist/src/stringifyTableData.js\");\nconst truncateTableData_1 = __webpack_require__(/*! ./truncateTableData */ \"(ssr)/./node_modules/table/dist/src/truncateTableData.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst prepareData = (data, config) => {\n    let rows = (0, stringifyTableData_1.stringifyTableData)(data);\n    rows = (0, truncateTableData_1.truncateTableData)(rows, (0, utils_1.extractTruncates)(config));\n    const rowHeights = (0, calculateRowHeights_1.calculateRowHeights)(rows, config);\n    rows = (0, mapDataUsingRowHeights_1.mapDataUsingRowHeights)(rows, rowHeights, config);\n    rows = (0, alignTableData_1.alignTableData)(rows, config);\n    rows = (0, padTableData_1.padTableData)(rows, config);\n    return rows;\n};\nconst create = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return (0, drawRow_1.drawRow)(literalRow, config);\n    }).join('');\n    let output;\n    output = '';\n    output += (0, drawBorder_1.drawBorderTop)(columnWidths, config);\n    output += body;\n    output += (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst append = (row, columnWidths, config) => {\n    const rows = prepareData([row], config);\n    const body = rows.map((literalRow) => {\n        return (0, drawRow_1.drawRow)(literalRow, config);\n    }).join('');\n    let output = '';\n    const bottom = (0, drawBorder_1.drawBorderBottom)(columnWidths, config);\n    if (bottom !== '\\n') {\n        output = '\\r\\u001B[K';\n    }\n    output += (0, drawBorder_1.drawBorderJoin)(columnWidths, config);\n    output += body;\n    output += bottom;\n    output = output.trimEnd();\n    process.stdout.write(output);\n};\nconst createStream = (userConfig) => {\n    const config = (0, makeStreamConfig_1.makeStreamConfig)(userConfig);\n    const columnWidths = Object.values(config.columns).map((column) => {\n        return column.width + column.paddingLeft + column.paddingRight;\n    });\n    let empty = true;\n    return {\n        write: (row) => {\n            if (row.length !== config.columnCount) {\n                throw new Error('Row cell count does not match the config.columnCount.');\n            }\n            if (empty) {\n                empty = false;\n                create(row, columnWidths, config);\n            }\n            else {\n                append(row, columnWidths, config);\n            }\n        },\n    };\n};\nexports.createStream = createStream;\n//# sourceMappingURL=createStream.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvY3JlYXRlU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQix5QkFBeUIsbUJBQU8sQ0FBQywrRUFBa0I7QUFDbkQsOEJBQThCLG1CQUFPLENBQUMseUZBQXVCO0FBQzdELHFCQUFxQixtQkFBTyxDQUFDLHVFQUFjO0FBQzNDLGtCQUFrQixtQkFBTyxDQUFDLGlFQUFXO0FBQ3JDLDJCQUEyQixtQkFBTyxDQUFDLG1GQUFvQjtBQUN2RCxpQ0FBaUMsbUJBQU8sQ0FBQywrRkFBMEI7QUFDbkUsdUJBQXVCLG1CQUFPLENBQUMsMkVBQWdCO0FBQy9DLDZCQUE2QixtQkFBTyxDQUFDLHVGQUFzQjtBQUMzRCw0QkFBNEIsbUJBQU8sQ0FBQyxxRkFBcUI7QUFDekQsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9jcmVhdGVTdHJlYW0uanM/ZGExNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlU3RyZWFtID0gdm9pZCAwO1xuY29uc3QgYWxpZ25UYWJsZURhdGFfMSA9IHJlcXVpcmUoXCIuL2FsaWduVGFibGVEYXRhXCIpO1xuY29uc3QgY2FsY3VsYXRlUm93SGVpZ2h0c18xID0gcmVxdWlyZShcIi4vY2FsY3VsYXRlUm93SGVpZ2h0c1wiKTtcbmNvbnN0IGRyYXdCb3JkZXJfMSA9IHJlcXVpcmUoXCIuL2RyYXdCb3JkZXJcIik7XG5jb25zdCBkcmF3Um93XzEgPSByZXF1aXJlKFwiLi9kcmF3Um93XCIpO1xuY29uc3QgbWFrZVN0cmVhbUNvbmZpZ18xID0gcmVxdWlyZShcIi4vbWFrZVN0cmVhbUNvbmZpZ1wiKTtcbmNvbnN0IG1hcERhdGFVc2luZ1Jvd0hlaWdodHNfMSA9IHJlcXVpcmUoXCIuL21hcERhdGFVc2luZ1Jvd0hlaWdodHNcIik7XG5jb25zdCBwYWRUYWJsZURhdGFfMSA9IHJlcXVpcmUoXCIuL3BhZFRhYmxlRGF0YVwiKTtcbmNvbnN0IHN0cmluZ2lmeVRhYmxlRGF0YV8xID0gcmVxdWlyZShcIi4vc3RyaW5naWZ5VGFibGVEYXRhXCIpO1xuY29uc3QgdHJ1bmNhdGVUYWJsZURhdGFfMSA9IHJlcXVpcmUoXCIuL3RydW5jYXRlVGFibGVEYXRhXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgcHJlcGFyZURhdGEgPSAoZGF0YSwgY29uZmlnKSA9PiB7XG4gICAgbGV0IHJvd3MgPSAoMCwgc3RyaW5naWZ5VGFibGVEYXRhXzEuc3RyaW5naWZ5VGFibGVEYXRhKShkYXRhKTtcbiAgICByb3dzID0gKDAsIHRydW5jYXRlVGFibGVEYXRhXzEudHJ1bmNhdGVUYWJsZURhdGEpKHJvd3MsICgwLCB1dGlsc18xLmV4dHJhY3RUcnVuY2F0ZXMpKGNvbmZpZykpO1xuICAgIGNvbnN0IHJvd0hlaWdodHMgPSAoMCwgY2FsY3VsYXRlUm93SGVpZ2h0c18xLmNhbGN1bGF0ZVJvd0hlaWdodHMpKHJvd3MsIGNvbmZpZyk7XG4gICAgcm93cyA9ICgwLCBtYXBEYXRhVXNpbmdSb3dIZWlnaHRzXzEubWFwRGF0YVVzaW5nUm93SGVpZ2h0cykocm93cywgcm93SGVpZ2h0cywgY29uZmlnKTtcbiAgICByb3dzID0gKDAsIGFsaWduVGFibGVEYXRhXzEuYWxpZ25UYWJsZURhdGEpKHJvd3MsIGNvbmZpZyk7XG4gICAgcm93cyA9ICgwLCBwYWRUYWJsZURhdGFfMS5wYWRUYWJsZURhdGEpKHJvd3MsIGNvbmZpZyk7XG4gICAgcmV0dXJuIHJvd3M7XG59O1xuY29uc3QgY3JlYXRlID0gKHJvdywgY29sdW1uV2lkdGhzLCBjb25maWcpID0+IHtcbiAgICBjb25zdCByb3dzID0gcHJlcGFyZURhdGEoW3Jvd10sIGNvbmZpZyk7XG4gICAgY29uc3QgYm9keSA9IHJvd3MubWFwKChsaXRlcmFsUm93KSA9PiB7XG4gICAgICAgIHJldHVybiAoMCwgZHJhd1Jvd18xLmRyYXdSb3cpKGxpdGVyYWxSb3csIGNvbmZpZyk7XG4gICAgfSkuam9pbignJyk7XG4gICAgbGV0IG91dHB1dDtcbiAgICBvdXRwdXQgPSAnJztcbiAgICBvdXRwdXQgKz0gKDAsIGRyYXdCb3JkZXJfMS5kcmF3Qm9yZGVyVG9wKShjb2x1bW5XaWR0aHMsIGNvbmZpZyk7XG4gICAgb3V0cHV0ICs9IGJvZHk7XG4gICAgb3V0cHV0ICs9ICgwLCBkcmF3Qm9yZGVyXzEuZHJhd0JvcmRlckJvdHRvbSkoY29sdW1uV2lkdGhzLCBjb25maWcpO1xuICAgIG91dHB1dCA9IG91dHB1dC50cmltRW5kKCk7XG4gICAgcHJvY2Vzcy5zdGRvdXQud3JpdGUob3V0cHV0KTtcbn07XG5jb25zdCBhcHBlbmQgPSAocm93LCBjb2x1bW5XaWR0aHMsIGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IHJvd3MgPSBwcmVwYXJlRGF0YShbcm93XSwgY29uZmlnKTtcbiAgICBjb25zdCBib2R5ID0gcm93cy5tYXAoKGxpdGVyYWxSb3cpID0+IHtcbiAgICAgICAgcmV0dXJuICgwLCBkcmF3Um93XzEuZHJhd1JvdykobGl0ZXJhbFJvdywgY29uZmlnKTtcbiAgICB9KS5qb2luKCcnKTtcbiAgICBsZXQgb3V0cHV0ID0gJyc7XG4gICAgY29uc3QgYm90dG9tID0gKDAsIGRyYXdCb3JkZXJfMS5kcmF3Qm9yZGVyQm90dG9tKShjb2x1bW5XaWR0aHMsIGNvbmZpZyk7XG4gICAgaWYgKGJvdHRvbSAhPT0gJ1xcbicpIHtcbiAgICAgICAgb3V0cHV0ID0gJ1xcclxcdTAwMUJbSyc7XG4gICAgfVxuICAgIG91dHB1dCArPSAoMCwgZHJhd0JvcmRlcl8xLmRyYXdCb3JkZXJKb2luKShjb2x1bW5XaWR0aHMsIGNvbmZpZyk7XG4gICAgb3V0cHV0ICs9IGJvZHk7XG4gICAgb3V0cHV0ICs9IGJvdHRvbTtcbiAgICBvdXRwdXQgPSBvdXRwdXQudHJpbUVuZCgpO1xuICAgIHByb2Nlc3Muc3Rkb3V0LndyaXRlKG91dHB1dCk7XG59O1xuY29uc3QgY3JlYXRlU3RyZWFtID0gKHVzZXJDb25maWcpID0+IHtcbiAgICBjb25zdCBjb25maWcgPSAoMCwgbWFrZVN0cmVhbUNvbmZpZ18xLm1ha2VTdHJlYW1Db25maWcpKHVzZXJDb25maWcpO1xuICAgIGNvbnN0IGNvbHVtbldpZHRocyA9IE9iamVjdC52YWx1ZXMoY29uZmlnLmNvbHVtbnMpLm1hcCgoY29sdW1uKSA9PiB7XG4gICAgICAgIHJldHVybiBjb2x1bW4ud2lkdGggKyBjb2x1bW4ucGFkZGluZ0xlZnQgKyBjb2x1bW4ucGFkZGluZ1JpZ2h0O1xuICAgIH0pO1xuICAgIGxldCBlbXB0eSA9IHRydWU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgd3JpdGU6IChyb3cpID0+IHtcbiAgICAgICAgICAgIGlmIChyb3cubGVuZ3RoICE9PSBjb25maWcuY29sdW1uQ291bnQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JvdyBjZWxsIGNvdW50IGRvZXMgbm90IG1hdGNoIHRoZSBjb25maWcuY29sdW1uQ291bnQuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoZW1wdHkpIHtcbiAgICAgICAgICAgICAgICBlbXB0eSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIGNyZWF0ZShyb3csIGNvbHVtbldpZHRocywgY29uZmlnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGFwcGVuZChyb3csIGNvbHVtbldpZHRocywgY29uZmlnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufTtcbmV4cG9ydHMuY3JlYXRlU3RyZWFtID0gY3JlYXRlU3RyZWFtO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y3JlYXRlU3RyZWFtLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/createStream.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/drawBorder.js":
/*!***************************************************!*\
  !*** ./node_modules/table/dist/src/drawBorder.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createTableBorderGetter = exports.drawBorderBottom = exports.drawBorderJoin = exports.drawBorderTop = exports.drawBorder = exports.createSeparatorGetter = exports.drawBorderSegments = void 0;\nconst drawContent_1 = __webpack_require__(/*! ./drawContent */ \"(ssr)/./node_modules/table/dist/src/drawContent.js\");\nconst drawBorderSegments = (columnWidths, parameters) => {\n    const { separator, horizontalBorderIndex, spanningCellManager } = parameters;\n    return columnWidths.map((columnWidth, columnIndex) => {\n        const normalSegment = separator.body.repeat(columnWidth);\n        if (horizontalBorderIndex === undefined) {\n            return normalSegment;\n        }\n        /* istanbul ignore next */\n        const range = spanningCellManager === null || spanningCellManager === void 0 ? void 0 : spanningCellManager.getContainingRange({ col: columnIndex,\n            row: horizontalBorderIndex });\n        if (!range) {\n            return normalSegment;\n        }\n        const { topLeft } = range;\n        // draw border segments as usual for top border of spanning cell\n        if (horizontalBorderIndex === topLeft.row) {\n            return normalSegment;\n        }\n        // if for first column/row of spanning cell, just skip\n        if (columnIndex !== topLeft.col) {\n            return '';\n        }\n        return range.extractBorderContent(horizontalBorderIndex);\n    });\n};\nexports.drawBorderSegments = drawBorderSegments;\nconst createSeparatorGetter = (dependencies) => {\n    const { separator, spanningCellManager, horizontalBorderIndex, rowCount } = dependencies;\n    // eslint-disable-next-line complexity\n    return (verticalBorderIndex, columnCount) => {\n        const inSameRange = spanningCellManager === null || spanningCellManager === void 0 ? void 0 : spanningCellManager.inSameRange;\n        if (horizontalBorderIndex !== undefined && inSameRange) {\n            const topCell = { col: verticalBorderIndex,\n                row: horizontalBorderIndex - 1 };\n            const leftCell = { col: verticalBorderIndex - 1,\n                row: horizontalBorderIndex };\n            const oppositeCell = { col: verticalBorderIndex - 1,\n                row: horizontalBorderIndex - 1 };\n            const currentCell = { col: verticalBorderIndex,\n                row: horizontalBorderIndex };\n            const pairs = [\n                [oppositeCell, topCell],\n                [topCell, currentCell],\n                [currentCell, leftCell],\n                [leftCell, oppositeCell],\n            ];\n            // left side of horizontal border\n            if (verticalBorderIndex === 0) {\n                if (inSameRange(currentCell, topCell) && separator.bodyJoinOuter) {\n                    return separator.bodyJoinOuter;\n                }\n                return separator.left;\n            }\n            // right side of horizontal border\n            if (verticalBorderIndex === columnCount) {\n                if (inSameRange(oppositeCell, leftCell) && separator.bodyJoinOuter) {\n                    return separator.bodyJoinOuter;\n                }\n                return separator.right;\n            }\n            // top horizontal border\n            if (horizontalBorderIndex === 0) {\n                if (inSameRange(currentCell, leftCell)) {\n                    return separator.body;\n                }\n                return separator.join;\n            }\n            // bottom horizontal border\n            if (horizontalBorderIndex === rowCount) {\n                if (inSameRange(topCell, oppositeCell)) {\n                    return separator.body;\n                }\n                return separator.join;\n            }\n            const sameRangeCount = pairs.map((pair) => {\n                return inSameRange(...pair);\n            }).filter(Boolean).length;\n            // four cells are belongs to different spanning cells\n            if (sameRangeCount === 0) {\n                return separator.join;\n            }\n            // belong to one spanning cell\n            if (sameRangeCount === 4) {\n                return '';\n            }\n            // belongs to two spanning cell\n            if (sameRangeCount === 2) {\n                if (inSameRange(...pairs[1]) && inSameRange(...pairs[3]) && separator.bodyJoinInner) {\n                    return separator.bodyJoinInner;\n                }\n                return separator.body;\n            }\n            /* istanbul ignore next */\n            if (sameRangeCount === 1) {\n                if (!separator.joinRight || !separator.joinLeft || !separator.joinUp || !separator.joinDown) {\n                    throw new Error(`Can not get border separator for position [${horizontalBorderIndex}, ${verticalBorderIndex}]`);\n                }\n                if (inSameRange(...pairs[0])) {\n                    return separator.joinDown;\n                }\n                if (inSameRange(...pairs[1])) {\n                    return separator.joinLeft;\n                }\n                if (inSameRange(...pairs[2])) {\n                    return separator.joinUp;\n                }\n                return separator.joinRight;\n            }\n            /* istanbul ignore next */\n            throw new Error('Invalid case');\n        }\n        if (verticalBorderIndex === 0) {\n            return separator.left;\n        }\n        if (verticalBorderIndex === columnCount) {\n            return separator.right;\n        }\n        return separator.join;\n    };\n};\nexports.createSeparatorGetter = createSeparatorGetter;\nconst drawBorder = (columnWidths, parameters) => {\n    const borderSegments = (0, exports.drawBorderSegments)(columnWidths, parameters);\n    const { drawVerticalLine, horizontalBorderIndex, spanningCellManager } = parameters;\n    return (0, drawContent_1.drawContent)({\n        contents: borderSegments,\n        drawSeparator: drawVerticalLine,\n        elementType: 'border',\n        rowIndex: horizontalBorderIndex,\n        separatorGetter: (0, exports.createSeparatorGetter)(parameters),\n        spanningCellManager,\n    }) + '\\n';\n};\nexports.drawBorder = drawBorder;\nconst drawBorderTop = (columnWidths, parameters) => {\n    const { border } = parameters;\n    const result = (0, exports.drawBorder)(columnWidths, {\n        ...parameters,\n        separator: {\n            body: border.topBody,\n            join: border.topJoin,\n            left: border.topLeft,\n            right: border.topRight,\n        },\n    });\n    if (result === '\\n') {\n        return '';\n    }\n    return result;\n};\nexports.drawBorderTop = drawBorderTop;\nconst drawBorderJoin = (columnWidths, parameters) => {\n    const { border } = parameters;\n    return (0, exports.drawBorder)(columnWidths, {\n        ...parameters,\n        separator: {\n            body: border.joinBody,\n            bodyJoinInner: border.bodyJoin,\n            bodyJoinOuter: border.bodyLeft,\n            join: border.joinJoin,\n            joinDown: border.joinMiddleDown,\n            joinLeft: border.joinMiddleLeft,\n            joinRight: border.joinMiddleRight,\n            joinUp: border.joinMiddleUp,\n            left: border.joinLeft,\n            right: border.joinRight,\n        },\n    });\n};\nexports.drawBorderJoin = drawBorderJoin;\nconst drawBorderBottom = (columnWidths, parameters) => {\n    const { border } = parameters;\n    return (0, exports.drawBorder)(columnWidths, {\n        ...parameters,\n        separator: {\n            body: border.bottomBody,\n            join: border.bottomJoin,\n            left: border.bottomLeft,\n            right: border.bottomRight,\n        },\n    });\n};\nexports.drawBorderBottom = drawBorderBottom;\nconst createTableBorderGetter = (columnWidths, parameters) => {\n    return (index, size) => {\n        const drawBorderParameters = { ...parameters,\n            horizontalBorderIndex: index };\n        if (index === 0) {\n            return (0, exports.drawBorderTop)(columnWidths, drawBorderParameters);\n        }\n        else if (index === size) {\n            return (0, exports.drawBorderBottom)(columnWidths, drawBorderParameters);\n        }\n        return (0, exports.drawBorderJoin)(columnWidths, drawBorderParameters);\n    };\n};\nexports.createTableBorderGetter = createTableBorderGetter;\n//# sourceMappingURL=drawBorder.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/drawBorder.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/drawContent.js":
/*!****************************************************!*\
  !*** ./node_modules/table/dist/src/drawContent.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawContent = void 0;\nconst drawContent = (parameters) => {\n    const { contents, separatorGetter, drawSeparator, spanningCellManager, rowIndex, elementType } = parameters;\n    const contentSize = contents.length;\n    const result = [];\n    if (drawSeparator(0, contentSize)) {\n        result.push(separatorGetter(0, contentSize));\n    }\n    contents.forEach((content, contentIndex) => {\n        if (!elementType || elementType === 'border' || elementType === 'row') {\n            result.push(content);\n        }\n        if (elementType === 'cell' && rowIndex === undefined) {\n            result.push(content);\n        }\n        if (elementType === 'cell' && rowIndex !== undefined) {\n            /* istanbul ignore next */\n            const containingRange = spanningCellManager === null || spanningCellManager === void 0 ? void 0 : spanningCellManager.getContainingRange({ col: contentIndex,\n                row: rowIndex });\n            // when drawing content row, just add a cell when it is a normal cell\n            // or belongs to first column of spanning cell\n            if (!containingRange || contentIndex === containingRange.topLeft.col) {\n                result.push(content);\n            }\n        }\n        // Only append the middle separator if the content is not the last\n        if (contentIndex + 1 < contentSize && drawSeparator(contentIndex + 1, contentSize)) {\n            const separator = separatorGetter(contentIndex + 1, contentSize);\n            if (elementType === 'cell' && rowIndex !== undefined) {\n                const currentCell = { col: contentIndex + 1,\n                    row: rowIndex };\n                /* istanbul ignore next */\n                const containingRange = spanningCellManager === null || spanningCellManager === void 0 ? void 0 : spanningCellManager.getContainingRange(currentCell);\n                if (!containingRange || containingRange.topLeft.col === currentCell.col) {\n                    result.push(separator);\n                }\n            }\n            else {\n                result.push(separator);\n            }\n        }\n    });\n    if (drawSeparator(contentSize, contentSize)) {\n        result.push(separatorGetter(contentSize, contentSize));\n    }\n    return result.join('');\n};\nexports.drawContent = drawContent;\n//# sourceMappingURL=drawContent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvZHJhd0NvbnRlbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0EsWUFBWSx1RkFBdUY7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVKQUF1SjtBQUN2SiwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0M7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9kcmF3Q29udGVudC5qcz8wNjdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kcmF3Q29udGVudCA9IHZvaWQgMDtcbmNvbnN0IGRyYXdDb250ZW50ID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICBjb25zdCB7IGNvbnRlbnRzLCBzZXBhcmF0b3JHZXR0ZXIsIGRyYXdTZXBhcmF0b3IsIHNwYW5uaW5nQ2VsbE1hbmFnZXIsIHJvd0luZGV4LCBlbGVtZW50VHlwZSB9ID0gcGFyYW1ldGVycztcbiAgICBjb25zdCBjb250ZW50U2l6ZSA9IGNvbnRlbnRzLmxlbmd0aDtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBpZiAoZHJhd1NlcGFyYXRvcigwLCBjb250ZW50U2l6ZSkpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goc2VwYXJhdG9yR2V0dGVyKDAsIGNvbnRlbnRTaXplKSk7XG4gICAgfVxuICAgIGNvbnRlbnRzLmZvckVhY2goKGNvbnRlbnQsIGNvbnRlbnRJbmRleCkgPT4ge1xuICAgICAgICBpZiAoIWVsZW1lbnRUeXBlIHx8IGVsZW1lbnRUeXBlID09PSAnYm9yZGVyJyB8fCBlbGVtZW50VHlwZSA9PT0gJ3JvdycpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbGVtZW50VHlwZSA9PT0gJ2NlbGwnICYmIHJvd0luZGV4ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGNvbnRlbnQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChlbGVtZW50VHlwZSA9PT0gJ2NlbGwnICYmIHJvd0luZGV4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICBjb25zdCBjb250YWluaW5nUmFuZ2UgPSBzcGFubmluZ0NlbGxNYW5hZ2VyID09PSBudWxsIHx8IHNwYW5uaW5nQ2VsbE1hbmFnZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNwYW5uaW5nQ2VsbE1hbmFnZXIuZ2V0Q29udGFpbmluZ1JhbmdlKHsgY29sOiBjb250ZW50SW5kZXgsXG4gICAgICAgICAgICAgICAgcm93OiByb3dJbmRleCB9KTtcbiAgICAgICAgICAgIC8vIHdoZW4gZHJhd2luZyBjb250ZW50IHJvdywganVzdCBhZGQgYSBjZWxsIHdoZW4gaXQgaXMgYSBub3JtYWwgY2VsbFxuICAgICAgICAgICAgLy8gb3IgYmVsb25ncyB0byBmaXJzdCBjb2x1bW4gb2Ygc3Bhbm5pbmcgY2VsbFxuICAgICAgICAgICAgaWYgKCFjb250YWluaW5nUmFuZ2UgfHwgY29udGVudEluZGV4ID09PSBjb250YWluaW5nUmFuZ2UudG9wTGVmdC5jb2wpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChjb250ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBPbmx5IGFwcGVuZCB0aGUgbWlkZGxlIHNlcGFyYXRvciBpZiB0aGUgY29udGVudCBpcyBub3QgdGhlIGxhc3RcbiAgICAgICAgaWYgKGNvbnRlbnRJbmRleCArIDEgPCBjb250ZW50U2l6ZSAmJiBkcmF3U2VwYXJhdG9yKGNvbnRlbnRJbmRleCArIDEsIGNvbnRlbnRTaXplKSkge1xuICAgICAgICAgICAgY29uc3Qgc2VwYXJhdG9yID0gc2VwYXJhdG9yR2V0dGVyKGNvbnRlbnRJbmRleCArIDEsIGNvbnRlbnRTaXplKTtcbiAgICAgICAgICAgIGlmIChlbGVtZW50VHlwZSA9PT0gJ2NlbGwnICYmIHJvd0luZGV4ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyZW50Q2VsbCA9IHsgY29sOiBjb250ZW50SW5kZXggKyAxLFxuICAgICAgICAgICAgICAgICAgICByb3c6IHJvd0luZGV4IH07XG4gICAgICAgICAgICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgICAgICAgICAgICBjb25zdCBjb250YWluaW5nUmFuZ2UgPSBzcGFubmluZ0NlbGxNYW5hZ2VyID09PSBudWxsIHx8IHNwYW5uaW5nQ2VsbE1hbmFnZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNwYW5uaW5nQ2VsbE1hbmFnZXIuZ2V0Q29udGFpbmluZ1JhbmdlKGN1cnJlbnRDZWxsKTtcbiAgICAgICAgICAgICAgICBpZiAoIWNvbnRhaW5pbmdSYW5nZSB8fCBjb250YWluaW5nUmFuZ2UudG9wTGVmdC5jb2wgPT09IGN1cnJlbnRDZWxsLmNvbCkge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChzZXBhcmF0b3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKHNlcGFyYXRvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoZHJhd1NlcGFyYXRvcihjb250ZW50U2l6ZSwgY29udGVudFNpemUpKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKHNlcGFyYXRvckdldHRlcihjb250ZW50U2l6ZSwgY29udGVudFNpemUpKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdC5qb2luKCcnKTtcbn07XG5leHBvcnRzLmRyYXdDb250ZW50ID0gZHJhd0NvbnRlbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmF3Q29udGVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/drawContent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/drawRow.js":
/*!************************************************!*\
  !*** ./node_modules/table/dist/src/drawRow.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawRow = void 0;\nconst drawContent_1 = __webpack_require__(/*! ./drawContent */ \"(ssr)/./node_modules/table/dist/src/drawContent.js\");\nconst drawRow = (row, config) => {\n    const { border, drawVerticalLine, rowIndex, spanningCellManager } = config;\n    return (0, drawContent_1.drawContent)({\n        contents: row,\n        drawSeparator: drawVerticalLine,\n        elementType: 'cell',\n        rowIndex,\n        separatorGetter: (index, columnCount) => {\n            if (index === 0) {\n                return border.bodyLeft;\n            }\n            if (index === columnCount) {\n                return border.bodyRight;\n            }\n            return border.bodyJoin;\n        },\n        spanningCellManager,\n    }) + '\\n';\n};\nexports.drawRow = drawRow;\n//# sourceMappingURL=drawRow.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvZHJhd1Jvdy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlO0FBQ2Ysc0JBQXNCLG1CQUFPLENBQUMseUVBQWU7QUFDN0M7QUFDQSxZQUFZLDBEQUEwRDtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvZHJhd1Jvdy5qcz82ZDVmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kcmF3Um93ID0gdm9pZCAwO1xuY29uc3QgZHJhd0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuL2RyYXdDb250ZW50XCIpO1xuY29uc3QgZHJhd1JvdyA9IChyb3csIGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IHsgYm9yZGVyLCBkcmF3VmVydGljYWxMaW5lLCByb3dJbmRleCwgc3Bhbm5pbmdDZWxsTWFuYWdlciB9ID0gY29uZmlnO1xuICAgIHJldHVybiAoMCwgZHJhd0NvbnRlbnRfMS5kcmF3Q29udGVudCkoe1xuICAgICAgICBjb250ZW50czogcm93LFxuICAgICAgICBkcmF3U2VwYXJhdG9yOiBkcmF3VmVydGljYWxMaW5lLFxuICAgICAgICBlbGVtZW50VHlwZTogJ2NlbGwnLFxuICAgICAgICByb3dJbmRleCxcbiAgICAgICAgc2VwYXJhdG9yR2V0dGVyOiAoaW5kZXgsIGNvbHVtbkNvdW50KSA9PiB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYm9yZGVyLmJvZHlMZWZ0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluZGV4ID09PSBjb2x1bW5Db3VudCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBib3JkZXIuYm9keVJpZ2h0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGJvcmRlci5ib2R5Sm9pbjtcbiAgICAgICAgfSxcbiAgICAgICAgc3Bhbm5pbmdDZWxsTWFuYWdlcixcbiAgICB9KSArICdcXG4nO1xufTtcbmV4cG9ydHMuZHJhd1JvdyA9IGRyYXdSb3c7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmF3Um93LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/drawRow.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/drawTable.js":
/*!**************************************************!*\
  !*** ./node_modules/table/dist/src/drawTable.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawTable = void 0;\nconst drawBorder_1 = __webpack_require__(/*! ./drawBorder */ \"(ssr)/./node_modules/table/dist/src/drawBorder.js\");\nconst drawContent_1 = __webpack_require__(/*! ./drawContent */ \"(ssr)/./node_modules/table/dist/src/drawContent.js\");\nconst drawRow_1 = __webpack_require__(/*! ./drawRow */ \"(ssr)/./node_modules/table/dist/src/drawRow.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst drawTable = (rows, outputColumnWidths, rowHeights, config) => {\n    const { drawHorizontalLine, singleLine, } = config;\n    const contents = (0, utils_1.groupBySizes)(rows, rowHeights).map((group, groupIndex) => {\n        return group.map((row) => {\n            return (0, drawRow_1.drawRow)(row, { ...config,\n                rowIndex: groupIndex });\n        }).join('');\n    });\n    return (0, drawContent_1.drawContent)({ contents,\n        drawSeparator: (index, size) => {\n            // Top/bottom border\n            if (index === 0 || index === size) {\n                return drawHorizontalLine(index, size);\n            }\n            return !singleLine && drawHorizontalLine(index, size);\n        },\n        elementType: 'row',\n        rowIndex: -1,\n        separatorGetter: (0, drawBorder_1.createTableBorderGetter)(outputColumnWidths, { ...config,\n            rowCount: contents.length }),\n        spanningCellManager: config.spanningCellManager });\n};\nexports.drawTable = drawTable;\n//# sourceMappingURL=drawTable.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvZHJhd1RhYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQjtBQUNqQixxQkFBcUIsbUJBQU8sQ0FBQyx1RUFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyx5RUFBZTtBQUM3QyxrQkFBa0IsbUJBQU8sQ0FBQyxpRUFBVztBQUNyQyxnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBUztBQUNqQztBQUNBLFlBQVksa0NBQWtDO0FBQzlDO0FBQ0E7QUFDQSxpREFBaUQ7QUFDakQsc0NBQXNDO0FBQ3RDLFNBQVM7QUFDVCxLQUFLO0FBQ0wsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUZBQXlGO0FBQ3pGLHVDQUF1QztBQUN2Qyx5REFBeUQ7QUFDekQ7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2RyYXdUYWJsZS5qcz8xYTViIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kcmF3VGFibGUgPSB2b2lkIDA7XG5jb25zdCBkcmF3Qm9yZGVyXzEgPSByZXF1aXJlKFwiLi9kcmF3Qm9yZGVyXCIpO1xuY29uc3QgZHJhd0NvbnRlbnRfMSA9IHJlcXVpcmUoXCIuL2RyYXdDb250ZW50XCIpO1xuY29uc3QgZHJhd1Jvd18xID0gcmVxdWlyZShcIi4vZHJhd1Jvd1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGRyYXdUYWJsZSA9IChyb3dzLCBvdXRwdXRDb2x1bW5XaWR0aHMsIHJvd0hlaWdodHMsIGNvbmZpZykgPT4ge1xuICAgIGNvbnN0IHsgZHJhd0hvcml6b250YWxMaW5lLCBzaW5nbGVMaW5lLCB9ID0gY29uZmlnO1xuICAgIGNvbnN0IGNvbnRlbnRzID0gKDAsIHV0aWxzXzEuZ3JvdXBCeVNpemVzKShyb3dzLCByb3dIZWlnaHRzKS5tYXAoKGdyb3VwLCBncm91cEluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBncm91cC5tYXAoKHJvdykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBkcmF3Um93XzEuZHJhd1Jvdykocm93LCB7IC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICByb3dJbmRleDogZ3JvdXBJbmRleCB9KTtcbiAgICAgICAgfSkuam9pbignJyk7XG4gICAgfSk7XG4gICAgcmV0dXJuICgwLCBkcmF3Q29udGVudF8xLmRyYXdDb250ZW50KSh7IGNvbnRlbnRzLFxuICAgICAgICBkcmF3U2VwYXJhdG9yOiAoaW5kZXgsIHNpemUpID0+IHtcbiAgICAgICAgICAgIC8vIFRvcC9ib3R0b20gYm9yZGVyXG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDAgfHwgaW5kZXggPT09IHNpemUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZHJhd0hvcml6b250YWxMaW5lKGluZGV4LCBzaXplKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhc2luZ2xlTGluZSAmJiBkcmF3SG9yaXpvbnRhbExpbmUoaW5kZXgsIHNpemUpO1xuICAgICAgICB9LFxuICAgICAgICBlbGVtZW50VHlwZTogJ3JvdycsXG4gICAgICAgIHJvd0luZGV4OiAtMSxcbiAgICAgICAgc2VwYXJhdG9yR2V0dGVyOiAoMCwgZHJhd0JvcmRlcl8xLmNyZWF0ZVRhYmxlQm9yZGVyR2V0dGVyKShvdXRwdXRDb2x1bW5XaWR0aHMsIHsgLi4uY29uZmlnLFxuICAgICAgICAgICAgcm93Q291bnQ6IGNvbnRlbnRzLmxlbmd0aCB9KSxcbiAgICAgICAgc3Bhbm5pbmdDZWxsTWFuYWdlcjogY29uZmlnLnNwYW5uaW5nQ2VsbE1hbmFnZXIgfSk7XG59O1xuZXhwb3J0cy5kcmF3VGFibGUgPSBkcmF3VGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmF3VGFibGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/drawTable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/generated/validators.js":
/*!*************************************************************!*\
  !*** ./node_modules/table/dist/src/generated/validators.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nexports[\"config.json\"] = validate43;\nconst schema13 = {\n    \"$id\": \"config.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"header\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"content\": {\n                    \"type\": \"string\"\n                },\n                \"alignment\": {\n                    \"$ref\": \"shared.json#/definitions/alignment\"\n                },\n                \"wrapWord\": {\n                    \"type\": \"boolean\"\n                },\n                \"truncate\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingLeft\": {\n                    \"type\": \"integer\"\n                },\n                \"paddingRight\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"required\": [\"content\"],\n            \"additionalProperties\": false\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"drawHorizontalLine\": {\n            \"typeof\": \"function\"\n        },\n        \"singleLine\": {\n            \"typeof\": \"boolean\"\n        },\n        \"spanningCells\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"col\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0\n                    },\n                    \"row\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 0\n                    },\n                    \"colSpan\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1\n                    },\n                    \"rowSpan\": {\n                        \"type\": \"integer\",\n                        \"minimum\": 1\n                    },\n                    \"alignment\": {\n                        \"$ref\": \"shared.json#/definitions/alignment\"\n                    },\n                    \"verticalAlignment\": {\n                        \"$ref\": \"shared.json#/definitions/verticalAlignment\"\n                    },\n                    \"wrapWord\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"truncate\": {\n                        \"type\": \"integer\"\n                    },\n                    \"paddingLeft\": {\n                        \"type\": \"integer\"\n                    },\n                    \"paddingRight\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"required\": [\"row\", \"col\"],\n                \"additionalProperties\": false\n            }\n        }\n    },\n    \"additionalProperties\": false\n};\nconst schema15 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"topBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"topRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bottomRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"bodyJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"headerJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinBody\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinRight\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinJoin\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinMiddleUp\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinMiddleDown\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinMiddleLeft\": {\n            \"$ref\": \"#/definitions/border\"\n        },\n        \"joinMiddleRight\": {\n            \"$ref\": \"#/definitions/border\"\n        }\n    },\n    \"additionalProperties\": false\n};\nconst func8 = Object.prototype.hasOwnProperty;\nconst schema16 = {\n    \"type\": \"string\"\n};\nfunction validate46(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    validate46.errors = vErrors;\n    return errors === 0;\n}\nfunction validate45(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleUp !== undefined) {\n            if (!(validate46(data.joinMiddleUp, {\n                instancePath: instancePath + \"/joinMiddleUp\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleUp\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleDown !== undefined) {\n            if (!(validate46(data.joinMiddleDown, {\n                instancePath: instancePath + \"/joinMiddleDown\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleDown\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleLeft !== undefined) {\n            if (!(validate46(data.joinMiddleLeft, {\n                instancePath: instancePath + \"/joinMiddleLeft\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleRight !== undefined) {\n            if (!(validate46(data.joinMiddleRight, {\n                instancePath: instancePath + \"/joinMiddleRight\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate45.errors = vErrors;\n    return errors === 0;\n}\nconst schema17 = {\n    \"type\": \"string\",\n    \"enum\": [\"left\", \"right\", \"center\", \"justify\"]\n};\nconst func0 = (__webpack_require__(/*! ajv/dist/runtime/equal */ \"(ssr)/./node_modules/ajv/dist/runtime/equal.js\")[\"default\"]);\nfunction validate68(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate68.errors = vErrors;\n    return errors === 0;\n}\nconst schema18 = {\n    \"oneOf\": [{\n            \"type\": \"object\",\n            \"patternProperties\": {\n                \"^[0-9]+$\": {\n                    \"$ref\": \"#/definitions/column\"\n                }\n            },\n            \"additionalProperties\": false\n        }, {\n            \"type\": \"array\",\n            \"items\": {\n                \"$ref\": \"#/definitions/column\"\n            }\n        }]\n};\nconst pattern0 = new RegExp(\"^[0-9]+$\", \"u\");\nconst schema19 = {\n    \"type\": \"object\",\n    \"properties\": {\n        \"alignment\": {\n            \"$ref\": \"#/definitions/alignment\"\n        },\n        \"verticalAlignment\": {\n            \"$ref\": \"#/definitions/verticalAlignment\"\n        },\n        \"width\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"wrapWord\": {\n            \"type\": \"boolean\"\n        },\n        \"truncate\": {\n            \"type\": \"integer\"\n        },\n        \"paddingLeft\": {\n            \"type\": \"integer\"\n        },\n        \"paddingRight\": {\n            \"type\": \"integer\"\n        }\n    },\n    \"additionalProperties\": false\n};\nfunction validate72(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!((((data === \"left\") || (data === \"right\")) || (data === \"center\")) || (data === \"justify\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema17.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate72.errors = vErrors;\n    return errors === 0;\n}\nconst schema21 = {\n    \"type\": \"string\",\n    \"enum\": [\"top\", \"middle\", \"bottom\"]\n};\nfunction validate74(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!(((data === \"top\") || (data === \"middle\")) || (data === \"bottom\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema21.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate74.errors = vErrors;\n    return errors === 0;\n}\nfunction validate71(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate72(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate72.errors : vErrors.concat(validate72.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            if (!(validate74(data.verticalAlignment, {\n                instancePath: instancePath + \"/verticalAlignment\",\n                parentData: data,\n                parentDataProperty: \"verticalAlignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate74.errors : vErrors.concat(validate74.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err1 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err2 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err2];\n                    }\n                    else {\n                        vErrors.push(err2);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err3 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err4 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                }\n                else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err5 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err7 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err7];\n        }\n        else {\n            vErrors.push(err7);\n        }\n        errors++;\n    }\n    validate71.errors = vErrors;\n    return errors === 0;\n}\nfunction validate70(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate71(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate71.errors : vErrors.concat(validate71.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate71(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate71.errors : vErrors.concat(validate71.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate70.errors = vErrors;\n    return errors === 0;\n}\nfunction validate79(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate72(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate72.errors : vErrors.concat(validate72.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            if (!(validate74(data.verticalAlignment, {\n                instancePath: instancePath + \"/verticalAlignment\",\n                parentData: data,\n                parentDataProperty: \"verticalAlignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate74.errors : vErrors.concat(validate74.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err1 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err2 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err2];\n                    }\n                    else {\n                        vErrors.push(err2);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err3 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err4 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                }\n                else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err5 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err7 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err7];\n        }\n        else {\n            vErrors.push(err7);\n        }\n        errors++;\n    }\n    validate79.errors = vErrors;\n    return errors === 0;\n}\nfunction validate84(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (typeof data !== \"string\") {\n        const err0 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"string\"\n            },\n            message: \"must be string\"\n        };\n        if (vErrors === null) {\n            vErrors = [err0];\n        }\n        else {\n            vErrors.push(err0);\n        }\n        errors++;\n    }\n    if (!(((data === \"top\") || (data === \"middle\")) || (data === \"bottom\"))) {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/enum\",\n            keyword: \"enum\",\n            params: {\n                allowedValues: schema21.enum\n            },\n            message: \"must be equal to one of the allowed values\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate84.errors = vErrors;\n    return errors === 0;\n}\nfunction validate43(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"config.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!((((((((key0 === \"border\") || (key0 === \"header\")) || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"drawVerticalLine\")) || (key0 === \"drawHorizontalLine\")) || (key0 === \"singleLine\")) || (key0 === \"spanningCells\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate45(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.header !== undefined) {\n            let data1 = data.header;\n            if (data1 && typeof data1 == \"object\" && !Array.isArray(data1)) {\n                if (data1.content === undefined) {\n                    const err1 = {\n                        instancePath: instancePath + \"/header\",\n                        schemaPath: \"#/properties/header/required\",\n                        keyword: \"required\",\n                        params: {\n                            missingProperty: \"content\"\n                        },\n                        message: \"must have required property '\" + \"content\" + \"'\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err1];\n                    }\n                    else {\n                        vErrors.push(err1);\n                    }\n                    errors++;\n                }\n                for (const key1 in data1) {\n                    if (!((((((key1 === \"content\") || (key1 === \"alignment\")) || (key1 === \"wrapWord\")) || (key1 === \"truncate\")) || (key1 === \"paddingLeft\")) || (key1 === \"paddingRight\"))) {\n                        const err2 = {\n                            instancePath: instancePath + \"/header\",\n                            schemaPath: \"#/properties/header/additionalProperties\",\n                            keyword: \"additionalProperties\",\n                            params: {\n                                additionalProperty: key1\n                            },\n                            message: \"must NOT have additional properties\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err2];\n                        }\n                        else {\n                            vErrors.push(err2);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.content !== undefined) {\n                    if (typeof data1.content !== \"string\") {\n                        const err3 = {\n                            instancePath: instancePath + \"/header/content\",\n                            schemaPath: \"#/properties/header/properties/content/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"string\"\n                            },\n                            message: \"must be string\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err3];\n                        }\n                        else {\n                            vErrors.push(err3);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.alignment !== undefined) {\n                    if (!(validate68(data1.alignment, {\n                        instancePath: instancePath + \"/header/alignment\",\n                        parentData: data1,\n                        parentDataProperty: \"alignment\",\n                        rootData\n                    }))) {\n                        vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                        errors = vErrors.length;\n                    }\n                }\n                if (data1.wrapWord !== undefined) {\n                    if (typeof data1.wrapWord !== \"boolean\") {\n                        const err4 = {\n                            instancePath: instancePath + \"/header/wrapWord\",\n                            schemaPath: \"#/properties/header/properties/wrapWord/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"boolean\"\n                            },\n                            message: \"must be boolean\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err4];\n                        }\n                        else {\n                            vErrors.push(err4);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.truncate !== undefined) {\n                    let data5 = data1.truncate;\n                    if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                        const err5 = {\n                            instancePath: instancePath + \"/header/truncate\",\n                            schemaPath: \"#/properties/header/properties/truncate/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err5];\n                        }\n                        else {\n                            vErrors.push(err5);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingLeft !== undefined) {\n                    let data6 = data1.paddingLeft;\n                    if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                        const err6 = {\n                            instancePath: instancePath + \"/header/paddingLeft\",\n                            schemaPath: \"#/properties/header/properties/paddingLeft/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err6];\n                        }\n                        else {\n                            vErrors.push(err6);\n                        }\n                        errors++;\n                    }\n                }\n                if (data1.paddingRight !== undefined) {\n                    let data7 = data1.paddingRight;\n                    if (!(((typeof data7 == \"number\") && (!(data7 % 1) && !isNaN(data7))) && (isFinite(data7)))) {\n                        const err7 = {\n                            instancePath: instancePath + \"/header/paddingRight\",\n                            schemaPath: \"#/properties/header/properties/paddingRight/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"integer\"\n                            },\n                            message: \"must be integer\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err7];\n                        }\n                        else {\n                            vErrors.push(err7);\n                        }\n                        errors++;\n                    }\n                }\n            }\n            else {\n                const err8 = {\n                    instancePath: instancePath + \"/header\",\n                    schemaPath: \"#/properties/header/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"object\"\n                    },\n                    message: \"must be object\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err8];\n                }\n                else {\n                    vErrors.push(err8);\n                }\n                errors++;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate70(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate70.errors : vErrors.concat(validate70.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate79(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate79.errors : vErrors.concat(validate79.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err9 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err9];\n                }\n                else {\n                    vErrors.push(err9);\n                }\n                errors++;\n            }\n        }\n        if (data.drawHorizontalLine !== undefined) {\n            if (typeof data.drawHorizontalLine != \"function\") {\n                const err10 = {\n                    instancePath: instancePath + \"/drawHorizontalLine\",\n                    schemaPath: \"#/properties/drawHorizontalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err10];\n                }\n                else {\n                    vErrors.push(err10);\n                }\n                errors++;\n            }\n        }\n        if (data.singleLine !== undefined) {\n            if (typeof data.singleLine != \"boolean\") {\n                const err11 = {\n                    instancePath: instancePath + \"/singleLine\",\n                    schemaPath: \"#/properties/singleLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err11];\n                }\n                else {\n                    vErrors.push(err11);\n                }\n                errors++;\n            }\n        }\n        if (data.spanningCells !== undefined) {\n            let data13 = data.spanningCells;\n            if (Array.isArray(data13)) {\n                const len0 = data13.length;\n                for (let i0 = 0; i0 < len0; i0++) {\n                    let data14 = data13[i0];\n                    if (data14 && typeof data14 == \"object\" && !Array.isArray(data14)) {\n                        if (data14.row === undefined) {\n                            const err12 = {\n                                instancePath: instancePath + \"/spanningCells/\" + i0,\n                                schemaPath: \"#/properties/spanningCells/items/required\",\n                                keyword: \"required\",\n                                params: {\n                                    missingProperty: \"row\"\n                                },\n                                message: \"must have required property '\" + \"row\" + \"'\"\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err12];\n                            }\n                            else {\n                                vErrors.push(err12);\n                            }\n                            errors++;\n                        }\n                        if (data14.col === undefined) {\n                            const err13 = {\n                                instancePath: instancePath + \"/spanningCells/\" + i0,\n                                schemaPath: \"#/properties/spanningCells/items/required\",\n                                keyword: \"required\",\n                                params: {\n                                    missingProperty: \"col\"\n                                },\n                                message: \"must have required property '\" + \"col\" + \"'\"\n                            };\n                            if (vErrors === null) {\n                                vErrors = [err13];\n                            }\n                            else {\n                                vErrors.push(err13);\n                            }\n                            errors++;\n                        }\n                        for (const key2 in data14) {\n                            if (!(func8.call(schema13.properties.spanningCells.items.properties, key2))) {\n                                const err14 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0,\n                                    schemaPath: \"#/properties/spanningCells/items/additionalProperties\",\n                                    keyword: \"additionalProperties\",\n                                    params: {\n                                        additionalProperty: key2\n                                    },\n                                    message: \"must NOT have additional properties\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err14];\n                                }\n                                else {\n                                    vErrors.push(err14);\n                                }\n                                errors++;\n                            }\n                        }\n                        if (data14.col !== undefined) {\n                            let data15 = data14.col;\n                            if (!(((typeof data15 == \"number\") && (!(data15 % 1) && !isNaN(data15))) && (isFinite(data15)))) {\n                                const err15 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/col\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/col/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err15];\n                                }\n                                else {\n                                    vErrors.push(err15);\n                                }\n                                errors++;\n                            }\n                            if ((typeof data15 == \"number\") && (isFinite(data15))) {\n                                if (data15 < 0 || isNaN(data15)) {\n                                    const err16 = {\n                                        instancePath: instancePath + \"/spanningCells/\" + i0 + \"/col\",\n                                        schemaPath: \"#/properties/spanningCells/items/properties/col/minimum\",\n                                        keyword: \"minimum\",\n                                        params: {\n                                            comparison: \">=\",\n                                            limit: 0\n                                        },\n                                        message: \"must be >= 0\"\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err16];\n                                    }\n                                    else {\n                                        vErrors.push(err16);\n                                    }\n                                    errors++;\n                                }\n                            }\n                        }\n                        if (data14.row !== undefined) {\n                            let data16 = data14.row;\n                            if (!(((typeof data16 == \"number\") && (!(data16 % 1) && !isNaN(data16))) && (isFinite(data16)))) {\n                                const err17 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/row\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/row/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err17];\n                                }\n                                else {\n                                    vErrors.push(err17);\n                                }\n                                errors++;\n                            }\n                            if ((typeof data16 == \"number\") && (isFinite(data16))) {\n                                if (data16 < 0 || isNaN(data16)) {\n                                    const err18 = {\n                                        instancePath: instancePath + \"/spanningCells/\" + i0 + \"/row\",\n                                        schemaPath: \"#/properties/spanningCells/items/properties/row/minimum\",\n                                        keyword: \"minimum\",\n                                        params: {\n                                            comparison: \">=\",\n                                            limit: 0\n                                        },\n                                        message: \"must be >= 0\"\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err18];\n                                    }\n                                    else {\n                                        vErrors.push(err18);\n                                    }\n                                    errors++;\n                                }\n                            }\n                        }\n                        if (data14.colSpan !== undefined) {\n                            let data17 = data14.colSpan;\n                            if (!(((typeof data17 == \"number\") && (!(data17 % 1) && !isNaN(data17))) && (isFinite(data17)))) {\n                                const err19 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/colSpan\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/colSpan/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err19];\n                                }\n                                else {\n                                    vErrors.push(err19);\n                                }\n                                errors++;\n                            }\n                            if ((typeof data17 == \"number\") && (isFinite(data17))) {\n                                if (data17 < 1 || isNaN(data17)) {\n                                    const err20 = {\n                                        instancePath: instancePath + \"/spanningCells/\" + i0 + \"/colSpan\",\n                                        schemaPath: \"#/properties/spanningCells/items/properties/colSpan/minimum\",\n                                        keyword: \"minimum\",\n                                        params: {\n                                            comparison: \">=\",\n                                            limit: 1\n                                        },\n                                        message: \"must be >= 1\"\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err20];\n                                    }\n                                    else {\n                                        vErrors.push(err20);\n                                    }\n                                    errors++;\n                                }\n                            }\n                        }\n                        if (data14.rowSpan !== undefined) {\n                            let data18 = data14.rowSpan;\n                            if (!(((typeof data18 == \"number\") && (!(data18 % 1) && !isNaN(data18))) && (isFinite(data18)))) {\n                                const err21 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/rowSpan\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/rowSpan/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err21];\n                                }\n                                else {\n                                    vErrors.push(err21);\n                                }\n                                errors++;\n                            }\n                            if ((typeof data18 == \"number\") && (isFinite(data18))) {\n                                if (data18 < 1 || isNaN(data18)) {\n                                    const err22 = {\n                                        instancePath: instancePath + \"/spanningCells/\" + i0 + \"/rowSpan\",\n                                        schemaPath: \"#/properties/spanningCells/items/properties/rowSpan/minimum\",\n                                        keyword: \"minimum\",\n                                        params: {\n                                            comparison: \">=\",\n                                            limit: 1\n                                        },\n                                        message: \"must be >= 1\"\n                                    };\n                                    if (vErrors === null) {\n                                        vErrors = [err22];\n                                    }\n                                    else {\n                                        vErrors.push(err22);\n                                    }\n                                    errors++;\n                                }\n                            }\n                        }\n                        if (data14.alignment !== undefined) {\n                            if (!(validate68(data14.alignment, {\n                                instancePath: instancePath + \"/spanningCells/\" + i0 + \"/alignment\",\n                                parentData: data14,\n                                parentDataProperty: \"alignment\",\n                                rootData\n                            }))) {\n                                vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);\n                                errors = vErrors.length;\n                            }\n                        }\n                        if (data14.verticalAlignment !== undefined) {\n                            if (!(validate84(data14.verticalAlignment, {\n                                instancePath: instancePath + \"/spanningCells/\" + i0 + \"/verticalAlignment\",\n                                parentData: data14,\n                                parentDataProperty: \"verticalAlignment\",\n                                rootData\n                            }))) {\n                                vErrors = vErrors === null ? validate84.errors : vErrors.concat(validate84.errors);\n                                errors = vErrors.length;\n                            }\n                        }\n                        if (data14.wrapWord !== undefined) {\n                            if (typeof data14.wrapWord !== \"boolean\") {\n                                const err23 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/wrapWord\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/wrapWord/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"boolean\"\n                                    },\n                                    message: \"must be boolean\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err23];\n                                }\n                                else {\n                                    vErrors.push(err23);\n                                }\n                                errors++;\n                            }\n                        }\n                        if (data14.truncate !== undefined) {\n                            let data22 = data14.truncate;\n                            if (!(((typeof data22 == \"number\") && (!(data22 % 1) && !isNaN(data22))) && (isFinite(data22)))) {\n                                const err24 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/truncate\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/truncate/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err24];\n                                }\n                                else {\n                                    vErrors.push(err24);\n                                }\n                                errors++;\n                            }\n                        }\n                        if (data14.paddingLeft !== undefined) {\n                            let data23 = data14.paddingLeft;\n                            if (!(((typeof data23 == \"number\") && (!(data23 % 1) && !isNaN(data23))) && (isFinite(data23)))) {\n                                const err25 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/paddingLeft\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/paddingLeft/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err25];\n                                }\n                                else {\n                                    vErrors.push(err25);\n                                }\n                                errors++;\n                            }\n                        }\n                        if (data14.paddingRight !== undefined) {\n                            let data24 = data14.paddingRight;\n                            if (!(((typeof data24 == \"number\") && (!(data24 % 1) && !isNaN(data24))) && (isFinite(data24)))) {\n                                const err26 = {\n                                    instancePath: instancePath + \"/spanningCells/\" + i0 + \"/paddingRight\",\n                                    schemaPath: \"#/properties/spanningCells/items/properties/paddingRight/type\",\n                                    keyword: \"type\",\n                                    params: {\n                                        type: \"integer\"\n                                    },\n                                    message: \"must be integer\"\n                                };\n                                if (vErrors === null) {\n                                    vErrors = [err26];\n                                }\n                                else {\n                                    vErrors.push(err26);\n                                }\n                                errors++;\n                            }\n                        }\n                    }\n                    else {\n                        const err27 = {\n                            instancePath: instancePath + \"/spanningCells/\" + i0,\n                            schemaPath: \"#/properties/spanningCells/items/type\",\n                            keyword: \"type\",\n                            params: {\n                                type: \"object\"\n                            },\n                            message: \"must be object\"\n                        };\n                        if (vErrors === null) {\n                            vErrors = [err27];\n                        }\n                        else {\n                            vErrors.push(err27);\n                        }\n                        errors++;\n                    }\n                }\n            }\n            else {\n                const err28 = {\n                    instancePath: instancePath + \"/spanningCells\",\n                    schemaPath: \"#/properties/spanningCells/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"array\"\n                    },\n                    message: \"must be array\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err28];\n                }\n                else {\n                    vErrors.push(err28);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err29 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err29];\n        }\n        else {\n            vErrors.push(err29);\n        }\n        errors++;\n    }\n    validate43.errors = vErrors;\n    return errors === 0;\n}\nexports[\"streamConfig.json\"] = validate86;\nconst schema24 = {\n    \"$id\": \"streamConfig.json\",\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"border\": {\n            \"$ref\": \"shared.json#/definitions/borders\"\n        },\n        \"columns\": {\n            \"$ref\": \"shared.json#/definitions/columns\"\n        },\n        \"columnDefault\": {\n            \"$ref\": \"shared.json#/definitions/column\"\n        },\n        \"columnCount\": {\n            \"type\": \"integer\",\n            \"minimum\": 1\n        },\n        \"drawVerticalLine\": {\n            \"typeof\": \"function\"\n        }\n    },\n    \"required\": [\"columnDefault\", \"columnCount\"],\n    \"additionalProperties\": false\n};\nfunction validate87(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(func8.call(schema15.properties, key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.topBody !== undefined) {\n            if (!(validate46(data.topBody, {\n                instancePath: instancePath + \"/topBody\",\n                parentData: data,\n                parentDataProperty: \"topBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topJoin !== undefined) {\n            if (!(validate46(data.topJoin, {\n                instancePath: instancePath + \"/topJoin\",\n                parentData: data,\n                parentDataProperty: \"topJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topLeft !== undefined) {\n            if (!(validate46(data.topLeft, {\n                instancePath: instancePath + \"/topLeft\",\n                parentData: data,\n                parentDataProperty: \"topLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.topRight !== undefined) {\n            if (!(validate46(data.topRight, {\n                instancePath: instancePath + \"/topRight\",\n                parentData: data,\n                parentDataProperty: \"topRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomBody !== undefined) {\n            if (!(validate46(data.bottomBody, {\n                instancePath: instancePath + \"/bottomBody\",\n                parentData: data,\n                parentDataProperty: \"bottomBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomJoin !== undefined) {\n            if (!(validate46(data.bottomJoin, {\n                instancePath: instancePath + \"/bottomJoin\",\n                parentData: data,\n                parentDataProperty: \"bottomJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomLeft !== undefined) {\n            if (!(validate46(data.bottomLeft, {\n                instancePath: instancePath + \"/bottomLeft\",\n                parentData: data,\n                parentDataProperty: \"bottomLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bottomRight !== undefined) {\n            if (!(validate46(data.bottomRight, {\n                instancePath: instancePath + \"/bottomRight\",\n                parentData: data,\n                parentDataProperty: \"bottomRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyLeft !== undefined) {\n            if (!(validate46(data.bodyLeft, {\n                instancePath: instancePath + \"/bodyLeft\",\n                parentData: data,\n                parentDataProperty: \"bodyLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyRight !== undefined) {\n            if (!(validate46(data.bodyRight, {\n                instancePath: instancePath + \"/bodyRight\",\n                parentData: data,\n                parentDataProperty: \"bodyRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.bodyJoin !== undefined) {\n            if (!(validate46(data.bodyJoin, {\n                instancePath: instancePath + \"/bodyJoin\",\n                parentData: data,\n                parentDataProperty: \"bodyJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.headerJoin !== undefined) {\n            if (!(validate46(data.headerJoin, {\n                instancePath: instancePath + \"/headerJoin\",\n                parentData: data,\n                parentDataProperty: \"headerJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinBody !== undefined) {\n            if (!(validate46(data.joinBody, {\n                instancePath: instancePath + \"/joinBody\",\n                parentData: data,\n                parentDataProperty: \"joinBody\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinLeft !== undefined) {\n            if (!(validate46(data.joinLeft, {\n                instancePath: instancePath + \"/joinLeft\",\n                parentData: data,\n                parentDataProperty: \"joinLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinRight !== undefined) {\n            if (!(validate46(data.joinRight, {\n                instancePath: instancePath + \"/joinRight\",\n                parentData: data,\n                parentDataProperty: \"joinRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinJoin !== undefined) {\n            if (!(validate46(data.joinJoin, {\n                instancePath: instancePath + \"/joinJoin\",\n                parentData: data,\n                parentDataProperty: \"joinJoin\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleUp !== undefined) {\n            if (!(validate46(data.joinMiddleUp, {\n                instancePath: instancePath + \"/joinMiddleUp\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleUp\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleDown !== undefined) {\n            if (!(validate46(data.joinMiddleDown, {\n                instancePath: instancePath + \"/joinMiddleDown\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleDown\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleLeft !== undefined) {\n            if (!(validate46(data.joinMiddleLeft, {\n                instancePath: instancePath + \"/joinMiddleLeft\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleLeft\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.joinMiddleRight !== undefined) {\n            if (!(validate46(data.joinMiddleRight, {\n                instancePath: instancePath + \"/joinMiddleRight\",\n                parentData: data,\n                parentDataProperty: \"joinMiddleRight\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    validate87.errors = vErrors;\n    return errors === 0;\n}\nfunction validate109(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    const _errs0 = errors;\n    let valid0 = false;\n    let passing0 = null;\n    const _errs1 = errors;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(pattern0.test(key0))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/oneOf/0/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        for (const key1 in data) {\n            if (pattern0.test(key1)) {\n                if (!(validate71(data[key1], {\n                    instancePath: instancePath + \"/\" + key1.replace(/~/g, \"~0\").replace(/\\//g, \"~1\"),\n                    parentData: data,\n                    parentDataProperty: key1,\n                    rootData\n                }))) {\n                    vErrors = vErrors === null ? validate71.errors : vErrors.concat(validate71.errors);\n                    errors = vErrors.length;\n                }\n            }\n        }\n    }\n    else {\n        const err1 = {\n            instancePath,\n            schemaPath: \"#/oneOf/0/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err1];\n        }\n        else {\n            vErrors.push(err1);\n        }\n        errors++;\n    }\n    var _valid0 = _errs1 === errors;\n    if (_valid0) {\n        valid0 = true;\n        passing0 = 0;\n    }\n    const _errs5 = errors;\n    if (Array.isArray(data)) {\n        const len0 = data.length;\n        for (let i0 = 0; i0 < len0; i0++) {\n            if (!(validate71(data[i0], {\n                instancePath: instancePath + \"/\" + i0,\n                parentData: data,\n                parentDataProperty: i0,\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate71.errors : vErrors.concat(validate71.errors);\n                errors = vErrors.length;\n            }\n        }\n    }\n    else {\n        const err2 = {\n            instancePath,\n            schemaPath: \"#/oneOf/1/type\",\n            keyword: \"type\",\n            params: {\n                type: \"array\"\n            },\n            message: \"must be array\"\n        };\n        if (vErrors === null) {\n            vErrors = [err2];\n        }\n        else {\n            vErrors.push(err2);\n        }\n        errors++;\n    }\n    var _valid0 = _errs5 === errors;\n    if (_valid0 && valid0) {\n        valid0 = false;\n        passing0 = [passing0, 1];\n    }\n    else {\n        if (_valid0) {\n            valid0 = true;\n            passing0 = 1;\n        }\n    }\n    if (!valid0) {\n        const err3 = {\n            instancePath,\n            schemaPath: \"#/oneOf\",\n            keyword: \"oneOf\",\n            params: {\n                passingSchemas: passing0\n            },\n            message: \"must match exactly one schema in oneOf\"\n        };\n        if (vErrors === null) {\n            vErrors = [err3];\n        }\n        else {\n            vErrors.push(err3);\n        }\n        errors++;\n    }\n    else {\n        errors = _errs0;\n        if (vErrors !== null) {\n            if (_errs0) {\n                vErrors.length = _errs0;\n            }\n            else {\n                vErrors = null;\n            }\n        }\n    }\n    validate109.errors = vErrors;\n    return errors === 0;\n}\nfunction validate113(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        for (const key0 in data) {\n            if (!(((((((key0 === \"alignment\") || (key0 === \"verticalAlignment\")) || (key0 === \"width\")) || (key0 === \"wrapWord\")) || (key0 === \"truncate\")) || (key0 === \"paddingLeft\")) || (key0 === \"paddingRight\"))) {\n                const err0 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err0];\n                }\n                else {\n                    vErrors.push(err0);\n                }\n                errors++;\n            }\n        }\n        if (data.alignment !== undefined) {\n            if (!(validate72(data.alignment, {\n                instancePath: instancePath + \"/alignment\",\n                parentData: data,\n                parentDataProperty: \"alignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate72.errors : vErrors.concat(validate72.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.verticalAlignment !== undefined) {\n            if (!(validate74(data.verticalAlignment, {\n                instancePath: instancePath + \"/verticalAlignment\",\n                parentData: data,\n                parentDataProperty: \"verticalAlignment\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate74.errors : vErrors.concat(validate74.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.width !== undefined) {\n            let data2 = data.width;\n            if (!(((typeof data2 == \"number\") && (!(data2 % 1) && !isNaN(data2))) && (isFinite(data2)))) {\n                const err1 = {\n                    instancePath: instancePath + \"/width\",\n                    schemaPath: \"#/properties/width/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err1];\n                }\n                else {\n                    vErrors.push(err1);\n                }\n                errors++;\n            }\n            if ((typeof data2 == \"number\") && (isFinite(data2))) {\n                if (data2 < 1 || isNaN(data2)) {\n                    const err2 = {\n                        instancePath: instancePath + \"/width\",\n                        schemaPath: \"#/properties/width/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err2];\n                    }\n                    else {\n                        vErrors.push(err2);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.wrapWord !== undefined) {\n            if (typeof data.wrapWord !== \"boolean\") {\n                const err3 = {\n                    instancePath: instancePath + \"/wrapWord\",\n                    schemaPath: \"#/properties/wrapWord/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"boolean\"\n                    },\n                    message: \"must be boolean\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n        }\n        if (data.truncate !== undefined) {\n            let data4 = data.truncate;\n            if (!(((typeof data4 == \"number\") && (!(data4 % 1) && !isNaN(data4))) && (isFinite(data4)))) {\n                const err4 = {\n                    instancePath: instancePath + \"/truncate\",\n                    schemaPath: \"#/properties/truncate/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err4];\n                }\n                else {\n                    vErrors.push(err4);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingLeft !== undefined) {\n            let data5 = data.paddingLeft;\n            if (!(((typeof data5 == \"number\") && (!(data5 % 1) && !isNaN(data5))) && (isFinite(data5)))) {\n                const err5 = {\n                    instancePath: instancePath + \"/paddingLeft\",\n                    schemaPath: \"#/properties/paddingLeft/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n        if (data.paddingRight !== undefined) {\n            let data6 = data.paddingRight;\n            if (!(((typeof data6 == \"number\") && (!(data6 % 1) && !isNaN(data6))) && (isFinite(data6)))) {\n                const err6 = {\n                    instancePath: instancePath + \"/paddingRight\",\n                    schemaPath: \"#/properties/paddingRight/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err6];\n                }\n                else {\n                    vErrors.push(err6);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err7 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err7];\n        }\n        else {\n            vErrors.push(err7);\n        }\n        errors++;\n    }\n    validate113.errors = vErrors;\n    return errors === 0;\n}\nfunction validate86(data, { instancePath = \"\", parentData, parentDataProperty, rootData = data } = {}) {\n    /*# sourceURL=\"streamConfig.json\" */ ;\n    let vErrors = null;\n    let errors = 0;\n    if (data && typeof data == \"object\" && !Array.isArray(data)) {\n        if (data.columnDefault === undefined) {\n            const err0 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnDefault\"\n                },\n                message: \"must have required property '\" + \"columnDefault\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err0];\n            }\n            else {\n                vErrors.push(err0);\n            }\n            errors++;\n        }\n        if (data.columnCount === undefined) {\n            const err1 = {\n                instancePath,\n                schemaPath: \"#/required\",\n                keyword: \"required\",\n                params: {\n                    missingProperty: \"columnCount\"\n                },\n                message: \"must have required property '\" + \"columnCount\" + \"'\"\n            };\n            if (vErrors === null) {\n                vErrors = [err1];\n            }\n            else {\n                vErrors.push(err1);\n            }\n            errors++;\n        }\n        for (const key0 in data) {\n            if (!(((((key0 === \"border\") || (key0 === \"columns\")) || (key0 === \"columnDefault\")) || (key0 === \"columnCount\")) || (key0 === \"drawVerticalLine\"))) {\n                const err2 = {\n                    instancePath,\n                    schemaPath: \"#/additionalProperties\",\n                    keyword: \"additionalProperties\",\n                    params: {\n                        additionalProperty: key0\n                    },\n                    message: \"must NOT have additional properties\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err2];\n                }\n                else {\n                    vErrors.push(err2);\n                }\n                errors++;\n            }\n        }\n        if (data.border !== undefined) {\n            if (!(validate87(data.border, {\n                instancePath: instancePath + \"/border\",\n                parentData: data,\n                parentDataProperty: \"border\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columns !== undefined) {\n            if (!(validate109(data.columns, {\n                instancePath: instancePath + \"/columns\",\n                parentData: data,\n                parentDataProperty: \"columns\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate109.errors : vErrors.concat(validate109.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnDefault !== undefined) {\n            if (!(validate113(data.columnDefault, {\n                instancePath: instancePath + \"/columnDefault\",\n                parentData: data,\n                parentDataProperty: \"columnDefault\",\n                rootData\n            }))) {\n                vErrors = vErrors === null ? validate113.errors : vErrors.concat(validate113.errors);\n                errors = vErrors.length;\n            }\n        }\n        if (data.columnCount !== undefined) {\n            let data3 = data.columnCount;\n            if (!(((typeof data3 == \"number\") && (!(data3 % 1) && !isNaN(data3))) && (isFinite(data3)))) {\n                const err3 = {\n                    instancePath: instancePath + \"/columnCount\",\n                    schemaPath: \"#/properties/columnCount/type\",\n                    keyword: \"type\",\n                    params: {\n                        type: \"integer\"\n                    },\n                    message: \"must be integer\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err3];\n                }\n                else {\n                    vErrors.push(err3);\n                }\n                errors++;\n            }\n            if ((typeof data3 == \"number\") && (isFinite(data3))) {\n                if (data3 < 1 || isNaN(data3)) {\n                    const err4 = {\n                        instancePath: instancePath + \"/columnCount\",\n                        schemaPath: \"#/properties/columnCount/minimum\",\n                        keyword: \"minimum\",\n                        params: {\n                            comparison: \">=\",\n                            limit: 1\n                        },\n                        message: \"must be >= 1\"\n                    };\n                    if (vErrors === null) {\n                        vErrors = [err4];\n                    }\n                    else {\n                        vErrors.push(err4);\n                    }\n                    errors++;\n                }\n            }\n        }\n        if (data.drawVerticalLine !== undefined) {\n            if (typeof data.drawVerticalLine != \"function\") {\n                const err5 = {\n                    instancePath: instancePath + \"/drawVerticalLine\",\n                    schemaPath: \"#/properties/drawVerticalLine/typeof\",\n                    keyword: \"typeof\",\n                    params: {},\n                    message: \"must pass \\\"typeof\\\" keyword validation\"\n                };\n                if (vErrors === null) {\n                    vErrors = [err5];\n                }\n                else {\n                    vErrors.push(err5);\n                }\n                errors++;\n            }\n        }\n    }\n    else {\n        const err6 = {\n            instancePath,\n            schemaPath: \"#/type\",\n            keyword: \"type\",\n            params: {\n                type: \"object\"\n            },\n            message: \"must be object\"\n        };\n        if (vErrors === null) {\n            vErrors = [err6];\n        }\n        else {\n            vErrors.push(err6);\n        }\n        errors++;\n    }\n    validate86.errors = vErrors;\n    return errors === 0;\n}\n//# sourceMappingURL=validators.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/generated/validators.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/getBorderCharacters.js":
/*!************************************************************!*\
  !*** ./node_modules/table/dist/src/getBorderCharacters.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* eslint-disable sort-keys-fix/sort-keys-fix */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBorderCharacters = void 0;\nconst getBorderCharacters = (name) => {\n    if (name === 'honeywell') {\n        return {\n            topBody: '═',\n            topJoin: '╤',\n            topLeft: '╔',\n            topRight: '╗',\n            bottomBody: '═',\n            bottomJoin: '╧',\n            bottomLeft: '╚',\n            bottomRight: '╝',\n            bodyLeft: '║',\n            bodyRight: '║',\n            bodyJoin: '│',\n            headerJoin: '┬',\n            joinBody: '─',\n            joinLeft: '╟',\n            joinRight: '╢',\n            joinJoin: '┼',\n            joinMiddleDown: '┬',\n            joinMiddleUp: '┴',\n            joinMiddleLeft: '┤',\n            joinMiddleRight: '├',\n        };\n    }\n    if (name === 'norc') {\n        return {\n            topBody: '─',\n            topJoin: '┬',\n            topLeft: '┌',\n            topRight: '┐',\n            bottomBody: '─',\n            bottomJoin: '┴',\n            bottomLeft: '└',\n            bottomRight: '┘',\n            bodyLeft: '│',\n            bodyRight: '│',\n            bodyJoin: '│',\n            headerJoin: '┬',\n            joinBody: '─',\n            joinLeft: '├',\n            joinRight: '┤',\n            joinJoin: '┼',\n            joinMiddleDown: '┬',\n            joinMiddleUp: '┴',\n            joinMiddleLeft: '┤',\n            joinMiddleRight: '├',\n        };\n    }\n    if (name === 'ramac') {\n        return {\n            topBody: '-',\n            topJoin: '+',\n            topLeft: '+',\n            topRight: '+',\n            bottomBody: '-',\n            bottomJoin: '+',\n            bottomLeft: '+',\n            bottomRight: '+',\n            bodyLeft: '|',\n            bodyRight: '|',\n            bodyJoin: '|',\n            headerJoin: '+',\n            joinBody: '-',\n            joinLeft: '|',\n            joinRight: '|',\n            joinJoin: '|',\n            joinMiddleDown: '+',\n            joinMiddleUp: '+',\n            joinMiddleLeft: '+',\n            joinMiddleRight: '+',\n        };\n    }\n    if (name === 'void') {\n        return {\n            topBody: '',\n            topJoin: '',\n            topLeft: '',\n            topRight: '',\n            bottomBody: '',\n            bottomJoin: '',\n            bottomLeft: '',\n            bottomRight: '',\n            bodyLeft: '',\n            bodyRight: '',\n            bodyJoin: '',\n            headerJoin: '',\n            joinBody: '',\n            joinLeft: '',\n            joinRight: '',\n            joinJoin: '',\n            joinMiddleDown: '',\n            joinMiddleUp: '',\n            joinMiddleLeft: '',\n            joinMiddleRight: '',\n        };\n    }\n    throw new Error('Unknown border template \"' + name + '\".');\n};\nexports.getBorderCharacters = getBorderCharacters;\n//# sourceMappingURL=getBorderCharacters.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvZ2V0Qm9yZGVyQ2hhcmFjdGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2dldEJvcmRlckNoYXJhY3RlcnMuanM/ZGQwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8qIGVzbGludC1kaXNhYmxlIHNvcnQta2V5cy1maXgvc29ydC1rZXlzLWZpeCAqL1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRCb3JkZXJDaGFyYWN0ZXJzID0gdm9pZCAwO1xuY29uc3QgZ2V0Qm9yZGVyQ2hhcmFjdGVycyA9IChuYW1lKSA9PiB7XG4gICAgaWYgKG5hbWUgPT09ICdob25leXdlbGwnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b3BCb2R5OiAn4pWQJyxcbiAgICAgICAgICAgIHRvcEpvaW46ICfilaQnLFxuICAgICAgICAgICAgdG9wTGVmdDogJ+KVlCcsXG4gICAgICAgICAgICB0b3BSaWdodDogJ+KVlycsXG4gICAgICAgICAgICBib3R0b21Cb2R5OiAn4pWQJyxcbiAgICAgICAgICAgIGJvdHRvbUpvaW46ICfilacnLFxuICAgICAgICAgICAgYm90dG9tTGVmdDogJ+KVmicsXG4gICAgICAgICAgICBib3R0b21SaWdodDogJ+KVnScsXG4gICAgICAgICAgICBib2R5TGVmdDogJ+KVkScsXG4gICAgICAgICAgICBib2R5UmlnaHQ6ICfilZEnLFxuICAgICAgICAgICAgYm9keUpvaW46ICfilIInLFxuICAgICAgICAgICAgaGVhZGVySm9pbjogJ+KUrCcsXG4gICAgICAgICAgICBqb2luQm9keTogJ+KUgCcsXG4gICAgICAgICAgICBqb2luTGVmdDogJ+KVnycsXG4gICAgICAgICAgICBqb2luUmlnaHQ6ICfilaInLFxuICAgICAgICAgICAgam9pbkpvaW46ICfilLwnLFxuICAgICAgICAgICAgam9pbk1pZGRsZURvd246ICfilKwnLFxuICAgICAgICAgICAgam9pbk1pZGRsZVVwOiAn4pS0JyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVMZWZ0OiAn4pSkJyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVSaWdodDogJ+KUnCcsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChuYW1lID09PSAnbm9yYycpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvcEJvZHk6ICfilIAnLFxuICAgICAgICAgICAgdG9wSm9pbjogJ+KUrCcsXG4gICAgICAgICAgICB0b3BMZWZ0OiAn4pSMJyxcbiAgICAgICAgICAgIHRvcFJpZ2h0OiAn4pSQJyxcbiAgICAgICAgICAgIGJvdHRvbUJvZHk6ICfilIAnLFxuICAgICAgICAgICAgYm90dG9tSm9pbjogJ+KUtCcsXG4gICAgICAgICAgICBib3R0b21MZWZ0OiAn4pSUJyxcbiAgICAgICAgICAgIGJvdHRvbVJpZ2h0OiAn4pSYJyxcbiAgICAgICAgICAgIGJvZHlMZWZ0OiAn4pSCJyxcbiAgICAgICAgICAgIGJvZHlSaWdodDogJ+KUgicsXG4gICAgICAgICAgICBib2R5Sm9pbjogJ+KUgicsXG4gICAgICAgICAgICBoZWFkZXJKb2luOiAn4pSsJyxcbiAgICAgICAgICAgIGpvaW5Cb2R5OiAn4pSAJyxcbiAgICAgICAgICAgIGpvaW5MZWZ0OiAn4pScJyxcbiAgICAgICAgICAgIGpvaW5SaWdodDogJ+KUpCcsXG4gICAgICAgICAgICBqb2luSm9pbjogJ+KUvCcsXG4gICAgICAgICAgICBqb2luTWlkZGxlRG93bjogJ+KUrCcsXG4gICAgICAgICAgICBqb2luTWlkZGxlVXA6ICfilLQnLFxuICAgICAgICAgICAgam9pbk1pZGRsZUxlZnQ6ICfilKQnLFxuICAgICAgICAgICAgam9pbk1pZGRsZVJpZ2h0OiAn4pScJyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT09ICdyYW1hYycpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHRvcEJvZHk6ICctJyxcbiAgICAgICAgICAgIHRvcEpvaW46ICcrJyxcbiAgICAgICAgICAgIHRvcExlZnQ6ICcrJyxcbiAgICAgICAgICAgIHRvcFJpZ2h0OiAnKycsXG4gICAgICAgICAgICBib3R0b21Cb2R5OiAnLScsXG4gICAgICAgICAgICBib3R0b21Kb2luOiAnKycsXG4gICAgICAgICAgICBib3R0b21MZWZ0OiAnKycsXG4gICAgICAgICAgICBib3R0b21SaWdodDogJysnLFxuICAgICAgICAgICAgYm9keUxlZnQ6ICd8JyxcbiAgICAgICAgICAgIGJvZHlSaWdodDogJ3wnLFxuICAgICAgICAgICAgYm9keUpvaW46ICd8JyxcbiAgICAgICAgICAgIGhlYWRlckpvaW46ICcrJyxcbiAgICAgICAgICAgIGpvaW5Cb2R5OiAnLScsXG4gICAgICAgICAgICBqb2luTGVmdDogJ3wnLFxuICAgICAgICAgICAgam9pblJpZ2h0OiAnfCcsXG4gICAgICAgICAgICBqb2luSm9pbjogJ3wnLFxuICAgICAgICAgICAgam9pbk1pZGRsZURvd246ICcrJyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVVcDogJysnLFxuICAgICAgICAgICAgam9pbk1pZGRsZUxlZnQ6ICcrJyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVSaWdodDogJysnLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAobmFtZSA9PT0gJ3ZvaWQnKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0b3BCb2R5OiAnJyxcbiAgICAgICAgICAgIHRvcEpvaW46ICcnLFxuICAgICAgICAgICAgdG9wTGVmdDogJycsXG4gICAgICAgICAgICB0b3BSaWdodDogJycsXG4gICAgICAgICAgICBib3R0b21Cb2R5OiAnJyxcbiAgICAgICAgICAgIGJvdHRvbUpvaW46ICcnLFxuICAgICAgICAgICAgYm90dG9tTGVmdDogJycsXG4gICAgICAgICAgICBib3R0b21SaWdodDogJycsXG4gICAgICAgICAgICBib2R5TGVmdDogJycsXG4gICAgICAgICAgICBib2R5UmlnaHQ6ICcnLFxuICAgICAgICAgICAgYm9keUpvaW46ICcnLFxuICAgICAgICAgICAgaGVhZGVySm9pbjogJycsXG4gICAgICAgICAgICBqb2luQm9keTogJycsXG4gICAgICAgICAgICBqb2luTGVmdDogJycsXG4gICAgICAgICAgICBqb2luUmlnaHQ6ICcnLFxuICAgICAgICAgICAgam9pbkpvaW46ICcnLFxuICAgICAgICAgICAgam9pbk1pZGRsZURvd246ICcnLFxuICAgICAgICAgICAgam9pbk1pZGRsZVVwOiAnJyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVMZWZ0OiAnJyxcbiAgICAgICAgICAgIGpvaW5NaWRkbGVSaWdodDogJycsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biBib3JkZXIgdGVtcGxhdGUgXCInICsgbmFtZSArICdcIi4nKTtcbn07XG5leHBvcnRzLmdldEJvcmRlckNoYXJhY3RlcnMgPSBnZXRCb3JkZXJDaGFyYWN0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0Qm9yZGVyQ2hhcmFjdGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/getBorderCharacters.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/index.js":
/*!**********************************************!*\
  !*** ./node_modules/table/dist/src/index.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getBorderCharacters = exports.createStream = exports.table = void 0;\nconst createStream_1 = __webpack_require__(/*! ./createStream */ \"(ssr)/./node_modules/table/dist/src/createStream.js\");\nObject.defineProperty(exports, \"createStream\", ({ enumerable: true, get: function () { return createStream_1.createStream; } }));\nconst getBorderCharacters_1 = __webpack_require__(/*! ./getBorderCharacters */ \"(ssr)/./node_modules/table/dist/src/getBorderCharacters.js\");\nObject.defineProperty(exports, \"getBorderCharacters\", ({ enumerable: true, get: function () { return getBorderCharacters_1.getBorderCharacters; } }));\nconst table_1 = __webpack_require__(/*! ./table */ \"(ssr)/./node_modules/table/dist/src/table.js\");\nObject.defineProperty(exports, \"table\", ({ enumerable: true, get: function () { return table_1.table; } }));\n__exportStar(__webpack_require__(/*! ./types/api */ \"(ssr)/./node_modules/table/dist/src/types/api.js\"), exports);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0EsbUNBQW1DLG9DQUFvQyxnQkFBZ0I7QUFDdkYsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLG9CQUFvQixHQUFHLGFBQWE7QUFDbEUsdUJBQXVCLG1CQUFPLENBQUMsMkVBQWdCO0FBQy9DLGdEQUErQyxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUM5SCw4QkFBOEIsbUJBQU8sQ0FBQyx5RkFBdUI7QUFDN0QsdURBQXNELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ25KLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxhQUFhLG1CQUFPLENBQUMscUVBQWE7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2luZGV4LmpzP2RmNzYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fZXhwb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19leHBvcnRTdGFyKSB8fCBmdW5jdGlvbihtLCBleHBvcnRzKSB7XG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChleHBvcnRzLCBwKSkgX19jcmVhdGVCaW5kaW5nKGV4cG9ydHMsIG0sIHApO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0Qm9yZGVyQ2hhcmFjdGVycyA9IGV4cG9ydHMuY3JlYXRlU3RyZWFtID0gZXhwb3J0cy50YWJsZSA9IHZvaWQgMDtcbmNvbnN0IGNyZWF0ZVN0cmVhbV8xID0gcmVxdWlyZShcIi4vY3JlYXRlU3RyZWFtXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjcmVhdGVTdHJlYW1fMS5jcmVhdGVTdHJlYW07IH0gfSk7XG5jb25zdCBnZXRCb3JkZXJDaGFyYWN0ZXJzXzEgPSByZXF1aXJlKFwiLi9nZXRCb3JkZXJDaGFyYWN0ZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0Qm9yZGVyQ2hhcmFjdGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZ2V0Qm9yZGVyQ2hhcmFjdGVyc18xLmdldEJvcmRlckNoYXJhY3RlcnM7IH0gfSk7XG5jb25zdCB0YWJsZV8xID0gcmVxdWlyZShcIi4vdGFibGVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0YWJsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdGFibGVfMS50YWJsZTsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi90eXBlcy9hcGlcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/injectHeaderConfig.js":
/*!***********************************************************!*\
  !*** ./node_modules/table/dist/src/injectHeaderConfig.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.injectHeaderConfig = void 0;\nconst injectHeaderConfig = (rows, config) => {\n    var _a;\n    let spanningCellConfig = (_a = config.spanningCells) !== null && _a !== void 0 ? _a : [];\n    const headerConfig = config.header;\n    const adjustedRows = [...rows];\n    if (headerConfig) {\n        spanningCellConfig = spanningCellConfig.map(({ row, ...rest }) => {\n            return { ...rest,\n                row: row + 1 };\n        });\n        const { content, ...headerStyles } = headerConfig;\n        spanningCellConfig.unshift({ alignment: 'center',\n            col: 0,\n            colSpan: rows[0].length,\n            paddingLeft: 1,\n            paddingRight: 1,\n            row: 0,\n            wrapWord: false,\n            ...headerStyles });\n        adjustedRows.unshift([content, ...Array.from({ length: rows[0].length - 1 }).fill('')]);\n    }\n    return [adjustedRows,\n        spanningCellConfig];\n};\nexports.injectHeaderConfig = injectHeaderConfig;\n//# sourceMappingURL=injectHeaderConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvaW5qZWN0SGVhZGVyQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsY0FBYztBQUNyRSxxQkFBcUI7QUFDckI7QUFDQSxTQUFTO0FBQ1QsZ0JBQWdCLDJCQUEyQjtBQUMzQyxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCLHVEQUF1RCw0QkFBNEI7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL2luamVjdEhlYWRlckNvbmZpZy5qcz85NTk2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbmplY3RIZWFkZXJDb25maWcgPSB2b2lkIDA7XG5jb25zdCBpbmplY3RIZWFkZXJDb25maWcgPSAocm93cywgY29uZmlnKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIGxldCBzcGFubmluZ0NlbGxDb25maWcgPSAoX2EgPSBjb25maWcuc3Bhbm5pbmdDZWxscykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgY29uc3QgaGVhZGVyQ29uZmlnID0gY29uZmlnLmhlYWRlcjtcbiAgICBjb25zdCBhZGp1c3RlZFJvd3MgPSBbLi4ucm93c107XG4gICAgaWYgKGhlYWRlckNvbmZpZykge1xuICAgICAgICBzcGFubmluZ0NlbGxDb25maWcgPSBzcGFubmluZ0NlbGxDb25maWcubWFwKCh7IHJvdywgLi4ucmVzdCB9KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4geyAuLi5yZXN0LFxuICAgICAgICAgICAgICAgIHJvdzogcm93ICsgMSB9O1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgeyBjb250ZW50LCAuLi5oZWFkZXJTdHlsZXMgfSA9IGhlYWRlckNvbmZpZztcbiAgICAgICAgc3Bhbm5pbmdDZWxsQ29uZmlnLnVuc2hpZnQoeyBhbGlnbm1lbnQ6ICdjZW50ZXInLFxuICAgICAgICAgICAgY29sOiAwLFxuICAgICAgICAgICAgY29sU3Bhbjogcm93c1swXS5sZW5ndGgsXG4gICAgICAgICAgICBwYWRkaW5nTGVmdDogMSxcbiAgICAgICAgICAgIHBhZGRpbmdSaWdodDogMSxcbiAgICAgICAgICAgIHJvdzogMCxcbiAgICAgICAgICAgIHdyYXBXb3JkOiBmYWxzZSxcbiAgICAgICAgICAgIC4uLmhlYWRlclN0eWxlcyB9KTtcbiAgICAgICAgYWRqdXN0ZWRSb3dzLnVuc2hpZnQoW2NvbnRlbnQsIC4uLkFycmF5LmZyb20oeyBsZW5ndGg6IHJvd3NbMF0ubGVuZ3RoIC0gMSB9KS5maWxsKCcnKV0pO1xuICAgIH1cbiAgICByZXR1cm4gW2FkanVzdGVkUm93cyxcbiAgICAgICAgc3Bhbm5pbmdDZWxsQ29uZmlnXTtcbn07XG5leHBvcnRzLmluamVjdEhlYWRlckNvbmZpZyA9IGluamVjdEhlYWRlckNvbmZpZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluamVjdEhlYWRlckNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/injectHeaderConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/makeRangeConfig.js":
/*!********************************************************!*\
  !*** ./node_modules/table/dist/src/makeRangeConfig.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeRangeConfig = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst makeRangeConfig = (spanningCellConfig, columnsConfig) => {\n    var _a;\n    const { topLeft, bottomRight } = (0, utils_1.calculateRangeCoordinate)(spanningCellConfig);\n    const cellConfig = {\n        ...columnsConfig[topLeft.col],\n        ...spanningCellConfig,\n        paddingRight: (_a = spanningCellConfig.paddingRight) !== null && _a !== void 0 ? _a : columnsConfig[bottomRight.col].paddingRight,\n    };\n    return { ...cellConfig,\n        bottomRight,\n        topLeft };\n};\nexports.makeRangeConfig = makeRangeConfig;\n//# sourceMappingURL=makeRangeConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFrZVJhbmdlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBUztBQUNqQztBQUNBO0FBQ0EsWUFBWSx1QkFBdUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL21ha2VSYW5nZUNvbmZpZy5qcz9lODg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlUmFuZ2VDb25maWcgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCBtYWtlUmFuZ2VDb25maWcgPSAoc3Bhbm5pbmdDZWxsQ29uZmlnLCBjb2x1bW5zQ29uZmlnKSA9PiB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHsgdG9wTGVmdCwgYm90dG9tUmlnaHQgfSA9ICgwLCB1dGlsc18xLmNhbGN1bGF0ZVJhbmdlQ29vcmRpbmF0ZSkoc3Bhbm5pbmdDZWxsQ29uZmlnKTtcbiAgICBjb25zdCBjZWxsQ29uZmlnID0ge1xuICAgICAgICAuLi5jb2x1bW5zQ29uZmlnW3RvcExlZnQuY29sXSxcbiAgICAgICAgLi4uc3Bhbm5pbmdDZWxsQ29uZmlnLFxuICAgICAgICBwYWRkaW5nUmlnaHQ6IChfYSA9IHNwYW5uaW5nQ2VsbENvbmZpZy5wYWRkaW5nUmlnaHQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvbHVtbnNDb25maWdbYm90dG9tUmlnaHQuY29sXS5wYWRkaW5nUmlnaHQsXG4gICAgfTtcbiAgICByZXR1cm4geyAuLi5jZWxsQ29uZmlnLFxuICAgICAgICBib3R0b21SaWdodCxcbiAgICAgICAgdG9wTGVmdCB9O1xufTtcbmV4cG9ydHMubWFrZVJhbmdlQ29uZmlnID0gbWFrZVJhbmdlQ29uZmlnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFrZVJhbmdlQ29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/makeRangeConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/makeStreamConfig.js":
/*!*********************************************************!*\
  !*** ./node_modules/table/dist/src/makeStreamConfig.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeStreamConfig = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst validateConfig_1 = __webpack_require__(/*! ./validateConfig */ \"(ssr)/./node_modules/table/dist/src/validateConfig.js\");\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n */\nconst makeColumnsConfig = (columnCount, columns = {}, columnDefault) => {\n    return Array.from({ length: columnCount }).map((_, index) => {\n        return {\n            alignment: 'left',\n            paddingLeft: 1,\n            paddingRight: 1,\n            truncate: Number.POSITIVE_INFINITY,\n            verticalAlignment: 'top',\n            wrapWord: false,\n            ...columnDefault,\n            ...columns[index],\n        };\n    });\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n */\nconst makeStreamConfig = (config) => {\n    (0, validateConfig_1.validateConfig)('streamConfig.json', config);\n    if (config.columnDefault.width === undefined) {\n        throw new Error('Must provide config.columnDefault.width when creating a stream.');\n    }\n    return {\n        drawVerticalLine: () => {\n            return true;\n        },\n        ...config,\n        border: (0, utils_1.makeBorderConfig)(config.border),\n        columns: makeColumnsConfig(config.columnCount, config.columns, config.columnDefault),\n    };\n};\nexports.makeStreamConfig = makeStreamConfig;\n//# sourceMappingURL=makeStreamConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFrZVN0cmVhbUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakMseUJBQXlCLG1CQUFPLENBQUMsK0VBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BELHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFrZVN0cmVhbUNvbmZpZy5qcz8xNjU4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlU3RyZWFtQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdmFsaWRhdGVDb25maWdfMSA9IHJlcXVpcmUoXCIuL3ZhbGlkYXRlQ29uZmlnXCIpO1xuLyoqXG4gKiBDcmVhdGVzIGEgY29uZmlndXJhdGlvbiBmb3IgZXZlcnkgY29sdW1uIHVzaW5nIGRlZmF1bHRcbiAqIHZhbHVlcyBmb3IgdGhlIG1pc3NpbmcgY29uZmlndXJhdGlvbiBwcm9wZXJ0aWVzLlxuICovXG5jb25zdCBtYWtlQ29sdW1uc0NvbmZpZyA9IChjb2x1bW5Db3VudCwgY29sdW1ucyA9IHt9LCBjb2x1bW5EZWZhdWx0KSA9PiB7XG4gICAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IGNvbHVtbkNvdW50IH0pLm1hcCgoXywgaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFsaWdubWVudDogJ2xlZnQnLFxuICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IDEsXG4gICAgICAgICAgICBwYWRkaW5nUmlnaHQ6IDEsXG4gICAgICAgICAgICB0cnVuY2F0ZTogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLFxuICAgICAgICAgICAgdmVydGljYWxBbGlnbm1lbnQ6ICd0b3AnLFxuICAgICAgICAgICAgd3JhcFdvcmQ6IGZhbHNlLFxuICAgICAgICAgICAgLi4uY29sdW1uRGVmYXVsdCxcbiAgICAgICAgICAgIC4uLmNvbHVtbnNbaW5kZXhdLFxuICAgICAgICB9O1xuICAgIH0pO1xufTtcbi8qKlxuICogTWFrZXMgYSBuZXcgY29uZmlndXJhdGlvbiBvYmplY3Qgb3V0IG9mIHRoZSB1c2VyQ29uZmlnIG9iamVjdFxuICogdXNpbmcgZGVmYXVsdCB2YWx1ZXMgZm9yIHRoZSBtaXNzaW5nIGNvbmZpZ3VyYXRpb24gcHJvcGVydGllcy5cbiAqL1xuY29uc3QgbWFrZVN0cmVhbUNvbmZpZyA9IChjb25maWcpID0+IHtcbiAgICAoMCwgdmFsaWRhdGVDb25maWdfMS52YWxpZGF0ZUNvbmZpZykoJ3N0cmVhbUNvbmZpZy5qc29uJywgY29uZmlnKTtcbiAgICBpZiAoY29uZmlnLmNvbHVtbkRlZmF1bHQud2lkdGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ011c3QgcHJvdmlkZSBjb25maWcuY29sdW1uRGVmYXVsdC53aWR0aCB3aGVuIGNyZWF0aW5nIGEgc3RyZWFtLicpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBkcmF3VmVydGljYWxMaW5lOiAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICBib3JkZXI6ICgwLCB1dGlsc18xLm1ha2VCb3JkZXJDb25maWcpKGNvbmZpZy5ib3JkZXIpLFxuICAgICAgICBjb2x1bW5zOiBtYWtlQ29sdW1uc0NvbmZpZyhjb25maWcuY29sdW1uQ291bnQsIGNvbmZpZy5jb2x1bW5zLCBjb25maWcuY29sdW1uRGVmYXVsdCksXG4gICAgfTtcbn07XG5leHBvcnRzLm1ha2VTdHJlYW1Db25maWcgPSBtYWtlU3RyZWFtQ29uZmlnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWFrZVN0cmVhbUNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/makeStreamConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/makeTableConfig.js":
/*!********************************************************!*\
  !*** ./node_modules/table/dist/src/makeTableConfig.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeTableConfig = void 0;\nconst calculateMaximumColumnWidths_1 = __webpack_require__(/*! ./calculateMaximumColumnWidths */ \"(ssr)/./node_modules/table/dist/src/calculateMaximumColumnWidths.js\");\nconst spanningCellManager_1 = __webpack_require__(/*! ./spanningCellManager */ \"(ssr)/./node_modules/table/dist/src/spanningCellManager.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst validateConfig_1 = __webpack_require__(/*! ./validateConfig */ \"(ssr)/./node_modules/table/dist/src/validateConfig.js\");\nconst validateSpanningCellConfig_1 = __webpack_require__(/*! ./validateSpanningCellConfig */ \"(ssr)/./node_modules/table/dist/src/validateSpanningCellConfig.js\");\n/**\n * Creates a configuration for every column using default\n * values for the missing configuration properties.\n */\nconst makeColumnsConfig = (rows, columns, columnDefault, spanningCellConfigs) => {\n    const columnWidths = (0, calculateMaximumColumnWidths_1.calculateMaximumColumnWidths)(rows, spanningCellConfigs);\n    return rows[0].map((_, columnIndex) => {\n        return {\n            alignment: 'left',\n            paddingLeft: 1,\n            paddingRight: 1,\n            truncate: Number.POSITIVE_INFINITY,\n            verticalAlignment: 'top',\n            width: columnWidths[columnIndex],\n            wrapWord: false,\n            ...columnDefault,\n            ...columns === null || columns === void 0 ? void 0 : columns[columnIndex],\n        };\n    });\n};\n/**\n * Makes a new configuration object out of the userConfig object\n * using default values for the missing configuration properties.\n */\nconst makeTableConfig = (rows, config = {}, injectedSpanningCellConfig) => {\n    var _a, _b, _c, _d, _e;\n    (0, validateConfig_1.validateConfig)('config.json', config);\n    (0, validateSpanningCellConfig_1.validateSpanningCellConfig)(rows, (_a = config.spanningCells) !== null && _a !== void 0 ? _a : []);\n    const spanningCellConfigs = (_b = injectedSpanningCellConfig !== null && injectedSpanningCellConfig !== void 0 ? injectedSpanningCellConfig : config.spanningCells) !== null && _b !== void 0 ? _b : [];\n    const columnsConfig = makeColumnsConfig(rows, config.columns, config.columnDefault, spanningCellConfigs);\n    const drawVerticalLine = (_c = config.drawVerticalLine) !== null && _c !== void 0 ? _c : (() => {\n        return true;\n    });\n    const drawHorizontalLine = (_d = config.drawHorizontalLine) !== null && _d !== void 0 ? _d : (() => {\n        return true;\n    });\n    return {\n        ...config,\n        border: (0, utils_1.makeBorderConfig)(config.border),\n        columns: columnsConfig,\n        drawHorizontalLine,\n        drawVerticalLine,\n        singleLine: (_e = config.singleLine) !== null && _e !== void 0 ? _e : false,\n        spanningCellManager: (0, spanningCellManager_1.createSpanningCellManager)({\n            columnsConfig,\n            drawHorizontalLine,\n            drawVerticalLine,\n            rows,\n            spanningCellConfigs,\n        }),\n    };\n};\nexports.makeTableConfig = makeTableConfig;\n//# sourceMappingURL=makeTableConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFrZVRhYmxlQ29uZmlnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2Qix1Q0FBdUMsbUJBQU8sQ0FBQywyR0FBZ0M7QUFDL0UsOEJBQThCLG1CQUFPLENBQUMseUZBQXVCO0FBQzdELGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDLHlCQUF5QixtQkFBTyxDQUFDLCtFQUFrQjtBQUNuRCxxQ0FBcUMsbUJBQU8sQ0FBQyx1R0FBOEI7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9tYWtlVGFibGVDb25maWcuanM/ZjQ2ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMubWFrZVRhYmxlQ29uZmlnID0gdm9pZCAwO1xuY29uc3QgY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRoc18xID0gcmVxdWlyZShcIi4vY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRoc1wiKTtcbmNvbnN0IHNwYW5uaW5nQ2VsbE1hbmFnZXJfMSA9IHJlcXVpcmUoXCIuL3NwYW5uaW5nQ2VsbE1hbmFnZXJcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCB2YWxpZGF0ZUNvbmZpZ18xID0gcmVxdWlyZShcIi4vdmFsaWRhdGVDb25maWdcIik7XG5jb25zdCB2YWxpZGF0ZVNwYW5uaW5nQ2VsbENvbmZpZ18xID0gcmVxdWlyZShcIi4vdmFsaWRhdGVTcGFubmluZ0NlbGxDb25maWdcIik7XG4vKipcbiAqIENyZWF0ZXMgYSBjb25maWd1cmF0aW9uIGZvciBldmVyeSBjb2x1bW4gdXNpbmcgZGVmYXVsdFxuICogdmFsdWVzIGZvciB0aGUgbWlzc2luZyBjb25maWd1cmF0aW9uIHByb3BlcnRpZXMuXG4gKi9cbmNvbnN0IG1ha2VDb2x1bW5zQ29uZmlnID0gKHJvd3MsIGNvbHVtbnMsIGNvbHVtbkRlZmF1bHQsIHNwYW5uaW5nQ2VsbENvbmZpZ3MpID0+IHtcbiAgICBjb25zdCBjb2x1bW5XaWR0aHMgPSAoMCwgY2FsY3VsYXRlTWF4aW11bUNvbHVtbldpZHRoc18xLmNhbGN1bGF0ZU1heGltdW1Db2x1bW5XaWR0aHMpKHJvd3MsIHNwYW5uaW5nQ2VsbENvbmZpZ3MpO1xuICAgIHJldHVybiByb3dzWzBdLm1hcCgoXywgY29sdW1uSW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGFsaWdubWVudDogJ2xlZnQnLFxuICAgICAgICAgICAgcGFkZGluZ0xlZnQ6IDEsXG4gICAgICAgICAgICBwYWRkaW5nUmlnaHQ6IDEsXG4gICAgICAgICAgICB0cnVuY2F0ZTogTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLFxuICAgICAgICAgICAgdmVydGljYWxBbGlnbm1lbnQ6ICd0b3AnLFxuICAgICAgICAgICAgd2lkdGg6IGNvbHVtbldpZHRoc1tjb2x1bW5JbmRleF0sXG4gICAgICAgICAgICB3cmFwV29yZDogZmFsc2UsXG4gICAgICAgICAgICAuLi5jb2x1bW5EZWZhdWx0LFxuICAgICAgICAgICAgLi4uY29sdW1ucyA9PT0gbnVsbCB8fCBjb2x1bW5zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb2x1bW5zW2NvbHVtbkluZGV4XSxcbiAgICAgICAgfTtcbiAgICB9KTtcbn07XG4vKipcbiAqIE1ha2VzIGEgbmV3IGNvbmZpZ3VyYXRpb24gb2JqZWN0IG91dCBvZiB0aGUgdXNlckNvbmZpZyBvYmplY3RcbiAqIHVzaW5nIGRlZmF1bHQgdmFsdWVzIGZvciB0aGUgbWlzc2luZyBjb25maWd1cmF0aW9uIHByb3BlcnRpZXMuXG4gKi9cbmNvbnN0IG1ha2VUYWJsZUNvbmZpZyA9IChyb3dzLCBjb25maWcgPSB7fSwgaW5qZWN0ZWRTcGFubmluZ0NlbGxDb25maWcpID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2QsIF9lO1xuICAgICgwLCB2YWxpZGF0ZUNvbmZpZ18xLnZhbGlkYXRlQ29uZmlnKSgnY29uZmlnLmpzb24nLCBjb25maWcpO1xuICAgICgwLCB2YWxpZGF0ZVNwYW5uaW5nQ2VsbENvbmZpZ18xLnZhbGlkYXRlU3Bhbm5pbmdDZWxsQ29uZmlnKShyb3dzLCAoX2EgPSBjb25maWcuc3Bhbm5pbmdDZWxscykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW10pO1xuICAgIGNvbnN0IHNwYW5uaW5nQ2VsbENvbmZpZ3MgPSAoX2IgPSBpbmplY3RlZFNwYW5uaW5nQ2VsbENvbmZpZyAhPT0gbnVsbCAmJiBpbmplY3RlZFNwYW5uaW5nQ2VsbENvbmZpZyAhPT0gdm9pZCAwID8gaW5qZWN0ZWRTcGFubmluZ0NlbGxDb25maWcgOiBjb25maWcuc3Bhbm5pbmdDZWxscykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogW107XG4gICAgY29uc3QgY29sdW1uc0NvbmZpZyA9IG1ha2VDb2x1bW5zQ29uZmlnKHJvd3MsIGNvbmZpZy5jb2x1bW5zLCBjb25maWcuY29sdW1uRGVmYXVsdCwgc3Bhbm5pbmdDZWxsQ29uZmlncyk7XG4gICAgY29uc3QgZHJhd1ZlcnRpY2FsTGluZSA9IChfYyA9IGNvbmZpZy5kcmF3VmVydGljYWxMaW5lKSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiAoKCkgPT4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgICBjb25zdCBkcmF3SG9yaXpvbnRhbExpbmUgPSAoX2QgPSBjb25maWcuZHJhd0hvcml6b250YWxMaW5lKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiAoKCkgPT4ge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5jb25maWcsXG4gICAgICAgIGJvcmRlcjogKDAsIHV0aWxzXzEubWFrZUJvcmRlckNvbmZpZykoY29uZmlnLmJvcmRlciksXG4gICAgICAgIGNvbHVtbnM6IGNvbHVtbnNDb25maWcsXG4gICAgICAgIGRyYXdIb3Jpem9udGFsTGluZSxcbiAgICAgICAgZHJhd1ZlcnRpY2FsTGluZSxcbiAgICAgICAgc2luZ2xlTGluZTogKF9lID0gY29uZmlnLnNpbmdsZUxpbmUpICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IGZhbHNlLFxuICAgICAgICBzcGFubmluZ0NlbGxNYW5hZ2VyOiAoMCwgc3Bhbm5pbmdDZWxsTWFuYWdlcl8xLmNyZWF0ZVNwYW5uaW5nQ2VsbE1hbmFnZXIpKHtcbiAgICAgICAgICAgIGNvbHVtbnNDb25maWcsXG4gICAgICAgICAgICBkcmF3SG9yaXpvbnRhbExpbmUsXG4gICAgICAgICAgICBkcmF3VmVydGljYWxMaW5lLFxuICAgICAgICAgICAgcm93cyxcbiAgICAgICAgICAgIHNwYW5uaW5nQ2VsbENvbmZpZ3MsXG4gICAgICAgIH0pLFxuICAgIH07XG59O1xuZXhwb3J0cy5tYWtlVGFibGVDb25maWcgPSBtYWtlVGFibGVDb25maWc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYWtlVGFibGVDb25maWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/makeTableConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/mapDataUsingRowHeights.js":
/*!***************************************************************!*\
  !*** ./node_modules/table/dist/src/mapDataUsingRowHeights.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.mapDataUsingRowHeights = exports.padCellVertically = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst wrapCell_1 = __webpack_require__(/*! ./wrapCell */ \"(ssr)/./node_modules/table/dist/src/wrapCell.js\");\nconst createEmptyStrings = (length) => {\n    return new Array(length).fill('');\n};\nconst padCellVertically = (lines, rowHeight, verticalAlignment) => {\n    const availableLines = rowHeight - lines.length;\n    if (verticalAlignment === 'top') {\n        return [...lines, ...createEmptyStrings(availableLines)];\n    }\n    if (verticalAlignment === 'bottom') {\n        return [...createEmptyStrings(availableLines), ...lines];\n    }\n    return [\n        ...createEmptyStrings(Math.floor(availableLines / 2)),\n        ...lines,\n        ...createEmptyStrings(Math.ceil(availableLines / 2)),\n    ];\n};\nexports.padCellVertically = padCellVertically;\nconst mapDataUsingRowHeights = (unmappedRows, rowHeights, config) => {\n    const nColumns = unmappedRows[0].length;\n    const mappedRows = unmappedRows.map((unmappedRow, unmappedRowIndex) => {\n        const outputRowHeight = rowHeights[unmappedRowIndex];\n        const outputRow = Array.from({ length: outputRowHeight }, () => {\n            return new Array(nColumns).fill('');\n        });\n        unmappedRow.forEach((cell, cellIndex) => {\n            var _a;\n            const containingRange = (_a = config.spanningCellManager) === null || _a === void 0 ? void 0 : _a.getContainingRange({ col: cellIndex,\n                row: unmappedRowIndex });\n            if (containingRange) {\n                containingRange.extractCellContent(unmappedRowIndex).forEach((cellLine, cellLineIndex) => {\n                    outputRow[cellLineIndex][cellIndex] = cellLine;\n                });\n                return;\n            }\n            const cellLines = (0, wrapCell_1.wrapCell)(cell, config.columns[cellIndex].width, config.columns[cellIndex].wrapWord);\n            const paddedCellLines = (0, exports.padCellVertically)(cellLines, outputRowHeight, config.columns[cellIndex].verticalAlignment);\n            paddedCellLines.forEach((cellLine, cellLineIndex) => {\n                outputRow[cellLineIndex][cellIndex] = cellLine;\n            });\n        });\n        return outputRow;\n    });\n    return (0, utils_1.flatten)(mappedRows);\n};\nexports.mapDataUsingRowHeights = mapDataUsingRowHeights;\n//# sourceMappingURL=mapDataUsingRowHeights.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFwRGF0YVVzaW5nUm93SGVpZ2h0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyx5QkFBeUI7QUFDMUQsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakMsbUJBQW1CLG1CQUFPLENBQUMsbUVBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1Qyx5QkFBeUI7QUFDaEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLG1JQUFtSTtBQUNuSSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvbWFwRGF0YVVzaW5nUm93SGVpZ2h0cy5qcz9hNDQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYXBEYXRhVXNpbmdSb3dIZWlnaHRzID0gZXhwb3J0cy5wYWRDZWxsVmVydGljYWxseSA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHdyYXBDZWxsXzEgPSByZXF1aXJlKFwiLi93cmFwQ2VsbFwiKTtcbmNvbnN0IGNyZWF0ZUVtcHR5U3RyaW5ncyA9IChsZW5ndGgpID0+IHtcbiAgICByZXR1cm4gbmV3IEFycmF5KGxlbmd0aCkuZmlsbCgnJyk7XG59O1xuY29uc3QgcGFkQ2VsbFZlcnRpY2FsbHkgPSAobGluZXMsIHJvd0hlaWdodCwgdmVydGljYWxBbGlnbm1lbnQpID0+IHtcbiAgICBjb25zdCBhdmFpbGFibGVMaW5lcyA9IHJvd0hlaWdodCAtIGxpbmVzLmxlbmd0aDtcbiAgICBpZiAodmVydGljYWxBbGlnbm1lbnQgPT09ICd0b3AnKSB7XG4gICAgICAgIHJldHVybiBbLi4ubGluZXMsIC4uLmNyZWF0ZUVtcHR5U3RyaW5ncyhhdmFpbGFibGVMaW5lcyldO1xuICAgIH1cbiAgICBpZiAodmVydGljYWxBbGlnbm1lbnQgPT09ICdib3R0b20nKSB7XG4gICAgICAgIHJldHVybiBbLi4uY3JlYXRlRW1wdHlTdHJpbmdzKGF2YWlsYWJsZUxpbmVzKSwgLi4ubGluZXNdO1xuICAgIH1cbiAgICByZXR1cm4gW1xuICAgICAgICAuLi5jcmVhdGVFbXB0eVN0cmluZ3MoTWF0aC5mbG9vcihhdmFpbGFibGVMaW5lcyAvIDIpKSxcbiAgICAgICAgLi4ubGluZXMsXG4gICAgICAgIC4uLmNyZWF0ZUVtcHR5U3RyaW5ncyhNYXRoLmNlaWwoYXZhaWxhYmxlTGluZXMgLyAyKSksXG4gICAgXTtcbn07XG5leHBvcnRzLnBhZENlbGxWZXJ0aWNhbGx5ID0gcGFkQ2VsbFZlcnRpY2FsbHk7XG5jb25zdCBtYXBEYXRhVXNpbmdSb3dIZWlnaHRzID0gKHVubWFwcGVkUm93cywgcm93SGVpZ2h0cywgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgbkNvbHVtbnMgPSB1bm1hcHBlZFJvd3NbMF0ubGVuZ3RoO1xuICAgIGNvbnN0IG1hcHBlZFJvd3MgPSB1bm1hcHBlZFJvd3MubWFwKCh1bm1hcHBlZFJvdywgdW5tYXBwZWRSb3dJbmRleCkgPT4ge1xuICAgICAgICBjb25zdCBvdXRwdXRSb3dIZWlnaHQgPSByb3dIZWlnaHRzW3VubWFwcGVkUm93SW5kZXhdO1xuICAgICAgICBjb25zdCBvdXRwdXRSb3cgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBvdXRwdXRSb3dIZWlnaHQgfSwgKCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBBcnJheShuQ29sdW1ucykuZmlsbCgnJyk7XG4gICAgICAgIH0pO1xuICAgICAgICB1bm1hcHBlZFJvdy5mb3JFYWNoKChjZWxsLCBjZWxsSW5kZXgpID0+IHtcbiAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRhaW5pbmdSYW5nZSA9IChfYSA9IGNvbmZpZy5zcGFubmluZ0NlbGxNYW5hZ2VyKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0Q29udGFpbmluZ1JhbmdlKHsgY29sOiBjZWxsSW5kZXgsXG4gICAgICAgICAgICAgICAgcm93OiB1bm1hcHBlZFJvd0luZGV4IH0pO1xuICAgICAgICAgICAgaWYgKGNvbnRhaW5pbmdSYW5nZSkge1xuICAgICAgICAgICAgICAgIGNvbnRhaW5pbmdSYW5nZS5leHRyYWN0Q2VsbENvbnRlbnQodW5tYXBwZWRSb3dJbmRleCkuZm9yRWFjaCgoY2VsbExpbmUsIGNlbGxMaW5lSW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb3V0cHV0Um93W2NlbGxMaW5lSW5kZXhdW2NlbGxJbmRleF0gPSBjZWxsTGluZTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjZWxsTGluZXMgPSAoMCwgd3JhcENlbGxfMS53cmFwQ2VsbCkoY2VsbCwgY29uZmlnLmNvbHVtbnNbY2VsbEluZGV4XS53aWR0aCwgY29uZmlnLmNvbHVtbnNbY2VsbEluZGV4XS53cmFwV29yZCk7XG4gICAgICAgICAgICBjb25zdCBwYWRkZWRDZWxsTGluZXMgPSAoMCwgZXhwb3J0cy5wYWRDZWxsVmVydGljYWxseSkoY2VsbExpbmVzLCBvdXRwdXRSb3dIZWlnaHQsIGNvbmZpZy5jb2x1bW5zW2NlbGxJbmRleF0udmVydGljYWxBbGlnbm1lbnQpO1xuICAgICAgICAgICAgcGFkZGVkQ2VsbExpbmVzLmZvckVhY2goKGNlbGxMaW5lLCBjZWxsTGluZUluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgb3V0cHV0Um93W2NlbGxMaW5lSW5kZXhdW2NlbGxJbmRleF0gPSBjZWxsTGluZTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIG91dHB1dFJvdztcbiAgICB9KTtcbiAgICByZXR1cm4gKDAsIHV0aWxzXzEuZmxhdHRlbikobWFwcGVkUm93cyk7XG59O1xuZXhwb3J0cy5tYXBEYXRhVXNpbmdSb3dIZWlnaHRzID0gbWFwRGF0YVVzaW5nUm93SGVpZ2h0cztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcERhdGFVc2luZ1Jvd0hlaWdodHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/mapDataUsingRowHeights.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/padTableData.js":
/*!*****************************************************!*\
  !*** ./node_modules/table/dist/src/padTableData.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.padTableData = exports.padString = void 0;\nconst padString = (input, paddingLeft, paddingRight) => {\n    return ' '.repeat(paddingLeft) + input + ' '.repeat(paddingRight);\n};\nexports.padString = padString;\nconst padTableData = (rows, config) => {\n    return rows.map((cells, rowIndex) => {\n        return cells.map((cell, cellIndex) => {\n            var _a;\n            const containingRange = (_a = config.spanningCellManager) === null || _a === void 0 ? void 0 : _a.getContainingRange({ col: cellIndex,\n                row: rowIndex }, { mapped: true });\n            if (containingRange) {\n                return cell;\n            }\n            const { paddingLeft, paddingRight } = config.columns[cellIndex];\n            return (0, exports.padString)(cell, paddingLeft, paddingRight);\n        });\n    });\n};\nexports.padTableData = padTableData;\n//# sourceMappingURL=padTableData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvcGFkVGFibGVEYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLGlCQUFpQjtBQUN4QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtSUFBbUk7QUFDbkksK0JBQStCLElBQUksY0FBYztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsNEJBQTRCO0FBQ2hEO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLG9CQUFvQjtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvcGFkVGFibGVEYXRhLmpzPzUxZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhZFRhYmxlRGF0YSA9IGV4cG9ydHMucGFkU3RyaW5nID0gdm9pZCAwO1xuY29uc3QgcGFkU3RyaW5nID0gKGlucHV0LCBwYWRkaW5nTGVmdCwgcGFkZGluZ1JpZ2h0KSA9PiB7XG4gICAgcmV0dXJuICcgJy5yZXBlYXQocGFkZGluZ0xlZnQpICsgaW5wdXQgKyAnICcucmVwZWF0KHBhZGRpbmdSaWdodCk7XG59O1xuZXhwb3J0cy5wYWRTdHJpbmcgPSBwYWRTdHJpbmc7XG5jb25zdCBwYWRUYWJsZURhdGEgPSAocm93cywgY29uZmlnKSA9PiB7XG4gICAgcmV0dXJuIHJvd3MubWFwKChjZWxscywgcm93SW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuIGNlbGxzLm1hcCgoY2VsbCwgY2VsbEluZGV4KSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICBjb25zdCBjb250YWluaW5nUmFuZ2UgPSAoX2EgPSBjb25maWcuc3Bhbm5pbmdDZWxsTWFuYWdlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmdldENvbnRhaW5pbmdSYW5nZSh7IGNvbDogY2VsbEluZGV4LFxuICAgICAgICAgICAgICAgIHJvdzogcm93SW5kZXggfSwgeyBtYXBwZWQ6IHRydWUgfSk7XG4gICAgICAgICAgICBpZiAoY29udGFpbmluZ1JhbmdlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNlbGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB7IHBhZGRpbmdMZWZ0LCBwYWRkaW5nUmlnaHQgfSA9IGNvbmZpZy5jb2x1bW5zW2NlbGxJbmRleF07XG4gICAgICAgICAgICByZXR1cm4gKDAsIGV4cG9ydHMucGFkU3RyaW5nKShjZWxsLCBwYWRkaW5nTGVmdCwgcGFkZGluZ1JpZ2h0KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5wYWRUYWJsZURhdGEgPSBwYWRUYWJsZURhdGE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWRUYWJsZURhdGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/padTableData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/spanningCellManager.js":
/*!************************************************************!*\
  !*** ./node_modules/table/dist/src/spanningCellManager.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createSpanningCellManager = void 0;\nconst alignSpanningCell_1 = __webpack_require__(/*! ./alignSpanningCell */ \"(ssr)/./node_modules/table/dist/src/alignSpanningCell.js\");\nconst calculateSpanningCellWidth_1 = __webpack_require__(/*! ./calculateSpanningCellWidth */ \"(ssr)/./node_modules/table/dist/src/calculateSpanningCellWidth.js\");\nconst makeRangeConfig_1 = __webpack_require__(/*! ./makeRangeConfig */ \"(ssr)/./node_modules/table/dist/src/makeRangeConfig.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst findRangeConfig = (cell, rangeConfigs) => {\n    return rangeConfigs.find((rangeCoordinate) => {\n        return (0, utils_1.isCellInRange)(cell, rangeCoordinate);\n    });\n};\nconst getContainingRange = (rangeConfig, context) => {\n    const width = (0, calculateSpanningCellWidth_1.calculateSpanningCellWidth)(rangeConfig, context);\n    const wrappedContent = (0, alignSpanningCell_1.wrapRangeContent)(rangeConfig, width, context);\n    const alignedContent = (0, alignSpanningCell_1.alignVerticalRangeContent)(rangeConfig, wrappedContent, context);\n    const getCellContent = (rowIndex) => {\n        const { topLeft } = rangeConfig;\n        const { drawHorizontalLine, rowHeights } = context;\n        const totalWithinHorizontalBorderHeight = rowIndex - topLeft.row;\n        const totalHiddenHorizontalBorderHeight = (0, utils_1.sequence)(topLeft.row + 1, rowIndex).filter((index) => {\n            /* istanbul ignore next */\n            return !(drawHorizontalLine === null || drawHorizontalLine === void 0 ? void 0 : drawHorizontalLine(index, rowHeights.length));\n        }).length;\n        const offset = (0, utils_1.sumArray)(rowHeights.slice(topLeft.row, rowIndex)) + totalWithinHorizontalBorderHeight - totalHiddenHorizontalBorderHeight;\n        return alignedContent.slice(offset, offset + rowHeights[rowIndex]);\n    };\n    const getBorderContent = (borderIndex) => {\n        const { topLeft } = rangeConfig;\n        const offset = (0, utils_1.sumArray)(context.rowHeights.slice(topLeft.row, borderIndex)) + (borderIndex - topLeft.row - 1);\n        return alignedContent[offset];\n    };\n    return {\n        ...rangeConfig,\n        extractBorderContent: getBorderContent,\n        extractCellContent: getCellContent,\n        height: wrappedContent.length,\n        width,\n    };\n};\nconst inSameRange = (cell1, cell2, ranges) => {\n    const range1 = findRangeConfig(cell1, ranges);\n    const range2 = findRangeConfig(cell2, ranges);\n    if (range1 && range2) {\n        return (0, utils_1.areCellEqual)(range1.topLeft, range2.topLeft);\n    }\n    return false;\n};\nconst hashRange = (range) => {\n    const { row, col } = range.topLeft;\n    return `${row}/${col}`;\n};\nconst createSpanningCellManager = (parameters) => {\n    const { spanningCellConfigs, columnsConfig } = parameters;\n    const ranges = spanningCellConfigs.map((config) => {\n        return (0, makeRangeConfig_1.makeRangeConfig)(config, columnsConfig);\n    });\n    const rangeCache = {};\n    let rowHeights = [];\n    let rowIndexMapping = [];\n    return { getContainingRange: (cell, options) => {\n            var _a;\n            const originalRow = (options === null || options === void 0 ? void 0 : options.mapped) ? rowIndexMapping[cell.row] : cell.row;\n            const range = findRangeConfig({ ...cell,\n                row: originalRow }, ranges);\n            if (!range) {\n                return undefined;\n            }\n            if (rowHeights.length === 0) {\n                return getContainingRange(range, { ...parameters,\n                    rowHeights });\n            }\n            const hash = hashRange(range);\n            (_a = rangeCache[hash]) !== null && _a !== void 0 ? _a : (rangeCache[hash] = getContainingRange(range, { ...parameters,\n                rowHeights }));\n            return rangeCache[hash];\n        },\n        inSameRange: (cell1, cell2) => {\n            return inSameRange(cell1, cell2, ranges);\n        },\n        rowHeights,\n        rowIndexMapping,\n        setRowHeights: (_rowHeights) => {\n            rowHeights = _rowHeights;\n        },\n        setRowIndexMapping: (mappedRowHeights) => {\n            rowIndexMapping = (0, utils_1.flatten)(mappedRowHeights.map((height, index) => {\n                return Array.from({ length: height }, () => {\n                    return index;\n                });\n            }));\n        } };\n};\nexports.createSpanningCellManager = createSpanningCellManager;\n//# sourceMappingURL=spanningCellManager.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvc3Bhbm5pbmdDZWxsTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakMsNEJBQTRCLG1CQUFPLENBQUMscUZBQXFCO0FBQ3pELHFDQUFxQyxtQkFBTyxDQUFDLHVHQUE4QjtBQUMzRSwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBbUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsNkRBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixVQUFVO0FBQzFCLGdCQUFnQixpQ0FBaUM7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsVUFBVTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxXQUFXO0FBQ3ZCLGNBQWMsSUFBSSxHQUFHLElBQUk7QUFDekI7QUFDQTtBQUNBLFlBQVkscUNBQXFDO0FBQ2pEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUMsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELGdDQUFnQztBQUNoQztBQUNBO0FBQ0EscUhBQXFIO0FBQ3JILDRCQUE0QjtBQUM1QjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxvQ0FBb0MsZ0JBQWdCO0FBQ3BEO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy9zcGFubmluZ0NlbGxNYW5hZ2VyLmpzP2NkOGUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVNwYW5uaW5nQ2VsbE1hbmFnZXIgPSB2b2lkIDA7XG5jb25zdCBhbGlnblNwYW5uaW5nQ2VsbF8xID0gcmVxdWlyZShcIi4vYWxpZ25TcGFubmluZ0NlbGxcIik7XG5jb25zdCBjYWxjdWxhdGVTcGFubmluZ0NlbGxXaWR0aF8xID0gcmVxdWlyZShcIi4vY2FsY3VsYXRlU3Bhbm5pbmdDZWxsV2lkdGhcIik7XG5jb25zdCBtYWtlUmFuZ2VDb25maWdfMSA9IHJlcXVpcmUoXCIuL21ha2VSYW5nZUNvbmZpZ1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGZpbmRSYW5nZUNvbmZpZyA9IChjZWxsLCByYW5nZUNvbmZpZ3MpID0+IHtcbiAgICByZXR1cm4gcmFuZ2VDb25maWdzLmZpbmQoKHJhbmdlQ29vcmRpbmF0ZSkgPT4ge1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzXzEuaXNDZWxsSW5SYW5nZSkoY2VsbCwgcmFuZ2VDb29yZGluYXRlKTtcbiAgICB9KTtcbn07XG5jb25zdCBnZXRDb250YWluaW5nUmFuZ2UgPSAocmFuZ2VDb25maWcsIGNvbnRleHQpID0+IHtcbiAgICBjb25zdCB3aWR0aCA9ICgwLCBjYWxjdWxhdGVTcGFubmluZ0NlbGxXaWR0aF8xLmNhbGN1bGF0ZVNwYW5uaW5nQ2VsbFdpZHRoKShyYW5nZUNvbmZpZywgY29udGV4dCk7XG4gICAgY29uc3Qgd3JhcHBlZENvbnRlbnQgPSAoMCwgYWxpZ25TcGFubmluZ0NlbGxfMS53cmFwUmFuZ2VDb250ZW50KShyYW5nZUNvbmZpZywgd2lkdGgsIGNvbnRleHQpO1xuICAgIGNvbnN0IGFsaWduZWRDb250ZW50ID0gKDAsIGFsaWduU3Bhbm5pbmdDZWxsXzEuYWxpZ25WZXJ0aWNhbFJhbmdlQ29udGVudCkocmFuZ2VDb25maWcsIHdyYXBwZWRDb250ZW50LCBjb250ZXh0KTtcbiAgICBjb25zdCBnZXRDZWxsQ29udGVudCA9IChyb3dJbmRleCkgPT4ge1xuICAgICAgICBjb25zdCB7IHRvcExlZnQgfSA9IHJhbmdlQ29uZmlnO1xuICAgICAgICBjb25zdCB7IGRyYXdIb3Jpem9udGFsTGluZSwgcm93SGVpZ2h0cyB9ID0gY29udGV4dDtcbiAgICAgICAgY29uc3QgdG90YWxXaXRoaW5Ib3Jpem9udGFsQm9yZGVySGVpZ2h0ID0gcm93SW5kZXggLSB0b3BMZWZ0LnJvdztcbiAgICAgICAgY29uc3QgdG90YWxIaWRkZW5Ib3Jpem9udGFsQm9yZGVySGVpZ2h0ID0gKDAsIHV0aWxzXzEuc2VxdWVuY2UpKHRvcExlZnQucm93ICsgMSwgcm93SW5kZXgpLmZpbHRlcigoaW5kZXgpID0+IHtcbiAgICAgICAgICAgIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICByZXR1cm4gIShkcmF3SG9yaXpvbnRhbExpbmUgPT09IG51bGwgfHwgZHJhd0hvcml6b250YWxMaW5lID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkcmF3SG9yaXpvbnRhbExpbmUoaW5kZXgsIHJvd0hlaWdodHMubGVuZ3RoKSk7XG4gICAgICAgIH0pLmxlbmd0aDtcbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gKDAsIHV0aWxzXzEuc3VtQXJyYXkpKHJvd0hlaWdodHMuc2xpY2UodG9wTGVmdC5yb3csIHJvd0luZGV4KSkgKyB0b3RhbFdpdGhpbkhvcml6b250YWxCb3JkZXJIZWlnaHQgLSB0b3RhbEhpZGRlbkhvcml6b250YWxCb3JkZXJIZWlnaHQ7XG4gICAgICAgIHJldHVybiBhbGlnbmVkQ29udGVudC5zbGljZShvZmZzZXQsIG9mZnNldCArIHJvd0hlaWdodHNbcm93SW5kZXhdKTtcbiAgICB9O1xuICAgIGNvbnN0IGdldEJvcmRlckNvbnRlbnQgPSAoYm9yZGVySW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgeyB0b3BMZWZ0IH0gPSByYW5nZUNvbmZpZztcbiAgICAgICAgY29uc3Qgb2Zmc2V0ID0gKDAsIHV0aWxzXzEuc3VtQXJyYXkpKGNvbnRleHQucm93SGVpZ2h0cy5zbGljZSh0b3BMZWZ0LnJvdywgYm9yZGVySW5kZXgpKSArIChib3JkZXJJbmRleCAtIHRvcExlZnQucm93IC0gMSk7XG4gICAgICAgIHJldHVybiBhbGlnbmVkQ29udGVudFtvZmZzZXRdO1xuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4ucmFuZ2VDb25maWcsXG4gICAgICAgIGV4dHJhY3RCb3JkZXJDb250ZW50OiBnZXRCb3JkZXJDb250ZW50LFxuICAgICAgICBleHRyYWN0Q2VsbENvbnRlbnQ6IGdldENlbGxDb250ZW50LFxuICAgICAgICBoZWlnaHQ6IHdyYXBwZWRDb250ZW50Lmxlbmd0aCxcbiAgICAgICAgd2lkdGgsXG4gICAgfTtcbn07XG5jb25zdCBpblNhbWVSYW5nZSA9IChjZWxsMSwgY2VsbDIsIHJhbmdlcykgPT4ge1xuICAgIGNvbnN0IHJhbmdlMSA9IGZpbmRSYW5nZUNvbmZpZyhjZWxsMSwgcmFuZ2VzKTtcbiAgICBjb25zdCByYW5nZTIgPSBmaW5kUmFuZ2VDb25maWcoY2VsbDIsIHJhbmdlcyk7XG4gICAgaWYgKHJhbmdlMSAmJiByYW5nZTIpIHtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLmFyZUNlbGxFcXVhbCkocmFuZ2UxLnRvcExlZnQsIHJhbmdlMi50b3BMZWZ0KTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufTtcbmNvbnN0IGhhc2hSYW5nZSA9IChyYW5nZSkgPT4ge1xuICAgIGNvbnN0IHsgcm93LCBjb2wgfSA9IHJhbmdlLnRvcExlZnQ7XG4gICAgcmV0dXJuIGAke3Jvd30vJHtjb2x9YDtcbn07XG5jb25zdCBjcmVhdGVTcGFubmluZ0NlbGxNYW5hZ2VyID0gKHBhcmFtZXRlcnMpID0+IHtcbiAgICBjb25zdCB7IHNwYW5uaW5nQ2VsbENvbmZpZ3MsIGNvbHVtbnNDb25maWcgfSA9IHBhcmFtZXRlcnM7XG4gICAgY29uc3QgcmFuZ2VzID0gc3Bhbm5pbmdDZWxsQ29uZmlncy5tYXAoKGNvbmZpZykgPT4ge1xuICAgICAgICByZXR1cm4gKDAsIG1ha2VSYW5nZUNvbmZpZ18xLm1ha2VSYW5nZUNvbmZpZykoY29uZmlnLCBjb2x1bW5zQ29uZmlnKTtcbiAgICB9KTtcbiAgICBjb25zdCByYW5nZUNhY2hlID0ge307XG4gICAgbGV0IHJvd0hlaWdodHMgPSBbXTtcbiAgICBsZXQgcm93SW5kZXhNYXBwaW5nID0gW107XG4gICAgcmV0dXJuIHsgZ2V0Q29udGFpbmluZ1JhbmdlOiAoY2VsbCwgb3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxSb3cgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLm1hcHBlZCkgPyByb3dJbmRleE1hcHBpbmdbY2VsbC5yb3ddIDogY2VsbC5yb3c7XG4gICAgICAgICAgICBjb25zdCByYW5nZSA9IGZpbmRSYW5nZUNvbmZpZyh7IC4uLmNlbGwsXG4gICAgICAgICAgICAgICAgcm93OiBvcmlnaW5hbFJvdyB9LCByYW5nZXMpO1xuICAgICAgICAgICAgaWYgKCFyYW5nZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAocm93SGVpZ2h0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0Q29udGFpbmluZ1JhbmdlKHJhbmdlLCB7IC4uLnBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgICAgIHJvd0hlaWdodHMgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBoYXNoID0gaGFzaFJhbmdlKHJhbmdlKTtcbiAgICAgICAgICAgIChfYSA9IHJhbmdlQ2FjaGVbaGFzaF0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IChyYW5nZUNhY2hlW2hhc2hdID0gZ2V0Q29udGFpbmluZ1JhbmdlKHJhbmdlLCB7IC4uLnBhcmFtZXRlcnMsXG4gICAgICAgICAgICAgICAgcm93SGVpZ2h0cyB9KSk7XG4gICAgICAgICAgICByZXR1cm4gcmFuZ2VDYWNoZVtoYXNoXTtcbiAgICAgICAgfSxcbiAgICAgICAgaW5TYW1lUmFuZ2U6IChjZWxsMSwgY2VsbDIpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpblNhbWVSYW5nZShjZWxsMSwgY2VsbDIsIHJhbmdlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIHJvd0hlaWdodHMsXG4gICAgICAgIHJvd0luZGV4TWFwcGluZyxcbiAgICAgICAgc2V0Um93SGVpZ2h0czogKF9yb3dIZWlnaHRzKSA9PiB7XG4gICAgICAgICAgICByb3dIZWlnaHRzID0gX3Jvd0hlaWdodHM7XG4gICAgICAgIH0sXG4gICAgICAgIHNldFJvd0luZGV4TWFwcGluZzogKG1hcHBlZFJvd0hlaWdodHMpID0+IHtcbiAgICAgICAgICAgIHJvd0luZGV4TWFwcGluZyA9ICgwLCB1dGlsc18xLmZsYXR0ZW4pKG1hcHBlZFJvd0hlaWdodHMubWFwKChoZWlnaHQsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIEFycmF5LmZyb20oeyBsZW5ndGg6IGhlaWdodCB9LCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSB9O1xufTtcbmV4cG9ydHMuY3JlYXRlU3Bhbm5pbmdDZWxsTWFuYWdlciA9IGNyZWF0ZVNwYW5uaW5nQ2VsbE1hbmFnZXI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFubmluZ0NlbGxNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/spanningCellManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/stringifyTableData.js":
/*!***********************************************************!*\
  !*** ./node_modules/table/dist/src/stringifyTableData.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringifyTableData = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst stringifyTableData = (rows) => {\n    return rows.map((cells) => {\n        return cells.map((cell) => {\n            return (0, utils_1.normalizeString)(String(cell));\n        });\n    });\n};\nexports.stringifyTableData = stringifyTableData;\n//# sourceMappingURL=stringifyTableData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvc3RyaW5naWZ5VGFibGVEYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixnQkFBZ0IsbUJBQU8sQ0FBQyw2REFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL3N0cmluZ2lmeVRhYmxlRGF0YS5qcz8wMDY0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zdHJpbmdpZnlUYWJsZURhdGEgPSB2b2lkIDA7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jb25zdCBzdHJpbmdpZnlUYWJsZURhdGEgPSAocm93cykgPT4ge1xuICAgIHJldHVybiByb3dzLm1hcCgoY2VsbHMpID0+IHtcbiAgICAgICAgcmV0dXJuIGNlbGxzLm1hcCgoY2VsbCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICgwLCB1dGlsc18xLm5vcm1hbGl6ZVN0cmluZykoU3RyaW5nKGNlbGwpKTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5zdHJpbmdpZnlUYWJsZURhdGEgPSBzdHJpbmdpZnlUYWJsZURhdGE7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmdpZnlUYWJsZURhdGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/stringifyTableData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/table.js":
/*!**********************************************!*\
  !*** ./node_modules/table/dist/src/table.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.table = void 0;\nconst alignTableData_1 = __webpack_require__(/*! ./alignTableData */ \"(ssr)/./node_modules/table/dist/src/alignTableData.js\");\nconst calculateOutputColumnWidths_1 = __webpack_require__(/*! ./calculateOutputColumnWidths */ \"(ssr)/./node_modules/table/dist/src/calculateOutputColumnWidths.js\");\nconst calculateRowHeights_1 = __webpack_require__(/*! ./calculateRowHeights */ \"(ssr)/./node_modules/table/dist/src/calculateRowHeights.js\");\nconst drawTable_1 = __webpack_require__(/*! ./drawTable */ \"(ssr)/./node_modules/table/dist/src/drawTable.js\");\nconst injectHeaderConfig_1 = __webpack_require__(/*! ./injectHeaderConfig */ \"(ssr)/./node_modules/table/dist/src/injectHeaderConfig.js\");\nconst makeTableConfig_1 = __webpack_require__(/*! ./makeTableConfig */ \"(ssr)/./node_modules/table/dist/src/makeTableConfig.js\");\nconst mapDataUsingRowHeights_1 = __webpack_require__(/*! ./mapDataUsingRowHeights */ \"(ssr)/./node_modules/table/dist/src/mapDataUsingRowHeights.js\");\nconst padTableData_1 = __webpack_require__(/*! ./padTableData */ \"(ssr)/./node_modules/table/dist/src/padTableData.js\");\nconst stringifyTableData_1 = __webpack_require__(/*! ./stringifyTableData */ \"(ssr)/./node_modules/table/dist/src/stringifyTableData.js\");\nconst truncateTableData_1 = __webpack_require__(/*! ./truncateTableData */ \"(ssr)/./node_modules/table/dist/src/truncateTableData.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst validateTableData_1 = __webpack_require__(/*! ./validateTableData */ \"(ssr)/./node_modules/table/dist/src/validateTableData.js\");\nconst table = (data, userConfig = {}) => {\n    (0, validateTableData_1.validateTableData)(data);\n    let rows = (0, stringifyTableData_1.stringifyTableData)(data);\n    const [injectedRows, injectedSpanningCellConfig] = (0, injectHeaderConfig_1.injectHeaderConfig)(rows, userConfig);\n    const config = (0, makeTableConfig_1.makeTableConfig)(injectedRows, userConfig, injectedSpanningCellConfig);\n    rows = (0, truncateTableData_1.truncateTableData)(injectedRows, (0, utils_1.extractTruncates)(config));\n    const rowHeights = (0, calculateRowHeights_1.calculateRowHeights)(rows, config);\n    config.spanningCellManager.setRowHeights(rowHeights);\n    config.spanningCellManager.setRowIndexMapping(rowHeights);\n    rows = (0, mapDataUsingRowHeights_1.mapDataUsingRowHeights)(rows, rowHeights, config);\n    rows = (0, alignTableData_1.alignTableData)(rows, config);\n    rows = (0, padTableData_1.padTableData)(rows, config);\n    const outputColumnWidths = (0, calculateOutputColumnWidths_1.calculateOutputColumnWidths)(config);\n    return (0, drawTable_1.drawTable)(rows, outputColumnWidths, rowHeights, config);\n};\nexports.table = table;\n//# sourceMappingURL=table.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdGFibGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsYUFBYTtBQUNiLHlCQUF5QixtQkFBTyxDQUFDLCtFQUFrQjtBQUNuRCxzQ0FBc0MsbUJBQU8sQ0FBQyx5R0FBK0I7QUFDN0UsOEJBQThCLG1CQUFPLENBQUMseUZBQXVCO0FBQzdELG9CQUFvQixtQkFBTyxDQUFDLHFFQUFhO0FBQ3pDLDZCQUE2QixtQkFBTyxDQUFDLHVGQUFzQjtBQUMzRCwwQkFBMEIsbUJBQU8sQ0FBQyxpRkFBbUI7QUFDckQsaUNBQWlDLG1CQUFPLENBQUMsK0ZBQTBCO0FBQ25FLHVCQUF1QixtQkFBTyxDQUFDLDJFQUFnQjtBQUMvQyw2QkFBNkIsbUJBQU8sQ0FBQyx1RkFBc0I7QUFDM0QsNEJBQTRCLG1CQUFPLENBQUMscUZBQXFCO0FBQ3pELGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDLDRCQUE0QixtQkFBTyxDQUFDLHFGQUFxQjtBQUN6RCxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL3VuaXN3YXBfY2xvbmUvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdGFibGUuanM/YzExZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudGFibGUgPSB2b2lkIDA7XG5jb25zdCBhbGlnblRhYmxlRGF0YV8xID0gcmVxdWlyZShcIi4vYWxpZ25UYWJsZURhdGFcIik7XG5jb25zdCBjYWxjdWxhdGVPdXRwdXRDb2x1bW5XaWR0aHNfMSA9IHJlcXVpcmUoXCIuL2NhbGN1bGF0ZU91dHB1dENvbHVtbldpZHRoc1wiKTtcbmNvbnN0IGNhbGN1bGF0ZVJvd0hlaWdodHNfMSA9IHJlcXVpcmUoXCIuL2NhbGN1bGF0ZVJvd0hlaWdodHNcIik7XG5jb25zdCBkcmF3VGFibGVfMSA9IHJlcXVpcmUoXCIuL2RyYXdUYWJsZVwiKTtcbmNvbnN0IGluamVjdEhlYWRlckNvbmZpZ18xID0gcmVxdWlyZShcIi4vaW5qZWN0SGVhZGVyQ29uZmlnXCIpO1xuY29uc3QgbWFrZVRhYmxlQ29uZmlnXzEgPSByZXF1aXJlKFwiLi9tYWtlVGFibGVDb25maWdcIik7XG5jb25zdCBtYXBEYXRhVXNpbmdSb3dIZWlnaHRzXzEgPSByZXF1aXJlKFwiLi9tYXBEYXRhVXNpbmdSb3dIZWlnaHRzXCIpO1xuY29uc3QgcGFkVGFibGVEYXRhXzEgPSByZXF1aXJlKFwiLi9wYWRUYWJsZURhdGFcIik7XG5jb25zdCBzdHJpbmdpZnlUYWJsZURhdGFfMSA9IHJlcXVpcmUoXCIuL3N0cmluZ2lmeVRhYmxlRGF0YVwiKTtcbmNvbnN0IHRydW5jYXRlVGFibGVEYXRhXzEgPSByZXF1aXJlKFwiLi90cnVuY2F0ZVRhYmxlRGF0YVwiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHZhbGlkYXRlVGFibGVEYXRhXzEgPSByZXF1aXJlKFwiLi92YWxpZGF0ZVRhYmxlRGF0YVwiKTtcbmNvbnN0IHRhYmxlID0gKGRhdGEsIHVzZXJDb25maWcgPSB7fSkgPT4ge1xuICAgICgwLCB2YWxpZGF0ZVRhYmxlRGF0YV8xLnZhbGlkYXRlVGFibGVEYXRhKShkYXRhKTtcbiAgICBsZXQgcm93cyA9ICgwLCBzdHJpbmdpZnlUYWJsZURhdGFfMS5zdHJpbmdpZnlUYWJsZURhdGEpKGRhdGEpO1xuICAgIGNvbnN0IFtpbmplY3RlZFJvd3MsIGluamVjdGVkU3Bhbm5pbmdDZWxsQ29uZmlnXSA9ICgwLCBpbmplY3RIZWFkZXJDb25maWdfMS5pbmplY3RIZWFkZXJDb25maWcpKHJvd3MsIHVzZXJDb25maWcpO1xuICAgIGNvbnN0IGNvbmZpZyA9ICgwLCBtYWtlVGFibGVDb25maWdfMS5tYWtlVGFibGVDb25maWcpKGluamVjdGVkUm93cywgdXNlckNvbmZpZywgaW5qZWN0ZWRTcGFubmluZ0NlbGxDb25maWcpO1xuICAgIHJvd3MgPSAoMCwgdHJ1bmNhdGVUYWJsZURhdGFfMS50cnVuY2F0ZVRhYmxlRGF0YSkoaW5qZWN0ZWRSb3dzLCAoMCwgdXRpbHNfMS5leHRyYWN0VHJ1bmNhdGVzKShjb25maWcpKTtcbiAgICBjb25zdCByb3dIZWlnaHRzID0gKDAsIGNhbGN1bGF0ZVJvd0hlaWdodHNfMS5jYWxjdWxhdGVSb3dIZWlnaHRzKShyb3dzLCBjb25maWcpO1xuICAgIGNvbmZpZy5zcGFubmluZ0NlbGxNYW5hZ2VyLnNldFJvd0hlaWdodHMocm93SGVpZ2h0cyk7XG4gICAgY29uZmlnLnNwYW5uaW5nQ2VsbE1hbmFnZXIuc2V0Um93SW5kZXhNYXBwaW5nKHJvd0hlaWdodHMpO1xuICAgIHJvd3MgPSAoMCwgbWFwRGF0YVVzaW5nUm93SGVpZ2h0c18xLm1hcERhdGFVc2luZ1Jvd0hlaWdodHMpKHJvd3MsIHJvd0hlaWdodHMsIGNvbmZpZyk7XG4gICAgcm93cyA9ICgwLCBhbGlnblRhYmxlRGF0YV8xLmFsaWduVGFibGVEYXRhKShyb3dzLCBjb25maWcpO1xuICAgIHJvd3MgPSAoMCwgcGFkVGFibGVEYXRhXzEucGFkVGFibGVEYXRhKShyb3dzLCBjb25maWcpO1xuICAgIGNvbnN0IG91dHB1dENvbHVtbldpZHRocyA9ICgwLCBjYWxjdWxhdGVPdXRwdXRDb2x1bW5XaWR0aHNfMS5jYWxjdWxhdGVPdXRwdXRDb2x1bW5XaWR0aHMpKGNvbmZpZyk7XG4gICAgcmV0dXJuICgwLCBkcmF3VGFibGVfMS5kcmF3VGFibGUpKHJvd3MsIG91dHB1dENvbHVtbldpZHRocywgcm93SGVpZ2h0cywgY29uZmlnKTtcbn07XG5leHBvcnRzLnRhYmxlID0gdGFibGU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10YWJsZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/truncateTableData.js":
/*!**********************************************************!*\
  !*** ./node_modules/table/dist/src/truncateTableData.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.truncateTableData = exports.truncateString = void 0;\nconst lodash_truncate_1 = __importDefault(__webpack_require__(/*! lodash.truncate */ \"(ssr)/./node_modules/lodash.truncate/index.js\"));\nconst truncateString = (input, length) => {\n    return (0, lodash_truncate_1.default)(input, { length,\n        omission: '…' });\n};\nexports.truncateString = truncateString;\n/**\n * @todo Make it work with ASCII content.\n */\nconst truncateTableData = (rows, truncates) => {\n    return rows.map((cells) => {\n        return cells.map((cell, cellIndex) => {\n            return (0, exports.truncateString)(cell, truncates[cellIndex]);\n        });\n    });\n};\nexports.truncateTableData = truncateTableData;\n//# sourceMappingURL=truncateTableData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdHJ1bmNhdGVUYWJsZURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUIsR0FBRyxzQkFBc0I7QUFDbEQsMENBQTBDLG1CQUFPLENBQUMsc0VBQWlCO0FBQ25FO0FBQ0EsbURBQW1EO0FBQ25ELHVCQUF1QjtBQUN2QjtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL3RydW5jYXRlVGFibGVEYXRhLmpzP2QyZTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRydW5jYXRlVGFibGVEYXRhID0gZXhwb3J0cy50cnVuY2F0ZVN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IGxvZGFzaF90cnVuY2F0ZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJsb2Rhc2gudHJ1bmNhdGVcIikpO1xuY29uc3QgdHJ1bmNhdGVTdHJpbmcgPSAoaW5wdXQsIGxlbmd0aCkgPT4ge1xuICAgIHJldHVybiAoMCwgbG9kYXNoX3RydW5jYXRlXzEuZGVmYXVsdCkoaW5wdXQsIHsgbGVuZ3RoLFxuICAgICAgICBvbWlzc2lvbjogJ+KApicgfSk7XG59O1xuZXhwb3J0cy50cnVuY2F0ZVN0cmluZyA9IHRydW5jYXRlU3RyaW5nO1xuLyoqXG4gKiBAdG9kbyBNYWtlIGl0IHdvcmsgd2l0aCBBU0NJSSBjb250ZW50LlxuICovXG5jb25zdCB0cnVuY2F0ZVRhYmxlRGF0YSA9IChyb3dzLCB0cnVuY2F0ZXMpID0+IHtcbiAgICByZXR1cm4gcm93cy5tYXAoKGNlbGxzKSA9PiB7XG4gICAgICAgIHJldHVybiBjZWxscy5tYXAoKGNlbGwsIGNlbGxJbmRleCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBleHBvcnRzLnRydW5jYXRlU3RyaW5nKShjZWxsLCB0cnVuY2F0ZXNbY2VsbEluZGV4XSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcbmV4cG9ydHMudHJ1bmNhdGVUYWJsZURhdGEgPSB0cnVuY2F0ZVRhYmxlRGF0YTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRydW5jYXRlVGFibGVEYXRhLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/truncateTableData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/types/api.js":
/*!**************************************************!*\
  !*** ./node_modules/table/dist/src/types/api.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdHlwZXMvYXBpLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy90eXBlcy9hcGkuanM/NmYzYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/types/api.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/table/dist/src/utils.js ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isCellInRange = exports.areCellEqual = exports.calculateRangeCoordinate = exports.flatten = exports.extractTruncates = exports.sumArray = exports.sequence = exports.distributeUnevenly = exports.countSpaceSequence = exports.groupBySizes = exports.makeBorderConfig = exports.splitAnsi = exports.normalizeString = void 0;\nconst slice_ansi_1 = __importDefault(__webpack_require__(/*! slice-ansi */ \"(ssr)/./node_modules/slice-ansi/index.js\"));\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"(ssr)/./node_modules/string-width/index.js\"));\nconst strip_ansi_1 = __importDefault(__webpack_require__(/*! strip-ansi */ \"(ssr)/./node_modules/strip-ansi/index.js\"));\nconst getBorderCharacters_1 = __webpack_require__(/*! ./getBorderCharacters */ \"(ssr)/./node_modules/table/dist/src/getBorderCharacters.js\");\n/**\n * Converts Windows-style newline to Unix-style\n *\n * @internal\n */\nconst normalizeString = (input) => {\n    return input.replace(/\\r\\n/g, '\\n');\n};\nexports.normalizeString = normalizeString;\n/**\n * Splits ansi string by newlines\n *\n * @internal\n */\nconst splitAnsi = (input) => {\n    const lengths = (0, strip_ansi_1.default)(input).split('\\n').map(string_width_1.default);\n    const result = [];\n    let startIndex = 0;\n    lengths.forEach((length) => {\n        result.push(length === 0 ? '' : (0, slice_ansi_1.default)(input, startIndex, startIndex + length));\n        // Plus 1 for the newline character itself\n        startIndex += length + 1;\n    });\n    return result;\n};\nexports.splitAnsi = splitAnsi;\n/**\n * Merges user provided border characters with the default border (\"honeywell\") characters.\n *\n * @internal\n */\nconst makeBorderConfig = (border) => {\n    return {\n        ...(0, getBorderCharacters_1.getBorderCharacters)('honeywell'),\n        ...border,\n    };\n};\nexports.makeBorderConfig = makeBorderConfig;\n/**\n * Groups the array into sub-arrays by sizes.\n *\n * @internal\n * @example\n * groupBySizes(['a', 'b', 'c', 'd', 'e'], [2, 1, 2]) = [ ['a', 'b'], ['c'], ['d', 'e'] ]\n */\nconst groupBySizes = (array, sizes) => {\n    let startIndex = 0;\n    return sizes.map((size) => {\n        const group = array.slice(startIndex, startIndex + size);\n        startIndex += size;\n        return group;\n    });\n};\nexports.groupBySizes = groupBySizes;\n/**\n * Counts the number of continuous spaces in a string\n *\n * @internal\n * @example\n * countGroupSpaces('a  bc  de f') = 3\n */\nconst countSpaceSequence = (input) => {\n    var _a, _b;\n    return (_b = (_a = input.match(/\\s+/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n};\nexports.countSpaceSequence = countSpaceSequence;\n/**\n * Creates the non-increasing number array given sum and length\n * whose the difference between maximum and minimum is not greater than 1\n *\n * @internal\n * @example\n * distributeUnevenly(6, 3) = [2, 2, 2]\n * distributeUnevenly(8, 3) = [3, 3, 2]\n */\nconst distributeUnevenly = (sum, length) => {\n    const result = Array.from({ length }).fill(Math.floor(sum / length));\n    return result.map((element, index) => {\n        return element + (index < sum % length ? 1 : 0);\n    });\n};\nexports.distributeUnevenly = distributeUnevenly;\nconst sequence = (start, end) => {\n    return Array.from({ length: end - start + 1 }, (_, index) => {\n        return index + start;\n    });\n};\nexports.sequence = sequence;\nconst sumArray = (array) => {\n    return array.reduce((accumulator, element) => {\n        return accumulator + element;\n    }, 0);\n};\nexports.sumArray = sumArray;\nconst extractTruncates = (config) => {\n    return config.columns.map(({ truncate }) => {\n        return truncate;\n    });\n};\nexports.extractTruncates = extractTruncates;\nconst flatten = (array) => {\n    return [].concat(...array);\n};\nexports.flatten = flatten;\nconst calculateRangeCoordinate = (spanningCellConfig) => {\n    const { row, col, colSpan = 1, rowSpan = 1 } = spanningCellConfig;\n    return { bottomRight: { col: col + colSpan - 1,\n            row: row + rowSpan - 1 },\n        topLeft: { col,\n            row } };\n};\nexports.calculateRangeCoordinate = calculateRangeCoordinate;\nconst areCellEqual = (cell1, cell2) => {\n    return cell1.row === cell2.row && cell1.col === cell2.col;\n};\nexports.areCellEqual = areCellEqual;\nconst isCellInRange = (cell, { topLeft, bottomRight }) => {\n    return (topLeft.row <= cell.row &&\n        cell.row <= bottomRight.row &&\n        topLeft.col <= cell.col &&\n        cell.col <= bottomRight.col);\n};\nexports.isCellInRange = isCellInRange;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUIsR0FBRyxvQkFBb0IsR0FBRyxnQ0FBZ0MsR0FBRyxlQUFlLEdBQUcsd0JBQXdCLEdBQUcsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsMEJBQTBCLEdBQUcsMEJBQTBCLEdBQUcsb0JBQW9CLEdBQUcsd0JBQXdCLEdBQUcsaUJBQWlCLEdBQUcsdUJBQXVCO0FBQzVULHFDQUFxQyxtQkFBTyxDQUFDLDREQUFZO0FBQ3pELHVDQUF1QyxtQkFBTyxDQUFDLGdFQUFjO0FBQzdELHFDQUFxQyxtQkFBTyxDQUFDLDREQUFZO0FBQ3pELDhCQUE4QixtQkFBTyxDQUFDLHlGQUF1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFFBQVE7QUFDeEM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBLHdCQUF3Qix5QkFBeUI7QUFDakQ7QUFDQSxLQUFLO0FBQ0w7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0EsaUNBQWlDLFVBQVU7QUFDM0M7QUFDQSxLQUFLO0FBQ0w7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0EsWUFBWSxxQ0FBcUM7QUFDakQsYUFBYSxlQUFlO0FBQzVCLG9DQUFvQztBQUNwQyxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEIsK0JBQStCLHNCQUFzQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy91dGlscy5qcz80MGEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc0NlbGxJblJhbmdlID0gZXhwb3J0cy5hcmVDZWxsRXF1YWwgPSBleHBvcnRzLmNhbGN1bGF0ZVJhbmdlQ29vcmRpbmF0ZSA9IGV4cG9ydHMuZmxhdHRlbiA9IGV4cG9ydHMuZXh0cmFjdFRydW5jYXRlcyA9IGV4cG9ydHMuc3VtQXJyYXkgPSBleHBvcnRzLnNlcXVlbmNlID0gZXhwb3J0cy5kaXN0cmlidXRlVW5ldmVubHkgPSBleHBvcnRzLmNvdW50U3BhY2VTZXF1ZW5jZSA9IGV4cG9ydHMuZ3JvdXBCeVNpemVzID0gZXhwb3J0cy5tYWtlQm9yZGVyQ29uZmlnID0gZXhwb3J0cy5zcGxpdEFuc2kgPSBleHBvcnRzLm5vcm1hbGl6ZVN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IHNsaWNlX2Fuc2lfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2xpY2UtYW5zaVwiKSk7XG5jb25zdCBzdHJpbmdfd2lkdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3RyaW5nLXdpZHRoXCIpKTtcbmNvbnN0IHN0cmlwX2Fuc2lfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3RyaXAtYW5zaVwiKSk7XG5jb25zdCBnZXRCb3JkZXJDaGFyYWN0ZXJzXzEgPSByZXF1aXJlKFwiLi9nZXRCb3JkZXJDaGFyYWN0ZXJzXCIpO1xuLyoqXG4gKiBDb252ZXJ0cyBXaW5kb3dzLXN0eWxlIG5ld2xpbmUgdG8gVW5peC1zdHlsZVxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5jb25zdCBub3JtYWxpemVTdHJpbmcgPSAoaW5wdXQpID0+IHtcbiAgICByZXR1cm4gaW5wdXQucmVwbGFjZSgvXFxyXFxuL2csICdcXG4nKTtcbn07XG5leHBvcnRzLm5vcm1hbGl6ZVN0cmluZyA9IG5vcm1hbGl6ZVN0cmluZztcbi8qKlxuICogU3BsaXRzIGFuc2kgc3RyaW5nIGJ5IG5ld2xpbmVzXG4gKlxuICogQGludGVybmFsXG4gKi9cbmNvbnN0IHNwbGl0QW5zaSA9IChpbnB1dCkgPT4ge1xuICAgIGNvbnN0IGxlbmd0aHMgPSAoMCwgc3RyaXBfYW5zaV8xLmRlZmF1bHQpKGlucHV0KS5zcGxpdCgnXFxuJykubWFwKHN0cmluZ193aWR0aF8xLmRlZmF1bHQpO1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGxldCBzdGFydEluZGV4ID0gMDtcbiAgICBsZW5ndGhzLmZvckVhY2goKGxlbmd0aCkgPT4ge1xuICAgICAgICByZXN1bHQucHVzaChsZW5ndGggPT09IDAgPyAnJyA6ICgwLCBzbGljZV9hbnNpXzEuZGVmYXVsdCkoaW5wdXQsIHN0YXJ0SW5kZXgsIHN0YXJ0SW5kZXggKyBsZW5ndGgpKTtcbiAgICAgICAgLy8gUGx1cyAxIGZvciB0aGUgbmV3bGluZSBjaGFyYWN0ZXIgaXRzZWxmXG4gICAgICAgIHN0YXJ0SW5kZXggKz0gbGVuZ3RoICsgMTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbmV4cG9ydHMuc3BsaXRBbnNpID0gc3BsaXRBbnNpO1xuLyoqXG4gKiBNZXJnZXMgdXNlciBwcm92aWRlZCBib3JkZXIgY2hhcmFjdGVycyB3aXRoIHRoZSBkZWZhdWx0IGJvcmRlciAoXCJob25leXdlbGxcIikgY2hhcmFjdGVycy5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuY29uc3QgbWFrZUJvcmRlckNvbmZpZyA9IChib3JkZXIpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICAuLi4oMCwgZ2V0Qm9yZGVyQ2hhcmFjdGVyc18xLmdldEJvcmRlckNoYXJhY3RlcnMpKCdob25leXdlbGwnKSxcbiAgICAgICAgLi4uYm9yZGVyLFxuICAgIH07XG59O1xuZXhwb3J0cy5tYWtlQm9yZGVyQ29uZmlnID0gbWFrZUJvcmRlckNvbmZpZztcbi8qKlxuICogR3JvdXBzIHRoZSBhcnJheSBpbnRvIHN1Yi1hcnJheXMgYnkgc2l6ZXMuXG4gKlxuICogQGludGVybmFsXG4gKiBAZXhhbXBsZVxuICogZ3JvdXBCeVNpemVzKFsnYScsICdiJywgJ2MnLCAnZCcsICdlJ10sIFsyLCAxLCAyXSkgPSBbIFsnYScsICdiJ10sIFsnYyddLCBbJ2QnLCAnZSddIF1cbiAqL1xuY29uc3QgZ3JvdXBCeVNpemVzID0gKGFycmF5LCBzaXplcykgPT4ge1xuICAgIGxldCBzdGFydEluZGV4ID0gMDtcbiAgICByZXR1cm4gc2l6ZXMubWFwKChzaXplKSA9PiB7XG4gICAgICAgIGNvbnN0IGdyb3VwID0gYXJyYXkuc2xpY2Uoc3RhcnRJbmRleCwgc3RhcnRJbmRleCArIHNpemUpO1xuICAgICAgICBzdGFydEluZGV4ICs9IHNpemU7XG4gICAgICAgIHJldHVybiBncm91cDtcbiAgICB9KTtcbn07XG5leHBvcnRzLmdyb3VwQnlTaXplcyA9IGdyb3VwQnlTaXplcztcbi8qKlxuICogQ291bnRzIHRoZSBudW1iZXIgb2YgY29udGludW91cyBzcGFjZXMgaW4gYSBzdHJpbmdcbiAqXG4gKiBAaW50ZXJuYWxcbiAqIEBleGFtcGxlXG4gKiBjb3VudEdyb3VwU3BhY2VzKCdhICBiYyAgZGUgZicpID0gM1xuICovXG5jb25zdCBjb3VudFNwYWNlU2VxdWVuY2UgPSAoaW5wdXQpID0+IHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoX2IgPSAoX2EgPSBpbnB1dC5tYXRjaCgvXFxzKy9nKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmxlbmd0aCkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogMDtcbn07XG5leHBvcnRzLmNvdW50U3BhY2VTZXF1ZW5jZSA9IGNvdW50U3BhY2VTZXF1ZW5jZTtcbi8qKlxuICogQ3JlYXRlcyB0aGUgbm9uLWluY3JlYXNpbmcgbnVtYmVyIGFycmF5IGdpdmVuIHN1bSBhbmQgbGVuZ3RoXG4gKiB3aG9zZSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIG1heGltdW0gYW5kIG1pbmltdW0gaXMgbm90IGdyZWF0ZXIgdGhhbiAxXG4gKlxuICogQGludGVybmFsXG4gKiBAZXhhbXBsZVxuICogZGlzdHJpYnV0ZVVuZXZlbmx5KDYsIDMpID0gWzIsIDIsIDJdXG4gKiBkaXN0cmlidXRlVW5ldmVubHkoOCwgMykgPSBbMywgMywgMl1cbiAqL1xuY29uc3QgZGlzdHJpYnV0ZVVuZXZlbmx5ID0gKHN1bSwgbGVuZ3RoKSA9PiB7XG4gICAgY29uc3QgcmVzdWx0ID0gQXJyYXkuZnJvbSh7IGxlbmd0aCB9KS5maWxsKE1hdGguZmxvb3Ioc3VtIC8gbGVuZ3RoKSk7XG4gICAgcmV0dXJuIHJlc3VsdC5tYXAoKGVsZW1lbnQsIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBlbGVtZW50ICsgKGluZGV4IDwgc3VtICUgbGVuZ3RoID8gMSA6IDApO1xuICAgIH0pO1xufTtcbmV4cG9ydHMuZGlzdHJpYnV0ZVVuZXZlbmx5ID0gZGlzdHJpYnV0ZVVuZXZlbmx5O1xuY29uc3Qgc2VxdWVuY2UgPSAoc3RhcnQsIGVuZCkgPT4ge1xuICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBlbmQgLSBzdGFydCArIDEgfSwgKF8sIGluZGV4KSA9PiB7XG4gICAgICAgIHJldHVybiBpbmRleCArIHN0YXJ0O1xuICAgIH0pO1xufTtcbmV4cG9ydHMuc2VxdWVuY2UgPSBzZXF1ZW5jZTtcbmNvbnN0IHN1bUFycmF5ID0gKGFycmF5KSA9PiB7XG4gICAgcmV0dXJuIGFycmF5LnJlZHVjZSgoYWNjdW11bGF0b3IsIGVsZW1lbnQpID0+IHtcbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yICsgZWxlbWVudDtcbiAgICB9LCAwKTtcbn07XG5leHBvcnRzLnN1bUFycmF5ID0gc3VtQXJyYXk7XG5jb25zdCBleHRyYWN0VHJ1bmNhdGVzID0gKGNvbmZpZykgPT4ge1xuICAgIHJldHVybiBjb25maWcuY29sdW1ucy5tYXAoKHsgdHJ1bmNhdGUgfSkgPT4ge1xuICAgICAgICByZXR1cm4gdHJ1bmNhdGU7XG4gICAgfSk7XG59O1xuZXhwb3J0cy5leHRyYWN0VHJ1bmNhdGVzID0gZXh0cmFjdFRydW5jYXRlcztcbmNvbnN0IGZsYXR0ZW4gPSAoYXJyYXkpID0+IHtcbiAgICByZXR1cm4gW10uY29uY2F0KC4uLmFycmF5KTtcbn07XG5leHBvcnRzLmZsYXR0ZW4gPSBmbGF0dGVuO1xuY29uc3QgY2FsY3VsYXRlUmFuZ2VDb29yZGluYXRlID0gKHNwYW5uaW5nQ2VsbENvbmZpZykgPT4ge1xuICAgIGNvbnN0IHsgcm93LCBjb2wsIGNvbFNwYW4gPSAxLCByb3dTcGFuID0gMSB9ID0gc3Bhbm5pbmdDZWxsQ29uZmlnO1xuICAgIHJldHVybiB7IGJvdHRvbVJpZ2h0OiB7IGNvbDogY29sICsgY29sU3BhbiAtIDEsXG4gICAgICAgICAgICByb3c6IHJvdyArIHJvd1NwYW4gLSAxIH0sXG4gICAgICAgIHRvcExlZnQ6IHsgY29sLFxuICAgICAgICAgICAgcm93IH0gfTtcbn07XG5leHBvcnRzLmNhbGN1bGF0ZVJhbmdlQ29vcmRpbmF0ZSA9IGNhbGN1bGF0ZVJhbmdlQ29vcmRpbmF0ZTtcbmNvbnN0IGFyZUNlbGxFcXVhbCA9IChjZWxsMSwgY2VsbDIpID0+IHtcbiAgICByZXR1cm4gY2VsbDEucm93ID09PSBjZWxsMi5yb3cgJiYgY2VsbDEuY29sID09PSBjZWxsMi5jb2w7XG59O1xuZXhwb3J0cy5hcmVDZWxsRXF1YWwgPSBhcmVDZWxsRXF1YWw7XG5jb25zdCBpc0NlbGxJblJhbmdlID0gKGNlbGwsIHsgdG9wTGVmdCwgYm90dG9tUmlnaHQgfSkgPT4ge1xuICAgIHJldHVybiAodG9wTGVmdC5yb3cgPD0gY2VsbC5yb3cgJiZcbiAgICAgICAgY2VsbC5yb3cgPD0gYm90dG9tUmlnaHQucm93ICYmXG4gICAgICAgIHRvcExlZnQuY29sIDw9IGNlbGwuY29sICYmXG4gICAgICAgIGNlbGwuY29sIDw9IGJvdHRvbVJpZ2h0LmNvbCk7XG59O1xuZXhwb3J0cy5pc0NlbGxJblJhbmdlID0gaXNDZWxsSW5SYW5nZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/validateConfig.js":
/*!*******************************************************!*\
  !*** ./node_modules/table/dist/src/validateConfig.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateConfig = void 0;\nconst validators_1 = __importDefault(__webpack_require__(/*! ./generated/validators */ \"(ssr)/./node_modules/table/dist/src/generated/validators.js\"));\nconst validateConfig = (schemaId, config) => {\n    const validate = validators_1.default[schemaId];\n    if (!validate(config) && validate.errors) {\n        // eslint-disable-next-line promise/prefer-await-to-callbacks\n        const errors = validate.errors.map((error) => {\n            return {\n                message: error.message,\n                params: error.params,\n                schemaPath: error.schemaPath,\n            };\n        });\n        /* eslint-disable no-console */\n        console.log('config', config);\n        console.log('errors', errors);\n        /* eslint-enable no-console */\n        throw new Error('Invalid config.');\n    }\n};\nexports.validateConfig = validateConfig;\n//# sourceMappingURL=validateConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdmFsaWRhdGVDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIscUNBQXFDLG1CQUFPLENBQUMsMkZBQXdCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy92YWxpZGF0ZUNvbmZpZy5qcz9iYjM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52YWxpZGF0ZUNvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IHZhbGlkYXRvcnNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9nZW5lcmF0ZWQvdmFsaWRhdG9yc1wiKSk7XG5jb25zdCB2YWxpZGF0ZUNvbmZpZyA9IChzY2hlbWFJZCwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgdmFsaWRhdGUgPSB2YWxpZGF0b3JzXzEuZGVmYXVsdFtzY2hlbWFJZF07XG4gICAgaWYgKCF2YWxpZGF0ZShjb25maWcpICYmIHZhbGlkYXRlLmVycm9ycykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJvbWlzZS9wcmVmZXItYXdhaXQtdG8tY2FsbGJhY2tzXG4gICAgICAgIGNvbnN0IGVycm9ycyA9IHZhbGlkYXRlLmVycm9ycy5tYXAoKGVycm9yKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgcGFyYW1zOiBlcnJvci5wYXJhbXMsXG4gICAgICAgICAgICAgICAgc2NoZW1hUGF0aDogZXJyb3Iuc2NoZW1hUGF0aCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIGNvbnNvbGUubG9nKCdjb25maWcnLCBjb25maWcpO1xuICAgICAgICBjb25zb2xlLmxvZygnZXJyb3JzJywgZXJyb3JzKTtcbiAgICAgICAgLyogZXNsaW50LWVuYWJsZSBuby1jb25zb2xlICovXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBjb25maWcuJyk7XG4gICAgfVxufTtcbmV4cG9ydHMudmFsaWRhdGVDb25maWcgPSB2YWxpZGF0ZUNvbmZpZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbGlkYXRlQ29uZmlnLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/validateConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/validateSpanningCellConfig.js":
/*!*******************************************************************!*\
  !*** ./node_modules/table/dist/src/validateSpanningCellConfig.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateSpanningCellConfig = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst inRange = (start, end, value) => {\n    return start <= value && value <= end;\n};\nconst validateSpanningCellConfig = (rows, configs) => {\n    const [nRow, nCol] = [rows.length, rows[0].length];\n    configs.forEach((config, configIndex) => {\n        const { colSpan, rowSpan } = config;\n        if (colSpan === undefined && rowSpan === undefined) {\n            throw new Error(`Expect at least colSpan or rowSpan is provided in config.spanningCells[${configIndex}]`);\n        }\n        if (colSpan !== undefined && colSpan < 1) {\n            throw new Error(`Expect colSpan is not equal zero, instead got: ${colSpan} in config.spanningCells[${configIndex}]`);\n        }\n        if (rowSpan !== undefined && rowSpan < 1) {\n            throw new Error(`Expect rowSpan is not equal zero, instead got: ${rowSpan} in config.spanningCells[${configIndex}]`);\n        }\n    });\n    const rangeCoordinates = configs.map(utils_1.calculateRangeCoordinate);\n    rangeCoordinates.forEach(({ topLeft, bottomRight }, rangeIndex) => {\n        if (!inRange(0, nCol - 1, topLeft.col) ||\n            !inRange(0, nRow - 1, topLeft.row) ||\n            !inRange(0, nCol - 1, bottomRight.col) ||\n            !inRange(0, nRow - 1, bottomRight.row)) {\n            throw new Error(`Some cells in config.spanningCells[${rangeIndex}] are out of the table`);\n        }\n    });\n    const configOccupy = Array.from({ length: nRow }, () => {\n        return Array.from({ length: nCol });\n    });\n    rangeCoordinates.forEach(({ topLeft, bottomRight }, rangeIndex) => {\n        (0, utils_1.sequence)(topLeft.row, bottomRight.row).forEach((row) => {\n            (0, utils_1.sequence)(topLeft.col, bottomRight.col).forEach((col) => {\n                if (configOccupy[row][col] !== undefined) {\n                    throw new Error(`Spanning cells in config.spanningCells[${configOccupy[row][col]}] and config.spanningCells[${rangeIndex}] are overlap each other`);\n                }\n                configOccupy[row][col] = rangeIndex;\n            });\n        });\n    });\n};\nexports.validateSpanningCellConfig = validateSpanningCellConfig;\n//# sourceMappingURL=validateSpanningCellConfig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdmFsaWRhdGVTcGFubmluZ0NlbGxDb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtQkFBbUI7QUFDbkM7QUFDQSxzR0FBc0csWUFBWTtBQUNsSDtBQUNBO0FBQ0EsOEVBQThFLFNBQVMsMEJBQTBCLFlBQVk7QUFDN0g7QUFDQTtBQUNBLDhFQUE4RSxTQUFTLDBCQUEwQixZQUFZO0FBQzdIO0FBQ0EsS0FBSztBQUNMO0FBQ0EsZ0NBQWdDLHNCQUFzQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxXQUFXO0FBQzdFO0FBQ0EsS0FBSztBQUNMLHNDQUFzQyxjQUFjO0FBQ3BELDRCQUE0QixjQUFjO0FBQzFDLEtBQUs7QUFDTCxnQ0FBZ0Msc0JBQXNCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLDhFQUE4RSx1QkFBdUIsNkJBQTZCLFdBQVc7QUFDN0k7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0Esa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy92YWxpZGF0ZVNwYW5uaW5nQ2VsbENvbmZpZy5qcz85NGU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy52YWxpZGF0ZVNwYW5uaW5nQ2VsbENvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IGluUmFuZ2UgPSAoc3RhcnQsIGVuZCwgdmFsdWUpID0+IHtcbiAgICByZXR1cm4gc3RhcnQgPD0gdmFsdWUgJiYgdmFsdWUgPD0gZW5kO1xufTtcbmNvbnN0IHZhbGlkYXRlU3Bhbm5pbmdDZWxsQ29uZmlnID0gKHJvd3MsIGNvbmZpZ3MpID0+IHtcbiAgICBjb25zdCBbblJvdywgbkNvbF0gPSBbcm93cy5sZW5ndGgsIHJvd3NbMF0ubGVuZ3RoXTtcbiAgICBjb25maWdzLmZvckVhY2goKGNvbmZpZywgY29uZmlnSW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgeyBjb2xTcGFuLCByb3dTcGFuIH0gPSBjb25maWc7XG4gICAgICAgIGlmIChjb2xTcGFuID09PSB1bmRlZmluZWQgJiYgcm93U3BhbiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdCBhdCBsZWFzdCBjb2xTcGFuIG9yIHJvd1NwYW4gaXMgcHJvdmlkZWQgaW4gY29uZmlnLnNwYW5uaW5nQ2VsbHNbJHtjb25maWdJbmRleH1dYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbFNwYW4gIT09IHVuZGVmaW5lZCAmJiBjb2xTcGFuIDwgMSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3QgY29sU3BhbiBpcyBub3QgZXF1YWwgemVybywgaW5zdGVhZCBnb3Q6ICR7Y29sU3Bhbn0gaW4gY29uZmlnLnNwYW5uaW5nQ2VsbHNbJHtjb25maWdJbmRleH1dYCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJvd1NwYW4gIT09IHVuZGVmaW5lZCAmJiByb3dTcGFuIDwgMSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3Qgcm93U3BhbiBpcyBub3QgZXF1YWwgemVybywgaW5zdGVhZCBnb3Q6ICR7cm93U3Bhbn0gaW4gY29uZmlnLnNwYW5uaW5nQ2VsbHNbJHtjb25maWdJbmRleH1dYCk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBjb25zdCByYW5nZUNvb3JkaW5hdGVzID0gY29uZmlncy5tYXAodXRpbHNfMS5jYWxjdWxhdGVSYW5nZUNvb3JkaW5hdGUpO1xuICAgIHJhbmdlQ29vcmRpbmF0ZXMuZm9yRWFjaCgoeyB0b3BMZWZ0LCBib3R0b21SaWdodCB9LCByYW5nZUluZGV4KSA9PiB7XG4gICAgICAgIGlmICghaW5SYW5nZSgwLCBuQ29sIC0gMSwgdG9wTGVmdC5jb2wpIHx8XG4gICAgICAgICAgICAhaW5SYW5nZSgwLCBuUm93IC0gMSwgdG9wTGVmdC5yb3cpIHx8XG4gICAgICAgICAgICAhaW5SYW5nZSgwLCBuQ29sIC0gMSwgYm90dG9tUmlnaHQuY29sKSB8fFxuICAgICAgICAgICAgIWluUmFuZ2UoMCwgblJvdyAtIDEsIGJvdHRvbVJpZ2h0LnJvdykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgU29tZSBjZWxscyBpbiBjb25maWcuc3Bhbm5pbmdDZWxsc1ske3JhbmdlSW5kZXh9XSBhcmUgb3V0IG9mIHRoZSB0YWJsZWApO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3QgY29uZmlnT2NjdXB5ID0gQXJyYXkuZnJvbSh7IGxlbmd0aDogblJvdyB9LCAoKSA9PiB7XG4gICAgICAgIHJldHVybiBBcnJheS5mcm9tKHsgbGVuZ3RoOiBuQ29sIH0pO1xuICAgIH0pO1xuICAgIHJhbmdlQ29vcmRpbmF0ZXMuZm9yRWFjaCgoeyB0b3BMZWZ0LCBib3R0b21SaWdodCB9LCByYW5nZUluZGV4KSA9PiB7XG4gICAgICAgICgwLCB1dGlsc18xLnNlcXVlbmNlKSh0b3BMZWZ0LnJvdywgYm90dG9tUmlnaHQucm93KS5mb3JFYWNoKChyb3cpID0+IHtcbiAgICAgICAgICAgICgwLCB1dGlsc18xLnNlcXVlbmNlKSh0b3BMZWZ0LmNvbCwgYm90dG9tUmlnaHQuY29sKS5mb3JFYWNoKChjb2wpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoY29uZmlnT2NjdXB5W3Jvd11bY29sXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgU3Bhbm5pbmcgY2VsbHMgaW4gY29uZmlnLnNwYW5uaW5nQ2VsbHNbJHtjb25maWdPY2N1cHlbcm93XVtjb2xdfV0gYW5kIGNvbmZpZy5zcGFubmluZ0NlbGxzWyR7cmFuZ2VJbmRleH1dIGFyZSBvdmVybGFwIGVhY2ggb3RoZXJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uZmlnT2NjdXB5W3Jvd11bY29sXSA9IHJhbmdlSW5kZXg7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59O1xuZXhwb3J0cy52YWxpZGF0ZVNwYW5uaW5nQ2VsbENvbmZpZyA9IHZhbGlkYXRlU3Bhbm5pbmdDZWxsQ29uZmlnO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGVTcGFubmluZ0NlbGxDb25maWcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/validateSpanningCellConfig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/validateTableData.js":
/*!**********************************************************!*\
  !*** ./node_modules/table/dist/src/validateTableData.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.validateTableData = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst validateTableData = (rows) => {\n    if (!Array.isArray(rows)) {\n        throw new TypeError('Table data must be an array.');\n    }\n    if (rows.length === 0) {\n        throw new Error('Table must define at least one row.');\n    }\n    if (rows[0].length === 0) {\n        throw new Error('Table must define at least one column.');\n    }\n    const columnNumber = rows[0].length;\n    for (const row of rows) {\n        if (!Array.isArray(row)) {\n            throw new TypeError('Table row data must be an array.');\n        }\n        if (row.length !== columnNumber) {\n            throw new Error('Table must have a consistent number of cells.');\n        }\n        for (const cell of row) {\n            // eslint-disable-next-line no-control-regex\n            if (/[\\u0001-\\u0006\\u0008\\u0009\\u000B-\\u001A]/.test((0, utils_1.normalizeString)(String(cell)))) {\n                throw new Error('Table data must not contain control characters.');\n            }\n        }\n    }\n};\nexports.validateTableData = validateTableData;\n//# sourceMappingURL=validateTableData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvdmFsaWRhdGVUYWJsZURhdGEuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QseUJBQXlCO0FBQ3pCLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL3ZhbGlkYXRlVGFibGVEYXRhLmpzPzQwMzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnZhbGlkYXRlVGFibGVEYXRhID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY29uc3QgdmFsaWRhdGVUYWJsZURhdGEgPSAocm93cykgPT4ge1xuICAgIGlmICghQXJyYXkuaXNBcnJheShyb3dzKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUYWJsZSBkYXRhIG11c3QgYmUgYW4gYXJyYXkuJyk7XG4gICAgfVxuICAgIGlmIChyb3dzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RhYmxlIG11c3QgZGVmaW5lIGF0IGxlYXN0IG9uZSByb3cuJyk7XG4gICAgfVxuICAgIGlmIChyb3dzWzBdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RhYmxlIG11c3QgZGVmaW5lIGF0IGxlYXN0IG9uZSBjb2x1bW4uJyk7XG4gICAgfVxuICAgIGNvbnN0IGNvbHVtbk51bWJlciA9IHJvd3NbMF0ubGVuZ3RoO1xuICAgIGZvciAoY29uc3Qgcm93IG9mIHJvd3MpIHtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHJvdykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1RhYmxlIHJvdyBkYXRhIG11c3QgYmUgYW4gYXJyYXkuJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJvdy5sZW5ndGggIT09IGNvbHVtbk51bWJlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUYWJsZSBtdXN0IGhhdmUgYSBjb25zaXN0ZW50IG51bWJlciBvZiBjZWxscy4nKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IGNlbGwgb2Ygcm93KSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udHJvbC1yZWdleFxuICAgICAgICAgICAgaWYgKC9bXFx1MDAwMS1cXHUwMDA2XFx1MDAwOFxcdTAwMDlcXHUwMDBCLVxcdTAwMUFdLy50ZXN0KCgwLCB1dGlsc18xLm5vcm1hbGl6ZVN0cmluZykoU3RyaW5nKGNlbGwpKSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1RhYmxlIGRhdGEgbXVzdCBub3QgY29udGFpbiBjb250cm9sIGNoYXJhY3RlcnMuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59O1xuZXhwb3J0cy52YWxpZGF0ZVRhYmxlRGF0YSA9IHZhbGlkYXRlVGFibGVEYXRhO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmFsaWRhdGVUYWJsZURhdGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/validateTableData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/wrapCell.js":
/*!*************************************************!*\
  !*** ./node_modules/table/dist/src/wrapCell.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapCell = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/table/dist/src/utils.js\");\nconst wrapString_1 = __webpack_require__(/*! ./wrapString */ \"(ssr)/./node_modules/table/dist/src/wrapString.js\");\nconst wrapWord_1 = __webpack_require__(/*! ./wrapWord */ \"(ssr)/./node_modules/table/dist/src/wrapWord.js\");\n/**\n * Wrap a single cell value into a list of lines\n *\n * Always wraps on newlines, for the remainder uses either word or string wrapping\n * depending on user configuration.\n *\n */\nconst wrapCell = (cellValue, cellWidth, useWrapWord) => {\n    // First split on literal newlines\n    const cellLines = (0, utils_1.splitAnsi)(cellValue);\n    // Then iterate over the list and word-wrap every remaining line if necessary.\n    for (let lineNr = 0; lineNr < cellLines.length;) {\n        let lineChunks;\n        if (useWrapWord) {\n            lineChunks = (0, wrapWord_1.wrapWord)(cellLines[lineNr], cellWidth);\n        }\n        else {\n            lineChunks = (0, wrapString_1.wrapString)(cellLines[lineNr], cellWidth);\n        }\n        // Replace our original array element with whatever the wrapping returned\n        cellLines.splice(lineNr, 1, ...lineChunks);\n        lineNr += lineChunks.length;\n    }\n    return cellLines;\n};\nexports.wrapCell = wrapCell;\n//# sourceMappingURL=wrapCell.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvd3JhcENlbGwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCO0FBQ2hCLGdCQUFnQixtQkFBTyxDQUFDLDZEQUFTO0FBQ2pDLHFCQUFxQixtQkFBTyxDQUFDLHVFQUFjO0FBQzNDLG1CQUFtQixtQkFBTyxDQUFDLG1FQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsMEJBQTBCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy93cmFwQ2VsbC5qcz85OTA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy53cmFwQ2VsbCA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbmNvbnN0IHdyYXBTdHJpbmdfMSA9IHJlcXVpcmUoXCIuL3dyYXBTdHJpbmdcIik7XG5jb25zdCB3cmFwV29yZF8xID0gcmVxdWlyZShcIi4vd3JhcFdvcmRcIik7XG4vKipcbiAqIFdyYXAgYSBzaW5nbGUgY2VsbCB2YWx1ZSBpbnRvIGEgbGlzdCBvZiBsaW5lc1xuICpcbiAqIEFsd2F5cyB3cmFwcyBvbiBuZXdsaW5lcywgZm9yIHRoZSByZW1haW5kZXIgdXNlcyBlaXRoZXIgd29yZCBvciBzdHJpbmcgd3JhcHBpbmdcbiAqIGRlcGVuZGluZyBvbiB1c2VyIGNvbmZpZ3VyYXRpb24uXG4gKlxuICovXG5jb25zdCB3cmFwQ2VsbCA9IChjZWxsVmFsdWUsIGNlbGxXaWR0aCwgdXNlV3JhcFdvcmQpID0+IHtcbiAgICAvLyBGaXJzdCBzcGxpdCBvbiBsaXRlcmFsIG5ld2xpbmVzXG4gICAgY29uc3QgY2VsbExpbmVzID0gKDAsIHV0aWxzXzEuc3BsaXRBbnNpKShjZWxsVmFsdWUpO1xuICAgIC8vIFRoZW4gaXRlcmF0ZSBvdmVyIHRoZSBsaXN0IGFuZCB3b3JkLXdyYXAgZXZlcnkgcmVtYWluaW5nIGxpbmUgaWYgbmVjZXNzYXJ5LlxuICAgIGZvciAobGV0IGxpbmVOciA9IDA7IGxpbmVOciA8IGNlbGxMaW5lcy5sZW5ndGg7KSB7XG4gICAgICAgIGxldCBsaW5lQ2h1bmtzO1xuICAgICAgICBpZiAodXNlV3JhcFdvcmQpIHtcbiAgICAgICAgICAgIGxpbmVDaHVua3MgPSAoMCwgd3JhcFdvcmRfMS53cmFwV29yZCkoY2VsbExpbmVzW2xpbmVOcl0sIGNlbGxXaWR0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsaW5lQ2h1bmtzID0gKDAsIHdyYXBTdHJpbmdfMS53cmFwU3RyaW5nKShjZWxsTGluZXNbbGluZU5yXSwgY2VsbFdpZHRoKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXBsYWNlIG91ciBvcmlnaW5hbCBhcnJheSBlbGVtZW50IHdpdGggd2hhdGV2ZXIgdGhlIHdyYXBwaW5nIHJldHVybmVkXG4gICAgICAgIGNlbGxMaW5lcy5zcGxpY2UobGluZU5yLCAxLCAuLi5saW5lQ2h1bmtzKTtcbiAgICAgICAgbGluZU5yICs9IGxpbmVDaHVua3MubGVuZ3RoO1xuICAgIH1cbiAgICByZXR1cm4gY2VsbExpbmVzO1xufTtcbmV4cG9ydHMud3JhcENlbGwgPSB3cmFwQ2VsbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBDZWxsLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/wrapCell.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/wrapString.js":
/*!***************************************************!*\
  !*** ./node_modules/table/dist/src/wrapString.js ***!
  \***************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapString = void 0;\nconst slice_ansi_1 = __importDefault(__webpack_require__(/*! slice-ansi */ \"(ssr)/./node_modules/slice-ansi/index.js\"));\nconst string_width_1 = __importDefault(__webpack_require__(/*! string-width */ \"(ssr)/./node_modules/string-width/index.js\"));\n/**\n * Creates an array of strings split into groups the length of size.\n * This function works with strings that contain ASCII characters.\n *\n * wrapText is different from would-be \"chunk\" implementation\n * in that whitespace characters that occur on a chunk size limit are trimmed.\n *\n */\nconst wrapString = (subject, size) => {\n    let subjectSlice = subject;\n    const chunks = [];\n    do {\n        chunks.push((0, slice_ansi_1.default)(subjectSlice, 0, size));\n        subjectSlice = (0, slice_ansi_1.default)(subjectSlice, size).trim();\n    } while ((0, string_width_1.default)(subjectSlice));\n    return chunks;\n};\nexports.wrapString = wrapString;\n//# sourceMappingURL=wrapString.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvd3JhcFN0cmluZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0EsNkNBQTZDO0FBQzdDO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixxQ0FBcUMsbUJBQU8sQ0FBQyw0REFBWTtBQUN6RCx1Q0FBdUMsbUJBQU8sQ0FBQyxnRUFBYztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly91bmlzd2FwX2Nsb25lLy4vbm9kZV9tb2R1bGVzL3RhYmxlL2Rpc3Qvc3JjL3dyYXBTdHJpbmcuanM/YzIwYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMud3JhcFN0cmluZyA9IHZvaWQgMDtcbmNvbnN0IHNsaWNlX2Fuc2lfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2xpY2UtYW5zaVwiKSk7XG5jb25zdCBzdHJpbmdfd2lkdGhfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic3RyaW5nLXdpZHRoXCIpKTtcbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBzdHJpbmdzIHNwbGl0IGludG8gZ3JvdXBzIHRoZSBsZW5ndGggb2Ygc2l6ZS5cbiAqIFRoaXMgZnVuY3Rpb24gd29ya3Mgd2l0aCBzdHJpbmdzIHRoYXQgY29udGFpbiBBU0NJSSBjaGFyYWN0ZXJzLlxuICpcbiAqIHdyYXBUZXh0IGlzIGRpZmZlcmVudCBmcm9tIHdvdWxkLWJlIFwiY2h1bmtcIiBpbXBsZW1lbnRhdGlvblxuICogaW4gdGhhdCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnMgdGhhdCBvY2N1ciBvbiBhIGNodW5rIHNpemUgbGltaXQgYXJlIHRyaW1tZWQuXG4gKlxuICovXG5jb25zdCB3cmFwU3RyaW5nID0gKHN1YmplY3QsIHNpemUpID0+IHtcbiAgICBsZXQgc3ViamVjdFNsaWNlID0gc3ViamVjdDtcbiAgICBjb25zdCBjaHVua3MgPSBbXTtcbiAgICBkbyB7XG4gICAgICAgIGNodW5rcy5wdXNoKCgwLCBzbGljZV9hbnNpXzEuZGVmYXVsdCkoc3ViamVjdFNsaWNlLCAwLCBzaXplKSk7XG4gICAgICAgIHN1YmplY3RTbGljZSA9ICgwLCBzbGljZV9hbnNpXzEuZGVmYXVsdCkoc3ViamVjdFNsaWNlLCBzaXplKS50cmltKCk7XG4gICAgfSB3aGlsZSAoKDAsIHN0cmluZ193aWR0aF8xLmRlZmF1bHQpKHN1YmplY3RTbGljZSkpO1xuICAgIHJldHVybiBjaHVua3M7XG59O1xuZXhwb3J0cy53cmFwU3RyaW5nID0gd3JhcFN0cmluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdyYXBTdHJpbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/wrapString.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/table/dist/src/wrapWord.js":
/*!*************************************************!*\
  !*** ./node_modules/table/dist/src/wrapWord.js ***!
  \*************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.wrapWord = void 0;\nconst slice_ansi_1 = __importDefault(__webpack_require__(/*! slice-ansi */ \"(ssr)/./node_modules/slice-ansi/index.js\"));\nconst strip_ansi_1 = __importDefault(__webpack_require__(/*! strip-ansi */ \"(ssr)/./node_modules/strip-ansi/index.js\"));\nconst calculateStringLengths = (input, size) => {\n    let subject = (0, strip_ansi_1.default)(input);\n    const chunks = [];\n    // https://regex101.com/r/gY5kZ1/1\n    const re = new RegExp('(^.{1,' + String(Math.max(size, 1)) + '}(\\\\s+|$))|(^.{1,' + String(Math.max(size - 1, 1)) + '}(\\\\\\\\|/|_|\\\\.|,|;|-))');\n    do {\n        let chunk;\n        const match = re.exec(subject);\n        if (match) {\n            chunk = match[0];\n            subject = subject.slice(chunk.length);\n            const trimmedLength = chunk.trim().length;\n            const offset = chunk.length - trimmedLength;\n            chunks.push([trimmedLength, offset]);\n        }\n        else {\n            chunk = subject.slice(0, size);\n            subject = subject.slice(size);\n            chunks.push([chunk.length, 0]);\n        }\n    } while (subject.length);\n    return chunks;\n};\nconst wrapWord = (input, size) => {\n    const result = [];\n    let startIndex = 0;\n    calculateStringLengths(input, size).forEach(([length, offset]) => {\n        result.push((0, slice_ansi_1.default)(input, startIndex, startIndex + length));\n        startIndex += length + offset;\n    });\n    return result;\n};\nexports.wrapWord = wrapWord;\n//# sourceMappingURL=wrapWord.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvdGFibGUvZGlzdC9zcmMvd3JhcFdvcmQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0I7QUFDaEIscUNBQXFDLG1CQUFPLENBQUMsNERBQVk7QUFDekQscUNBQXFDLG1CQUFPLENBQUMsNERBQVk7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0Isb0NBQW9DLGNBQWMsd0NBQXdDLGlCQUFpQjtBQUMxSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdW5pc3dhcF9jbG9uZS8uL25vZGVfbW9kdWxlcy90YWJsZS9kaXN0L3NyYy93cmFwV29yZC5qcz8zNTE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy53cmFwV29yZCA9IHZvaWQgMDtcbmNvbnN0IHNsaWNlX2Fuc2lfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwic2xpY2UtYW5zaVwiKSk7XG5jb25zdCBzdHJpcF9hbnNpXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInN0cmlwLWFuc2lcIikpO1xuY29uc3QgY2FsY3VsYXRlU3RyaW5nTGVuZ3RocyA9IChpbnB1dCwgc2l6ZSkgPT4ge1xuICAgIGxldCBzdWJqZWN0ID0gKDAsIHN0cmlwX2Fuc2lfMS5kZWZhdWx0KShpbnB1dCk7XG4gICAgY29uc3QgY2h1bmtzID0gW107XG4gICAgLy8gaHR0cHM6Ly9yZWdleDEwMS5jb20vci9nWTVrWjEvMVxuICAgIGNvbnN0IHJlID0gbmV3IFJlZ0V4cCgnKF4uezEsJyArIFN0cmluZyhNYXRoLm1heChzaXplLCAxKSkgKyAnfShcXFxccyt8JCkpfCheLnsxLCcgKyBTdHJpbmcoTWF0aC5tYXgoc2l6ZSAtIDEsIDEpKSArICd9KFxcXFxcXFxcfC98X3xcXFxcLnwsfDt8LSkpJyk7XG4gICAgZG8ge1xuICAgICAgICBsZXQgY2h1bms7XG4gICAgICAgIGNvbnN0IG1hdGNoID0gcmUuZXhlYyhzdWJqZWN0KTtcbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgICBjaHVuayA9IG1hdGNoWzBdO1xuICAgICAgICAgICAgc3ViamVjdCA9IHN1YmplY3Quc2xpY2UoY2h1bmsubGVuZ3RoKTtcbiAgICAgICAgICAgIGNvbnN0IHRyaW1tZWRMZW5ndGggPSBjaHVuay50cmltKCkubGVuZ3RoO1xuICAgICAgICAgICAgY29uc3Qgb2Zmc2V0ID0gY2h1bmsubGVuZ3RoIC0gdHJpbW1lZExlbmd0aDtcbiAgICAgICAgICAgIGNodW5rcy5wdXNoKFt0cmltbWVkTGVuZ3RoLCBvZmZzZXRdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNodW5rID0gc3ViamVjdC5zbGljZSgwLCBzaXplKTtcbiAgICAgICAgICAgIHN1YmplY3QgPSBzdWJqZWN0LnNsaWNlKHNpemUpO1xuICAgICAgICAgICAgY2h1bmtzLnB1c2goW2NodW5rLmxlbmd0aCwgMF0pO1xuICAgICAgICB9XG4gICAgfSB3aGlsZSAoc3ViamVjdC5sZW5ndGgpO1xuICAgIHJldHVybiBjaHVua3M7XG59O1xuY29uc3Qgd3JhcFdvcmQgPSAoaW5wdXQsIHNpemUpID0+IHtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBsZXQgc3RhcnRJbmRleCA9IDA7XG4gICAgY2FsY3VsYXRlU3RyaW5nTGVuZ3RocyhpbnB1dCwgc2l6ZSkuZm9yRWFjaCgoW2xlbmd0aCwgb2Zmc2V0XSkgPT4ge1xuICAgICAgICByZXN1bHQucHVzaCgoMCwgc2xpY2VfYW5zaV8xLmRlZmF1bHQpKGlucHV0LCBzdGFydEluZGV4LCBzdGFydEluZGV4ICsgbGVuZ3RoKSk7XG4gICAgICAgIHN0YXJ0SW5kZXggKz0gbGVuZ3RoICsgb2Zmc2V0O1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuZXhwb3J0cy53cmFwV29yZCA9IHdyYXBXb3JkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d3JhcFdvcmQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/table/dist/src/wrapWord.js\n");

/***/ })

};
;